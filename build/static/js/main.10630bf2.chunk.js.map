{"version":3,"sources":["auth/index.js","assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/buttonStyle.js","components/CustomButtons/Button.js","assets/jss/material-dashboard-react/dropdownStyle.js","assets/jss/material-dashboard-react/components/headerLinksStyle.js","components/Navbars/AdminNavbarLinks.js","assets/jss/material-dashboard-react/components/headerStyle.js","components/Navbars/Navbar.js","assets/jss/material-dashboard-react/components/sidebarStyle.js","components/Sidebar.js","assets/jss/material-dashboard-react/components/snackbarContentStyle.js","components/Snackbar/Snackbar.js","assets/jss/material-dashboard-react/components/tableStyle.js","components/TableEdit.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","components/Dialog/AddEnregistrementDB.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","components/TableDelete.js","components/Dialog/AddSemisDialog.js","components/Dialog/AddPechesDialog.js","components/Dialog/AddStatsDialog.js","components/Dialog/AddLotDialog.js","components/TableEditDelete.js","components/Lots.js","components/CyclesTable.js","components/Dialog/AddCycleDialog.js","assets/jss/material-dashboard-react/views/dashboardStyle.js","components/DateChart.js","views/AnalysesEau.js","views/AddAnalyseEau.js","components/Dialog/ConfirmChangeDialog.js","views/Alimentation.js","views/VentePescados.js","components/Dialog/AddClientDialog.js","components/Clients.js","components/Table.js","components/VentesParJour.js","components/Dialog/AddAlimentDialog.js","components/Commandes.js","views/VenteAliment.js","components/Dialog/AddInventaireDialog.js","components/Dialog/AddEntreAlimentDialog.js","components/Dialog/VoirVentes.js","views/Stocks.js","routes.js","views/Table.js","views/Cycles.js","views/AddChangementEau.js","views/VenteCamarones.js","components/AncienLots.js","components/AncienCyclesTable.js","assets/img/sidebar-2.jpg","layouts/copeyito.js","assets/img/logo.png","assets/jss/material-dashboard-react/layouts/adminStyle.js","views/AncienCycle.js","layouts/profile.js","App.js","index.js"],"names":["createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","headers","Authorization","access_token","then","r","json","useAuth","authFetch","login","logout","hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","drawerWidth","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","defaultBoxShadow","margin","paddingTop","borderTop","height","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","buttonStyle","button","minWidth","backgroundColor","position","fontSize","textTransform","letterSpacing","willChange","textAlign","whiteSpace","verticalAlign","touchAction","cursor","display","top","width","transform","left","white","rose","primary","info","success","warning","danger","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","useStyles","makeStyles","styles","RegularButton","props","classes","children","size","className","muiClasses","rest","btnClasses","classNames","Button","dropdownStyle","theme","buttonLink","breakpoints","down","links","zIndex","linkText","popperClose","popperResponsive","float","WebkitBoxShadow","popperNav","dropdown","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","clear","headerLinksStyle","search","paddingBottom","justifyContent","searchButton","searchIcon","notifications","up","right","manager","searchWrapper","AdminNavbarLinks","useState","maj","setMaj","setNotifications","notSeen","setNotSeen","openNotification","setOpenNotification","openProfile","setOpenProfile","handleCloseNotification","handleCloseProfile","useEffect","repeat","fetchData","a","response","ok","statusText","temp","i","seen","catch","e","console","log","name","message","setTimeout","error","clearTimeout","window","innerWidth","aria-owns","aria-haspopup","onClick","event","contains","target","currentTarget","icons","Hidden","mdUp","implementation","Popper","open","Boolean","anchorEl","disablePortal","TransitionProps","placement","Grow","id","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","role","map","n","MenuItem","to","component","NavLink","text","Date","time","toLocaleString","requestOptions","body","JSON","stringify","deleteNotification","Link","Divider","light","headerStyle","appBar","borderBottom","flex","appResponsive","Header","appBarClasses","AppBar","Toolbar","href","routes","prop","location","indexOf","layout","path","rtlActive","rtlName","makeBrand","smDown","IconButton","aria-label","handleDrawerToggle","sidebarStyle","drawerPaper","bottom","visibility","overflowY","drawerPaperRTL","logo","content","logoLink","logoLinkRTL","logoImage","maxHeight","img","backgroundSize","backgroundPosition","list","item","itemLink","itemIcon","itemIconRTL","itemText","itemTextRTL","whiteFont","purple","blue","green","orange","red","sidebarWrapper","overflow","overflowScrolling","activePro","Sidebar","undefined","setRole","activeRoute","routeName","image","logoText","List","key","listItemClasses","whiteFontClasses","roles","includes","activeClassName","ListItem","icon","Icon","ListItemText","disableTypography","brand","src","alt","Drawer","variant","anchor","paper","onClose","ModalProps","keepMounted","backgroundImage","snackbarContentStyle","root","flexWrap","maxWidth","top20","top40","close","iconButton","infoIcon","successIcon","warningIcon","dangerIcon","primaryIcon","roseIcon","iconMessage","actionRTL","Snackbar","place","action","messageClasses","closeNotification","anchorOrigin","vertical","horizontal","ContentProps","tableStyle","warningTableHeader","primaryTableHeader","dangerTableHeader","successTableHeader","infoTableHeader","roseTableHeader","grayTableHeader","table","borderSpacing","borderCollapse","tableHeadCell","spacing","overflowX","selectTableCell","tableRow","tableCell","tableResponsive","tableHeadRow","outline","tableBodyRow","CustomTableCell","row","onChange","isEditMode","TableCell","align","Input","value","CustomTableEdit","tableHead","tableData","tableHeaderColor","postUrl","info_for_post","React","data","rows","setRows","previous","setPrevious","tc","setTC","setMessage","setColor","handleSnackbar","cl","ms","obj","temp1","Object","keys","forEach","k","onToggleEditMode","change","state","newRows","Table","stickyHeader","TableHead","TableRow","TableBody","onRevert","cardStyle","card","flexDirection","wordWrap","cardPlain","cardProfile","cardChart","Card","plain","profile","chart","cardClasses","cardHeaderStyle","cardHeader","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","cardHeaderClasses","FormDialog","type","setOpen","especeList","setEspeceList","newData","setNewData","especes","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","Grid","justify","alignItems","xs","TextField","label","libelle","surface","profondeur","espece","FormControl","required","InputLabel","Select","labelId","espece_id","debit","taux_initial","taux_hebdomadaire","semaine","nombre_par_livre","pourcentage_aliment","DialogActions","url","cardBodyStyle","cardBody","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","onDelete","lot","date","poids","quantitelb","grpoisson","commentaire","quantite","semis","setSemis","substring","parseFloat","typePoids","destination","peches","setPeches","mortTheo","typeStat","mortalite","setStats","cycle","cycle_id","newLot","setNewLot","deleteUrl","Lots","cycle_","resetCycle","toString","setCycle","setLot","comm","setComm","lotsList","setLotsList","lotsMenu","setLotsMenu","statistiques","setData","setEspece","majLots","setMajLots","total","setTotal","lots","Typography","Cycle","FormHelperText","Lot","newLine","totalActuel","totalSemis","totalPeches","dateToday","toISOString","fecha","endLot","TableContainer","Math","mortalidad","colSpan","alimentationstat","alimentationstatpourc","alimentation","InputLabelProps","shrink","editable","bool","openCycle","setOpenCycle","Estanque","Superficie","parentNode","select","borderColor","fill","bassinsList","setBassinsList","especesList","setEspecesList","especeAdd","setEspeceAdd","open2","setOpen2","bassin","setBassin","bassin2","setBassin2","setDate","dateDebut","setDateDebut","dateFin","setDateFin","bassins","inputProps","Bassin","status","dashboardStyle","successText","dangerText","upArrowCardCategory","cardCategory","cardCategoryWhite","cardTitle","cardTitleWhite","DateChart","dateOption","series","setSeries","options","zoom","autoScaleYaxis","annotations","yaxis","y","show","xaxis","x","xStartDate","yAxisIndex","colors","dataLabels","enabled","markers","min","tickAmount","tooltip","format","gradient","shadeIntensity","opacityFrom","opacityTo","stops","selection","graphState","setGraphState","updateData","timeline","dateOneMonth","setMonth","getMonth","dateSixMonth","dateOneYear","ApexCharts","exec","getTime","cyclesList","setCyclesList","poidsAM","poidsPM","setChange","handleConfirm","ali","Poids","Poids_pm","Type_Aliment","poids_pm","aliment","FormControlLabel","control","Checkbox","checked","AddClientDialog","adresse","cedula","newClient","setNewClient","Clients","clientsList","client","setClient","inf","setInf","tableHeaders","setTableData","achats","CardContent","c","CustomTable","filtre","defaultDate","nomAliment","dateF","ventes","AddAlimentDialog","newAliment","setNewAliment","defaultProps","setCommandes","find","filter","StyleSheet","create","page","section","flexGrow","MyDocument","listeCommande","stroke","x1","y1","x2","y2","strokeWidth","reduce","partial_sum","prixTotal","prix","alimentsList","stock","newInventaire","setNewInventaire","entre","MyTextField","styled","borderBottomColor","multilineColor","dashboardRoutes","setTable","setTableHeaders","cycles","sort","b","AnalyseEau","temps","setTemps","O2","setO2","ph","setPh","SE","setSE","majBassin","setMajBassin","oxygene","se","AddAnalyseEau","loading","setLoading","fetchDate","setFetchDate","heure","o2ToSend0","setO2ToSend0","o2ToSend1","setO2ToSend1","o2ToSend2","setO2ToSend2","o2ToSend3","setO2ToSend3","Ox_list","h","O2_temp","PH","Temp","changeDate","d","result","getDate","split","reverse","join","analyse","fullWidth","offsetParent","titleTypographyProps","autoComplete","CircularProgress","AlimentationIcon","closed","setClosed","aliData","setAliData","alimentList","setAlimentList","setPoidsAM","setPoidsPM","transformData","aliments","handleChangeCycle","push","Alimento","Cantidad","filename","borderWidth","font","t","AddChangementEauIcon","pompe","changementEau","setChangementEau","pompesList","setPompesList","pompes","changement","VenteIcon","u5","u6","u8","u10","u12","u15","u16_u20","u21_u25","decortique","venteCrevette","setVenteCrevette","ventePoisson","setVentePoisson","venteJour","setVenteJour","setFiltre","handleChangeDate","lenght","f","typeId","Typo","clientId","Lbs","nbrSac","poidsSac","Precio","newVente","setNewVente","setClientsList","typeAlimentList","setTypeAlimentList","majC","setMajC","commandes","typeAliment","l","clients","localeCompare","document","fileName","blob","ceil","concat","HomeIcon","stocks","setStocks","InputProps","ps","appStyle","wrapper","mainPanel","PrivateRoute","Component","logged","render","switchRoutes","useParams","from","Copeyito","mobileOpen","setMobileOpen","createRef","resizeFunction","navigator","platform","PerfectScrollbar","current","suppressScrollX","suppressScrollY","addEventListener","destroy","removeEventListener","ref","openUsername","setOpenUsername","openEmail","setOpenEmail","openPassword","setOpenPassword","openUserList","setOpenUserList","openAddUser","setOpenAddUser","email","password","confirmPassword","user","setUser","userList","setUserList","newUser","setNewUser","handleSubmitUser","username","defaultValue","handleSuppression","App","utils","DateFnsUtils","exact","Login","Profile","setUsername","setPassword","preventDefault","opts","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10630bf2.chunk.js","sourcesContent":["import { createAuthProvider } from \"react-token-auth\";\n\nexport const [useAuth, authFetch, login, logout] = createAuthProvider({\n  accessTokenKey: \"access_token\",\n  onUpdateToken: (token) =>\n    fetch(\"/api/refresh\", {\n      method: \"POST\",\n      headers: { Authorization: \"Bearer \" + token.access_token },\n    }).then((r) => r.json()),\n});\n","/*!\n\n =========================================================\n * Material Dashboard React - v1.9.0 based on Material Dashboard - v1.2.0\n =========================================================\n\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\n * Copyright 2020 Creative Tim (http://www.creative-tim.com)\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\n\n =========================================================\n\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n */\n\n// ##############################\n// // // Function that converts from hex color to rgb color\n// // // Example: input = #9c27b0 => output = 156, 39, 176\n// // // Example: input = 9c27b0 => output = 156, 39, 176\n// // // Example: input = #999 => output = 153, 153, 153\n// // // Example: input = 999 => output = 153, 153, 153\n// #############################\nconst hexToRgb = (input) => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n  input = input.toUpperCase();\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return (\n    parseInt(first, 16) +\n    \", \" +\n    parseInt(second, 16) +\n    \", \" +\n    parseInt(last, 16)\n  );\n};\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\n};\n\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\",\n};\n\nconst defaultFont = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\",\n};\n// Shades : 500, 400, 600, ?300\nconst primaryColor = [\"#3f51b5\", \"#6573c3\", \"#2c387e\", \"#7986cb\"];\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\nconst roseColor = [\"#009688\", \"#009688\", \"#009688\", \"#009688\"];\nconst grayColor = [\n  \"#999\",\n  \"#777\",\n  \"#3C4858\",\n  \"#AAAAAA\",\n  \"#D2D2D2\",\n  \"#DDD\",\n  \"#b4b4b4\",\n  \"#555555\",\n  \"#333\",\n  \"#a9afbb\",\n  \"#eee\",\n  \"#e7e7e7\",\n];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 4px 25px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n};\n\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(primaryColor[0]) +\n    \",.4)\",\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(infoColor[0]) +\n    \",.4)\",\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(successColor[0]) +\n    \",.4)\",\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(warningColor[0]) +\n    \",.4)\",\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(dangerColor[0]) +\n    \",.4)\",\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(roseColor[0]) +\n    \",.4)\",\n};\n\nconst warningCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\n  ...warningBoxShadow,\n};\nconst successCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\n  ...successBoxShadow,\n};\nconst dangerCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\n  ...dangerBoxShadow,\n};\nconst infoCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\n  ...infoBoxShadow,\n};\nconst primaryCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\n  ...primaryBoxShadow,\n};\nconst roseCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\n  ...roseBoxShadow,\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid \" + grayColor[10],\n  height: \"auto\",\n  ...defaultFont,\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\",\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n  background: whiteColor,\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 3px 20px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\",\n};\n\nconst title = {\n  color: grayColor[2],\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: grayColor[1],\n    fontWeight: \"400\",\n    lineHeight: \"1\",\n  },\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\",\n  },\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\",\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\",\n  },\n};\n\nexport {\n  hexToRgb,\n  //variables\n  drawerWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  blackColor,\n  whiteColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink,\n};\n","import {\n  grayColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  roseColor,\n  whiteColor,\n  blackColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst buttonStyle = {\n  button: {\n    minHeight: \"auto\",\n    minWidth: \"auto\",\n    backgroundColor: grayColor[0],\n    color: whiteColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.12)\",\n    border: \"none\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    padding: \"12px 30px\",\n    margin: \".3125rem 1px\",\n    fontSize: \"12px\",\n    fontWeight: \"400\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"0\",\n    willChange: \"box-shadow, transform\",\n    transition:\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\n    lineHeight: \"1.42857143\",\n    textAlign: \"center\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    touchAction: \"manipulation\",\n    cursor: \"pointer\",\n    \"&:hover,&:focus\": {\n      color: whiteColor,\n      backgroundColor: grayColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.2)\"\n    },\n    \"& .fab,& .fas,& .far,& .fal, &.material-icons\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      marginTop: \"-1em\",\n      marginBottom: \"-1em\",\n      fontSize: \"1.1rem\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\"\n    },\n    \"& svg\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      width: \"18px\",\n      height: \"18px\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\"\n    },\n    \"&$justIcon\": {\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        marginTop: \"0px\",\n        position: \"absolute\",\n        width: \"100%\",\n        transform: \"none\",\n        left: \"0px\",\n        top: \"0px\",\n        height: \"100%\",\n        lineHeight: \"41px\",\n        fontSize: \"20px\"\n      }\n    }\n  },\n  white: {\n    \"&,&:focus,&:hover\": {\n      backgroundColor: whiteColor,\n      color: grayColor[0]\n    }\n  },\n  rose: {\n    backgroundColor: roseColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: roseColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  success: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  simple: {\n    \"&,&:focus,&:hover\": {\n      color: whiteColor,\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"&$rose\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: roseColor[0]\n      }\n    },\n    \"&$primary\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: primaryColor[0]\n      }\n    },\n    \"&$info\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: infoColor[0]\n      }\n    },\n    \"&$success\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: successColor[0]\n      }\n    },\n    \"&$warning\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: warningColor[0]\n      }\n    },\n    \"&$danger\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: dangerColor[0]\n      }\n    }\n  },\n  transparent: {\n    \"&,&:focus,&:hover\": {\n      color: \"inherit\",\n      background: \"transparent\",\n      boxShadow: \"none\"\n    }\n  },\n  disabled: {\n    opacity: \"0.65\",\n    pointerEvents: \"none\"\n  },\n  lg: {\n    padding: \"1.125rem 2.25rem\",\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.333333\",\n    borderRadius: \"0.2rem\"\n  },\n  sm: {\n    padding: \"0.40625rem 1.25rem\",\n    fontSize: \"0.6875rem\",\n    lineHeight: \"1.5\",\n    borderRadius: \"0.2rem\"\n  },\n  round: {\n    borderRadius: \"30px\"\n  },\n  block: {\n    width: \"100% !important\"\n  },\n  link: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: \"transparent\",\n      color: grayColor[0],\n      boxShadow: \"none\"\n    }\n  },\n  justIcon: {\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    fontSize: \"20px\",\n    height: \"41px\",\n    minWidth: \"41px\",\n    width: \"41px\",\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\n      marginRight: \"0px\"\n    },\n    \"&$lg\": {\n      height: \"57px\",\n      minWidth: \"57px\",\n      width: \"57px\",\n      lineHeight: \"56px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"32px\",\n        lineHeight: \"56px\"\n      },\n      \"& svg\": {\n        width: \"32px\",\n        height: \"32px\"\n      }\n    },\n    \"&$sm\": {\n      height: \"30px\",\n      minWidth: \"30px\",\n      width: \"30px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"17px\",\n        lineHeight: \"29px\"\n      },\n      \"& svg\": {\n        width: \"17px\",\n        height: \"17px\"\n      }\n    }\n  }\n};\n\nexport default buttonStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/buttonStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function RegularButton(props) {\n  const classes = useStyles();\n  const {\n    color,\n    round,\n    children,\n    disabled,\n    simple,\n    size,\n    block,\n    link,\n    justIcon,\n    className,\n    muiClasses,\n    ...rest\n  } = props;\n  const btnClasses = classNames({\n    [classes.button]: true,\n    [classes[size]]: size,\n    [classes[color]]: color,\n    [classes.round]: round,\n    [classes.disabled]: disabled,\n    [classes.simple]: simple,\n    [classes.block]: block,\n    [classes.link]: link,\n    [classes.justIcon]: justIcon,\n    [className]: className\n  });\n  return (\n    <Button {...rest} classes={muiClasses} className={btnClasses}>\n      {children}\n    </Button>\n  );\n}\n\nRegularButton.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\",\n    \"white\",\n    \"transparent\"\n  ]),\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  link: PropTypes.bool,\n  justIcon: PropTypes.bool,\n  className: PropTypes.string,\n  // use this to pass the classes props from Material-UI\n  muiClasses: PropTypes.object,\n  children: PropTypes.node\n};\n","import {\n  primaryColor,\n  whiteColor,\n  primaryBoxShadow,\n  defaultFont,\n  blackColor,\n  grayColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dropdownStyle = theme => ({\n  buttonLink: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"flex\",\n      marginLeft: \"30px\",\n      width: \"auto\"\n    }\n  },\n  links: {\n    width: \"20px\",\n    height: \"20px\",\n    zIndex: \"4\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"block\",\n      width: \"30px\",\n      height: \"30px\",\n      color: grayColor[9],\n      marginRight: \"15px\"\n    }\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\"\n  },\n  popperClose: {\n    pointerEvents: \"none\"\n  },\n  popperResponsive: {\n    [theme.breakpoints.down(\"md\")]: {\n      zIndex: \"1640\",\n      position: \"static\",\n      float: \"none\",\n      width: \"auto\",\n      marginTop: \"0\",\n      backgroundColor: \"transparent\",\n      border: \"0\",\n      WebkitBoxShadow: \"none\",\n      boxShadow: \"none\",\n      color: \"black\"\n    }\n  },\n  popperNav: {\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"static !important\",\n      left: \"unset !important\",\n      top: \"unset !important\",\n      transform: \"none !important\",\n      willChange: \"unset !important\",\n      \"& > div\": {\n        boxShadow: \"none !important\",\n        marginLeft: \"0rem\",\n        marginRight: \"0rem\",\n        transition: \"none !important\",\n        marginTop: \"0px !important\",\n        marginBottom: \"0px !important\",\n        padding: \"0px !important\",\n        backgroundColor: \"transparent !important\",\n        \"& ul li\": {\n          color: whiteColor + \" !important\",\n          margin: \"10px 15px 0!important\",\n          padding: \"10px 15px !important\",\n          \"&:hover\": {\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\n            boxShadow: \"none\"\n          }\n        }\n      }\n    }\n  },\n  dropdown: {\n    borderRadius: \"3px\",\n    border: \"0\",\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(blackColor) + \", 0.26)\",\n    top: \"100%\",\n    zIndex: \"1000\",\n    minWidth: \"160px\",\n    padding: \"5px 0\",\n    margin: \"2px 0 0\",\n    fontSize: \"14px\",\n    textAlign: \"left\",\n    listStyle: \"none\",\n    backgroundColor: whiteColor,\n    WebkitBackgroundClip: \"padding-box\",\n    backgroundClip: \"padding-box\"\n  },\n  dropdownItem: {\n    ...defaultFont,\n    fontSize: \"13px\",\n    padding: \"10px 20px\",\n    margin: \"0 5px\",\n    borderRadius: \"2px\",\n    WebkitTransition: \"all 150ms linear\",\n    MozTransition: \"all 150ms linear\",\n    OTransition: \"all 150ms linear\",\n    MsTransition: \"all 150ms linear\",\n    transition: \"all 150ms linear\",\n    display: \"block\",\n    clear: \"both\",\n    fontWeight: \"400\",\n    lineHeight: \"1.42857143\",\n    color: grayColor[8],\n    whiteSpace: \"nowrap\",\n    height: \"unset\",\n    minHeight: \"unset\",\n    \"&:hover\": {\n      backgroundColor: primaryColor[0],\n      color: whiteColor,\n      ...primaryBoxShadow\n    }\n  }\n});\n\nexport default dropdownStyle;\n","import {\n  defaultFont,\n  dangerColor,\n  whiteColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\n\nconst headerLinksStyle = theme => ({\n  ...dropdownStyle(theme),\n  search: {\n    \"& > div\": {\n      marginTop: \"0\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"10px 15px !important\",\n      float: \"none !important\",\n      paddingTop: \"1px\",\n      paddingBottom: \"1px\",\n      padding: \"0!important\",\n      width: \"60%\",\n      marginTop: \"40px\",\n      \"& input\": {\n        color: whiteColor\n      }\n    }\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\",\n    margin: \"0px\"\n  },\n  buttonLink: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      margin: \"10px 15px 0\",\n      width: \"-webkit-fill-available\",\n      \"& svg\": {\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\"\n      },\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"24px\",\n        lineHeight: \"30px\",\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\"\n      },\n      \"& > span\": {\n        justifyContent: \"flex-start\",\n        width: \"100%\"\n      }\n    }\n  },\n  searchButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"-50px !important\",\n      marginRight: \"22px\",\n      float: \"right\"\n    }\n  },\n  margin: {\n    zIndex: \"4\",\n    margin: \"0\"\n  },\n  searchIcon: {\n    width: \"17px\",\n    zIndex: \"4\"\n  },\n  notifications: {\n    zIndex: \"4\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      top: \"2px\",\n      border: \"1px solid \" + whiteColor,\n      right: \"4px\",\n      fontSize: \"9px\",\n      background: dangerColor[0],\n      color: whiteColor,\n      minWidth: \"16px\",\n      height: \"16px\",\n      borderRadius: \"10px\",\n      textAlign: \"center\",\n      lineHeight: \"16px\",\n      verticalAlign: \"middle\",\n      display: \"block\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      ...defaultFont,\n      fontSize: \"14px\",\n      marginRight: \"8px\"\n    }\n  },\n  manager: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    },\n    display: \"inline-block\"\n  },\n  searchWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"-webkit-fill-available\",\n      margin: \"10px 15px 0\"\n    },\n    display: \"inline-block\"\n  }\n});\n\nexport default headerLinksStyle;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\n// import Search from \"@material-ui/icons/Search\";\n// core components\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\nimport { logout } from \"auth\";\nimport { authFetch } from \"auth\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminNavbarLinks() {\n  const classes = useStyles();\n  const [maj, setMaj] = useState(true);\n  const [notifications, setNotifications] = useState([]);\n  const [notSeen, setNotSeen] = useState(0);\n  const [openNotification, setOpenNotification] = useState(null);\n  const [openProfile, setOpenProfile] = useState(null);\n  const handleClickNotification = (event) => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n  const handleCloseNotification = () => {\n    if (notSeen !== 0) {\n      var url = \"/api/notifications\";\n      const requestOptions = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n      };\n      authFetch(url, requestOptions);\n      setMaj(~maj);\n    }\n    setOpenNotification(null);\n  };\n  const deleteNotification = (id) => {\n    var url = \"/api/notifications\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id: id }),\n    };\n    authFetch(url, requestOptions);\n    setMaj(~maj);\n  };\n  const handleClickProfile = (event) => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n\n  useEffect(() => {\n    let repeat;\n\n    async function fetchData() {\n      try {\n        var url = \"/api/notifications\";\n        authFetch(url)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error(response.statusText);\n            }\n          })\n          .then((response) => {\n            setNotifications(response.notifications);\n            var temp = 0;\n            for (let i = 0; i < response.notifications.length; i++) {\n              const e = response.notifications[i];\n              if (e.seen === 0) {\n                temp += 1;\n              }\n            }\n            setNotSeen(temp);\n          })\n          .catch((e) => console.log(\"danger\", e.name + \": \" + e.message));\n        repeat = setTimeout(fetchData, 120000); // request again after a minute\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n\n    fetchData();\n\n    return () => {\n      if (repeat) {\n        clearTimeout(repeat);\n      }\n    };\n  }, [maj]);\n\n  return (\n    <div>\n      {/* <div className={classes.searchWrapper}>\n        <CustomInput\n          formControlProps={{\n            className: classes.margin + \" \" + classes.search,\n          }}\n          inputProps={{\n            placeholder: \"Search\",\n            inputProps: {\n              \"aria-label\": \"Search\",\n            },\n          }}\n        />\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\n          <Search />\n        </Button>\n      </div> */}\n      {/* <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Dashboard\"\n        className={classes.buttonLink}\n      >\n        <Dashboard className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>Dashboard</p>\n        </Hidden>\n      </Button> */}\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          {notSeen !== 0 ? (\n            <span className={classes.notifications}>{notSeen}</span>\n          ) : null}\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    {notifications.map((n) => (\n                      <MenuItem\n                        key={n.id}\n                        to={n.link}\n                        className={classes.dropdownItem}\n                        component={NavLink}\n                      >\n                        {n.text} | {new Date(n.time).toLocaleString()} |{\" \"}\n                        {\n                          <button\n                            id={n.id}\n                            onClick={(e) => deleteNotification(e.target.id)}\n                          >\n                            X\n                          </button>\n                        }\n                      </MenuItem>\n                    ))}\n                    {notifications.length === 0 ? (\n                      <MenuItem className={classes.dropdownItem}>\n                        No hay notificaciones\n                      </MenuItem>\n                    ) : null}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      component={Link}\n                      to=\"/profile\"\n                      className={classes.dropdownItem}\n                    >\n                      Profile\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Settings\n                    </MenuItem>\n                    <Divider light />\n                    <MenuItem onClick={logout} className={classes.dropdownItem}>\n                      Logout\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>\n  );\n}\n","import {\n  container,\n  defaultFont,\n  primaryColor,\n  defaultBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst headerStyle = () => ({\n  appBar: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    borderBottom: \"0\",\n    marginBottom: \"0\",\n    position: \"absolute\",\n    width: \"100%\",\n    paddingTop: \"10px\",\n    zIndex: \"1029\",\n    color: grayColor[7],\n    border: \"0\",\n    borderRadius: \"3px\",\n    padding: \"10px 0\",\n    transition: \"all 150ms ease 0s\",\n    minHeight: \"50px\",\n    display: \"block\"\n  },\n  container: {\n    ...container,\n    minHeight: \"50px\"\n  },\n  flex: {\n    flex: 1\n  },\n  title: {\n    ...defaultFont,\n    letterSpacing: \"unset\",\n    lineHeight: \"30px\",\n    fontSize: \"18px\",\n    borderRadius: \"3px\",\n    textTransform: \"none\",\n    color: \"inherit\",\n    margin: \"0\",\n    \"&:hover,&:focus\": {\n      background: \"transparent\"\n    }\n  },\n  appResponsive: {\n    top: \"8px\"\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  success: {\n    backgroundColor: successColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  }\n});\n\nexport default headerStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\n// core components\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n  const classes = useStyles();\n  function makeBrand() {\n    var name;\n    props.routes.map((prop) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        name = props.rtlActive ? prop.rtlName : prop.name;\n      }\n      return null;\n    });\n    return name;\n  }\n  const { color } = props;\n  const appBarClasses = classNames({\n    [\" \" + classes[color]]: color,\n  });\n  return (\n    <AppBar\n      style={{ paddingBottom: \"0px\" }}\n      className={classes.appBar + appBarClasses}\n    >\n      <Toolbar className={classes.container}>\n        <div className={classes.flex}>\n          {/* Here we create navbar brand, based on route name */}\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\n            {makeBrand()}\n          </Button>\n        </div>\n        <Hidden smDown implementation=\"css\">\n          <AdminNavbarLinks />\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  routes: PropTypes.arrayOf(PropTypes.object),\n};\n","import {\n  drawerWidth,\n  transition,\n  boxShadow,\n  defaultFont,\n  primaryColor,\n  primaryBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor,\n  blackColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst sidebarStyle = theme => ({\n  drawerPaper: {\n    border: \"none\",\n    position: \"fixed\",\n    top: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    zIndex: \"1\",\n    ...boxShadow,\n    width: drawerWidth,\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      position: \"fixed\",\n      height: \"100%\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n      ...boxShadow,\n      position: \"fixed\",\n      display: \"block\",\n      top: \"0\",\n      height: \"100vh\",\n      right: \"0\",\n      left: \"auto\",\n      zIndex: \"1032\",\n      visibility: \"visible\",\n      overflowY: \"visible\",\n      borderTop: \"none\",\n      textAlign: \"left\",\n      paddingRight: \"0px\",\n      paddingLeft: \"0\",\n      transform: `translate3d(${drawerWidth}px, 0, 0)`,\n      ...transition\n    }\n  },\n  drawerPaperRTL: {\n    [theme.breakpoints.up(\"md\")]: {\n      left: \"auto !important\",\n      right: \"0 !important\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"0  !important\",\n      right: \"auto !important\"\n    }\n  },\n  logo: {\n    position: \"relative\",\n    padding: \"15px 15px\",\n    zIndex: \"4\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: \"0\",\n\n      height: \"1px\",\n      right: \"15px\",\n      width: \"calc(100% - 30px)\",\n      backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\"\n    }\n  },\n  logoLink: {\n    ...defaultFont,\n    textTransform: \"uppercase\",\n    padding: \"5px 0\",\n    display: \"block\",\n    fontSize: \"18px\",\n    textAlign: \"left\",\n    fontWeight: \"400\",\n    lineHeight: \"30px\",\n    textDecoration: \"none\",\n    backgroundColor: \"transparent\",\n    \"&,&:hover\": {\n      color: whiteColor\n    }\n  },\n  logoLinkRTL: {\n    textAlign: \"right\"\n  },\n  logoImage: {\n    width: \"30px\",\n    display: \"inline-block\",\n    maxHeight: \"30px\",\n    marginLeft: \"10px\",\n    marginRight: \"15px\"\n  },\n  img: {\n    width: \"35px\",\n    top: \"22px\",\n    position: \"absolute\",\n    verticalAlign: \"middle\",\n    border: \"0\"\n  },\n  background: {\n    position: \"absolute\",\n    zIndex: \"1\",\n    height: \"100%\",\n    width: \"100%\",\n    display: \"block\",\n    top: \"0\",\n    left: \"0\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    \"&:after\": {\n      position: \"absolute\",\n      zIndex: \"3\",\n      width: \"100%\",\n      height: \"100%\",\n      content: '\"\"',\n      display: \"block\",\n      background: blackColor,\n      opacity: \".8\"\n    }\n  },\n  list: {\n    marginTop: \"20px\",\n    paddingLeft: \"0\",\n    paddingTop: \"0\",\n    paddingBottom: \"0\",\n    marginBottom: \"0\",\n    listStyle: \"none\",\n    position: \"unset\"\n  },\n  item: {\n    position: \"relative\",\n    display: \"block\",\n    textDecoration: \"none\",\n    \"&:hover,&:focus,&:visited,&\": {\n      color: whiteColor\n    }\n  },\n  itemLink: {\n    width: \"auto\",\n    transition: \"all 300ms linear\",\n    margin: \"10px 15px 0\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    display: \"block\",\n    padding: \"10px 15px\",\n    backgroundColor: \"transparent\",\n    ...defaultFont\n  },\n  itemIcon: {\n    width: \"24px\",\n    height: \"30px\",\n    fontSize: \"24px\",\n    lineHeight: \"30px\",\n    float: \"left\",\n    marginRight: \"15px\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    color: \"rgba(\" + hexToRgb(whiteColor) + \", 0.8)\"\n  },\n  itemIconRTL: {\n    marginRight: \"3px\",\n    marginLeft: \"15px\",\n    float: \"right\"\n  },\n  itemText: {\n    ...defaultFont,\n    margin: \"0\",\n    lineHeight: \"30px\",\n    fontSize: \"14px\",\n    color: whiteColor\n  },\n  itemTextRTL: {\n    textAlign: \"right\"\n  },\n  whiteFont: {\n    color: whiteColor\n  },\n  purple: {\n    backgroundColor: primaryColor[0],\n    ...primaryBoxShadow,\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      ...primaryBoxShadow\n    }\n  },\n  blue: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.2)\"\n    }\n  },\n  green: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.2)\"\n    }\n  },\n  orange: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.2)\"\n    }\n  },\n  red: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.2)\"\n    }\n  },\n  sidebarWrapper: {\n    position: \"relative\",\n    height: \"calc(100vh - 75px)\",\n    overflow: \"auto\",\n    width: \"260px\",\n    zIndex: \"4\",\n    overflowScrolling: \"touch\"\n  },\n  activePro: {\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      width: \"100%\",\n      bottom: \"13px\"\n    }\n  }\n});\n\nexport default sidebarStyle;\n","/*eslint-disable*/\nimport React, { useState, useEffect } from \"react\";\nimport { authFetch } from \"../auth\";\n\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n\n  const [role, setRole] = useState(undefined);\n\n  useEffect(() => {\n    var url = \"/api/user\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          // throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setRole(response.role);\n      });\n  }, []);\n\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { color, logo, image, logoText, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true,\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path),\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path),\n        });\n        if (role && prop.roles.includes(role)) {\n          return (\n            <NavLink\n              to={prop.layout + prop.path}\n              className={activePro + classes.item}\n              activeClassName=\"active\"\n              key={key}\n            >\n              <ListItem button className={classes.itemLink + listItemClasses}>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon\n                    className={classNames(\n                      classes.itemIcon,\n                      whiteFontClasses,\n                      false\n                    )}\n                  >\n                    {prop.icon}\n                  </Icon>\n                ) : (\n                  <prop.icon\n                    className={classNames(\n                      classes.itemIcon,\n                      whiteFontClasses,\n                      false\n                    )}\n                  />\n                )}\n                <ListItemText\n                  primary={prop.name}\n                  className={classNames(\n                    classes.itemText,\n                    whiteFontClasses,\n                    false\n                  )}\n                  disableTypography={true}\n                />\n              </ListItem>\n            </NavLink>\n          );\n        } else {\n          return null;\n        }\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"/\"\n        className={classNames(classes.logoLink, false)}\n        target=\"_blank\"\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={\"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, false),\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            <AdminNavbarLinks />\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={\"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, false),\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool,\n};\n","import {\n  defaultFont,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  whiteColor,\n  blackColor,\n  grayColor,\n  infoColor,\n  successColor,\n  dangerColor,\n  roseColor,\n  primaryColor,\n  warningColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst snackbarContentStyle = {\n  root: {\n    ...defaultFont,\n    flexWrap: \"unset\",\n    position: \"relative\",\n    padding: \"20px 15px\",\n    lineHeight: \"20px\",\n    marginBottom: \"20px\",\n    fontSize: \"14px\",\n    backgroundColor: whiteColor,\n    color: grayColor[7],\n    borderRadius: \"3px\",\n    minWidth: \"unset\",\n    maxWidth: \"unset\",\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.28), 0 4px 20px 0px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.2)\",\n  },\n  top20: {\n    top: \"20px\",\n  },\n  top40: {\n    top: \"40px\",\n  },\n  info: {\n    backgroundColor: infoColor[3],\n    color: whiteColor,\n    ...infoBoxShadow,\n  },\n  success: {\n    backgroundColor: successColor[3],\n    color: whiteColor,\n    ...successBoxShadow,\n  },\n  warning: {\n    backgroundColor: warningColor[3],\n    color: whiteColor,\n    ...warningBoxShadow,\n  },\n  danger: {\n    backgroundColor: dangerColor[3],\n    color: whiteColor,\n    ...dangerBoxShadow,\n  },\n  primary: {\n    backgroundColor: primaryColor[3],\n    color: whiteColor,\n    ...primaryBoxShadow,\n  },\n  rose: {\n    backgroundColor: roseColor[3],\n    color: whiteColor,\n    ...roseBoxShadow,\n  },\n  message: {\n    padding: \"0\",\n    display: \"block\",\n    maxWidth: \"92%\",\n  },\n  close: {\n    width: \"11px\",\n    height: \"11px\",\n  },\n  iconButton: {\n    width: \"24px\",\n    height: \"24px\",\n    padding: \"0px\",\n  },\n  icon: {\n    display: \"block\",\n    left: \"15px\",\n    position: \"absolute\",\n    top: \"50%\",\n    marginTop: \"-15px\",\n    width: \"30px\",\n    height: \"30px\",\n  },\n  infoIcon: {\n    color: infoColor[3],\n  },\n  successIcon: {\n    color: successColor[3],\n  },\n  warningIcon: {\n    color: warningColor[3],\n  },\n  dangerIcon: {\n    color: dangerColor[3],\n  },\n  primaryIcon: {\n    color: primaryColor[3],\n  },\n  roseIcon: {\n    color: roseColor[3],\n  },\n  iconMessage: {\n    paddingLeft: \"50px\",\n    display: \"block\",\n  },\n  actionRTL: {\n    marginLeft: \"-8px\",\n    marginRight: \"auto\",\n  },\n};\n\nexport default snackbarContentStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Snackbar(props) {\n  const classes = useStyles();\n  const { message, color, close, icon, place, open} = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n        onClick={() => props.closeNotification()}\n      >\n        <Close className={classes.close} />\n      </IconButton>\n    ];\n  }\n  return (\n    <Snack\n      anchorOrigin={{\n        vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n        horizontal:\n          place.indexOf(\"l\") !== -1\n            ? \"left\"\n            : place.indexOf(\"c\") !== -1\n            ? \"center\"\n            : \"right\"\n      }}\n      open={open}\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      action={action}\n      ContentProps={{\n        classes: {\n          root: classes.root + \" \" + classes[color],\n          message: classes.message,\n        }\n      }}\n    />\n  );\n}\n\nSnackbar.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\n  open: PropTypes.bool,\n  closeNotification: PropTypes.func\n};\n","import {\n  warningColor,\n  primaryColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  defaultFont,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst tableStyle = (theme) => ({\n  warningTableHeader: {\n    color: warningColor[0],\n  },\n  primaryTableHeader: {\n    color: primaryColor[0],\n    position: \"sticky\",\n    top: 0,\n    backgroundColor: \"#fff\",\n  },\n  dangerTableHeader: {\n    color: dangerColor[0],\n  },\n  successTableHeader: {\n    color: successColor[0],\n  },\n  infoTableHeader: {\n    color: infoColor[0],\n  },\n  roseTableHeader: {\n    color: roseColor[0],\n  },\n  grayTableHeader: {\n    color: grayColor[0],\n  },\n  table: {\n    marginBottom: \"0\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    backgroundColor: \"transparent\",\n    borderSpacing: \"0\",\n    borderCollapse: \"collapse\",\n  },\n  tableHeadCell: {\n    color: \"inherit\",\n    ...defaultFont,\n    \"&, &$tableCell\": {\n      fontSize: \"1em\",\n    },\n  },\n  root: {\n    width: \"100%\",\n    maxHeight: 700,\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\",\n  },\n  selectTableCell: {\n    width: 60,\n    padding: \"0px 8px\",\n  },\n  input: {\n    width: 130,\n    height: 30,\n  },\n  tableRow: {\n    height: 30,\n  },\n  tableCell: {\n    height: 30,\n    ...defaultFont,\n    lineHeight: \"1.42857143\",\n    padding: \"0px 8px\",\n    verticalAlign: \"middle\",\n    fontSize: \"0.8125rem\",\n  },\n  tableResponsive: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\",\n  },\n  tableHeadRow: {\n    height: \"56px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\",\n  },\n  tableBodyRow: {\n    height: \"48px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\",\n  },\n});\n\nexport default tableStyle;\n","import React, { useState, useEffect } from \"react\";\nimport { authFetch } from \"auth/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n// Icons\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nconst CustomTableCell = ({ row, name, onChange }) => {\n  const classes = useStyles();\n  const { isEditMode } = row;\n  return (\n    <TableCell align=\"left\" className={classes.tableCell}>\n      {isEditMode ? (\n        <Input\n          value={row[name]}\n          name={name}\n          onChange={(e) => onChange(e, row)}\n          className={classes.tableCell}\n        />\n      ) : (\n        row[name]\n      )}\n    </TableCell>\n  );\n};\n\nexport default function CustomTableEdit(props) {\n  const {\n    tableHead,\n    tableData,\n    tableHeaderColor,\n    postUrl,\n    info_for_post,\n    setMaj,\n    maj,\n  } = props;\n  const [rows, setRows] = React.useState(\n    tableData.map((data) => ({ ...data, ...{ isEditMode: false } }))\n  );\n  const [previous, setPrevious] = React.useState({});\n  const classes = useStyles();\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n  useEffect(() => {\n    let setNull = (obj) => Object.keys(obj).forEach((k) => (obj[k] = null));\n    let temp1 = tableData.map((data) => ({\n      ...data,\n      ...{ isEditMode: false },\n    }));\n    let temp = [...temp1, { ...temp1[0] }];\n    setNull(temp[temp.length - 1]);\n    temp[temp.length - 1][\"id\"] = temp.length;\n    setRows(tableData.map((data) => ({ ...data, ...{ isEditMode: false } })));\n  }, [tableData]);\n\n  const onToggleEditMode = (id, change) => {\n    setRows((state) => {\n      return rows.map((row) => {\n        if (row.id === id) {\n          if (row.isEditMode && change) {\n            delete row.isEditMode;\n            const requestOptions = {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ info: info_for_post, ...row }),\n            };\n            authFetch(postUrl, requestOptions)\n              .then((response) => {\n                if (response.ok) {\n                  return response.json();\n                } else {\n                  throw new Error(response.statusText);\n                }\n              })\n              .then((response) => {\n                try {\n                  setMaj(~maj);\n                } catch {\n                  console.log(\"pas de maj\");\n                }\n\n                handleSnackbar(\"success\", response.message);\n              })\n              .catch((e) =>\n                handleSnackbar(\"danger\", e.name + \": \" + e.message)\n              );\n            return { ...row, isEditMode: false };\n          } else {\n            return { ...row, isEditMode: !row.isEditMode };\n          }\n        }\n        return row;\n      });\n    });\n  };\n\n  const onChange = (e, row) => {\n    if (!previous[row.id]) {\n      setPrevious((state) => ({ ...state, [row.id]: row }));\n    }\n    const value = e.target.value;\n    const name = e.target.name;\n    const { id } = row;\n    const newRows = rows.map((row) => {\n      if (row.id === id) {\n        return { ...row, [name]: value };\n      }\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  const onRevert = (id) => {\n    const newRows = rows.map((row) => {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n      return row;\n    });\n    setRows(newRows);\n    setPrevious((state) => {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id, false);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Paper className={classes.root}>\n        <Table\n          stickyHeader\n          className={classes.table}\n          aria-label=\"caption table\"\n        >\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              <TableCell></TableCell>\n              {tableHead.map((prop) => {\n                return prop === \"id\" ? null : (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={prop.id}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows !== undefined\n              ? rows.map((row) => (\n                  <TableRow className={classes.tableRow} key={row.id}>\n                    <TableCell className={classes.selectTableCell}>\n                      {row.isEditMode ? (\n                        <>\n                          <IconButton\n                            aria-label=\"done\"\n                            onClick={() => onToggleEditMode(row.id, true)}\n                          >\n                            <DoneIcon />\n                          </IconButton>\n                          <IconButton\n                            aria-label=\"revert\"\n                            onClick={() => onRevert(row.id)}\n                          >\n                            <RevertIcon />\n                          </IconButton>\n                        </>\n                      ) : (\n                        <IconButton\n                          aria-label=\"delete\"\n                          onClick={() => onToggleEditMode(row.id)}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      )}\n                    </TableCell>\n                    {tableHead.map((item, key) => {\n                      return item === \"id\" ? null : (\n                        <CustomTableCell\n                          key={key}\n                          {...{ row, name: item, onChange }}\n                        />\n                      );\n                    })}\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n}\n","import {\n  blackColor,\n  whiteColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"30px\",\n    marginTop: \"10px\",\n    borderRadius: \"6px\",\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n    background: whiteColor,\n    width: \"100%\",\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\",\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\",\n  },\n  cardProfile: {\n    marginTop: \"30px\",\n    textAlign: \"center\",\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\",\n    },\n  },\n};\n\nexport default cardStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Card(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, chart, ...rest } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  whiteColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n    zIndex: \"3 !important\",\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: whiteColor\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\n    },\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"3px\",\n        marginTop: \"-20px\",\n        padding: \"15px\"\n      }\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\"\n    },\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\",\n      overflow: \"unset\",\n      marginBottom: \"1px\"\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\"\n    }\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\"\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\"\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\"\n    }\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"& i,& .material-icons\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\"\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\"\n    }\n  },\n  warningCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader\n    }\n  },\n  successCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader\n    }\n  },\n  dangerCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader\n    }\n  },\n  infoCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader\n    }\n  },\n  primaryCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader\n    }\n  },\n  roseCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader\n    }\n  }\n};\n\nexport default cardHeaderStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardHeader(props) {\n  const classes = useStyles();\n  const { className, children, color, plain, stats, icon, ...rest } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool,\n  children: PropTypes.node\n};\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nexport default function FormDialog({ type, handleSnackbar, setMaj, maj }) {\n  const [open, setOpen] = useState(false);\n  const [especeList, setEspeceList] = useState([]);\n  const [newData, setNewData] = useState({});\n\n  useEffect(() => {\n    var url = \"/api/especes\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setEspeceList(response.especes);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [handleSnackbar]);\n\n  const handleConfirm = () => {\n    var url = \"/api/addInTable/\" + type;\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...newData }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    setOpen(false);\n    setNewData({});\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setOpen(true)}\n      >\n        Añadir\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Añadir</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Oui</DialogContentText>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            {/* Nouveau bassin, Especes, Pompes, TypeAliment  */}\n            {[\"Bassins\", \"Especes\", \"Pompes\", \"TypeAliment\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Libelle\"\n                  type=\"text\"\n                  value={newData.libelle}\n                  onChange={(e) =>\n                    setNewData({ ...newData, libelle: e.target.value })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {/* Nouveau bassin  */}\n            {[\"Bassins\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"surface\"\n                  type=\"number\"\n                  value={newData.surface}\n                  onChange={(e) =>\n                    setNewData({ ...newData, surface: e.target.value })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {[\"Bassins\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"profondeur\"\n                  type=\"number\"\n                  value={newData.profondeur}\n                  onChange={(e) =>\n                    setNewData({ ...newData, profondeur: e.target.value })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {/* Nouvelle espèce */}\n            {[\"Especes\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"espece\"\n                  type=\"text\"\n                  value={newData.espece}\n                  onChange={(e) =>\n                    setNewData({ ...newData, espece: e.target.value })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {[\"Especes\"].includes(type) ? (\n              <Grid item xs={12}>\n                <FormControl style={{ minWidth: \"200px\" }} required>\n                  <InputLabel id=\"Especie-label\">Type</InputLabel>\n                  <Select\n                    labelId=\"Especie-label\"\n                    id=\"Especie-select\"\n                    value={newData.espece_id}\n                    onChange={(e) =>\n                      setNewData({ ...newData, type: e.target.value })\n                    }\n                  >\n                    <MenuItem value={\"carpe\"}>Carpe</MenuItem>\n                    <MenuItem value={\"colossoma\"}>Colossoma</MenuItem>\n                    <MenuItem value={\"tilapia\"}>Tilapia</MenuItem>\n                    <MenuItem value={\"crevette\"}>Crevettte</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            ) : null}\n            {/* Nouvelle pompe */}\n            {[\"Pompes\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Débit\"\n                  type=\"number\"\n                  value={newData.debit}\n                  onChange={(e) =>\n                    setNewData({ ...newData, debit: e.target.value })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {/* Nouvelle mortalite */}\n            {[\"Mortalite\"].includes(type) ? (\n              <Grid item xs={12}>\n                <FormControl style={{ minWidth: \"200px\" }} required>\n                  <InputLabel id=\"Especie-label\">Especie</InputLabel>\n                  <Select\n                    labelId=\"Especie-label\"\n                    id=\"Especie-select\"\n                    value={newData.espece_id}\n                    onChange={(e) =>\n                      setNewData({ ...newData, espece_id: e.target.value })\n                    }\n                  >\n                    {especeList.map((e) => (\n                      <MenuItem value={e[0]}>{e[1]}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            ) : null}\n            {[\"Mortalite\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Taux initial\"\n                  type=\"number\"\n                  value={newData.taux_initial}\n                  onChange={(e) =>\n                    setNewData({ ...newData, taux_initial: e.target.value })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {[\"Mortalite\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Taux hebdomadaire\"\n                  type=\"number\"\n                  value={newData.taux_hebdomadaire}\n                  onChange={(e) =>\n                    setNewData({\n                      ...newData,\n                      taux_hebdomadaire: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {/* Nouvelle croissance */}\n            {[\"Croissance\"].includes(type) ? (\n              <Grid item xs={12}>\n                <FormControl style={{ minWidth: \"200px\" }} required>\n                  <InputLabel id=\"Especie-label\">Especie</InputLabel>\n                  <Select\n                    labelId=\"Especie-label\"\n                    id=\"Especie-select\"\n                    value={newData.espece_id}\n                    onChange={(e) =>\n                      setNewData({ ...newData, espece_id: e.target.value })\n                    }\n                  >\n                    {especeList.map((e) => (\n                      <MenuItem value={e[0]}>{e[1]}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            ) : null}\n            {[\"Croissance\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Semaine\"\n                  type=\"number\"\n                  value={newData.semaine}\n                  onChange={(e) =>\n                    setNewData({ ...newData, semaine: e.target.value })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {[\"Croissance\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Nombre par livre\"\n                  type=\"number\"\n                  value={newData.nombre_par_livre}\n                  onChange={(e) =>\n                    setNewData({ ...newData, nombre_par_livre: e.target.value })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {[\"Croissance\"].includes(type) ? (\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Pourcentage aliment\"\n                  type=\"number\"\n                  value={newData.pourcentage_aliment}\n                  onChange={(e) =>\n                    setNewData({\n                      ...newData,\n                      pourcentage_aliment: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n            ) : null}\n            {/* <Grid item xs={12}>\n              <FormControl style={{ minWidth: \"200px\" }} required>\n                <InputLabel id=\"Especie-label\">Especie del lote</InputLabel>\n                <Select\n                  labelId=\"Especie-label\"\n                  id=\"Especie-select\"\n                  value={newLot.espece_id}\n                  onChange={(e) =>\n                    setNewLot({ ...newLot, espece_id: e.target.value })\n                  }\n                >\n                  {especeList.map((e) => (\n                    <MenuItem value={e[0]}>{e[1]}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid> */}\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Annuler\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","const cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\"\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\"\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\"\n  }\n};\n\nexport default cardBodyStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardBody(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  children: PropTypes.node\n};\n","import React, { useState } from \"react\";\nimport { authFetch } from \"auth/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n// Icons\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTableEdit(props) {\n  const { tableHead, tableData, tableHeaderColor, postUrl, maj, setMaj } =\n    props;\n  const classes = useStyles();\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  const onDelete = (id) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id: id }),\n    };\n    authFetch(postUrl, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  return (\n    <div>\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Paper className={classes.root} style={{ marginTop: \"0px\" }}>\n        <Table\n          stickyHeader\n          className={classes.table}\n          aria-label=\"caption table\"\n        >\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow\n              className={classes.tableHeadRow}\n              style={{ height: \"40px\" }}\n            >\n              <TableCell></TableCell>\n              {tableHead.map((prop) => {\n                return prop === \"id\" ? null : (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={prop.id}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableData !== undefined\n              ? tableData.map((row) => (\n                  <TableRow className={classes.tableRow} key={row.id}>\n                    <TableCell className={classes.selectTableCell}>\n                      <IconButton\n                        style={{ padding: \"5px\" }}\n                        aria-label=\"delete\"\n                        onClick={() => onDelete(row.id)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                    {tableHead.map((item, key) => {\n                      return item === \"id\" ? null : (\n                        <TableCell\n                          style={{\n                            fontSize: \"0.85rem\",\n                            fontWeight: \"300\",\n                            padding: \"5px\",\n                          }}\n                          key={key}\n                        >\n                          {\" \"}\n                          {row[item]}{\" \"}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function FormDialog({\n  espece,\n  lot,\n  handleSnackbar,\n  setMaj,\n  maj,\n}) {\n  const [open, setOpen] = useState(false);\n  const [semis, setSemis] = useState({\n    date: \"\",\n    poids: \"\",\n    quantitelb: \"\",\n    grpoisson: \"\",\n    commentaire: \"\",\n    quantite: \"\",\n  });\n\n  const handleConfirm = () => {\n    if (semis.date.length !== 10) {\n      handleSnackbar(\"danger\", \"Formato de fecha incorrecto\");\n    } else {\n      let quantite = 0;\n      let poids = 0;\n      if (espece.substring(0, 10) === \"Postlarves\") {\n        quantite = parseFloat(semis.quantite);\n        poids = parseFloat(semis.quantite) / parseFloat(semis.quantitelb);\n      } else if (espece.substring(0, 9) === \"Juvéniles\") {\n        quantite = parseFloat(semis.quantitelb) * parseFloat(semis.poids);\n        poids = parseFloat(semis.poids);\n      } else if (semis.poids === \"\") {\n        quantite = parseFloat(semis.quantite);\n        poids =\n          (parseFloat(semis.quantite) * parseFloat(semis.grpoisson)) / 454;\n      } else if (semis.grpoisson === \"\") {\n        quantite = parseFloat(semis.quantite);\n        poids = parseFloat(semis.poids);\n      } else {\n        console.log(semis);\n      }\n      var url = \"/api/semis\";\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...semis,\n          date:\n            semis.date.substring(6, 10) +\n            \"-\" +\n            semis.date.substring(3, 5) +\n            \"-\" +\n            semis.date.substring(0, 2),\n          quantite: quantite,\n          poids: poids,\n          lot: lot,\n        }),\n      };\n      authFetch(url, requestOptions)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          handleSnackbar(\"success\", response.message);\n          setMaj(~maj);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n      setOpen(false);\n      setSemis({\n        date: \"\",\n        typePoids: \"\",\n        poids: \"\",\n        grpoisson: \"\",\n        quantitelb: \"\",\n        commentaire: \"\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => setOpen(true)}\n      >\n        Añadir siembra\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Añadir una siembra</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Elija la fecha de siembra y la cantitad.\n          </DialogContentText>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <TextField\n                required\n                label=\"Date dd/MM/yyyy\"\n                type=\"text\"\n                value={semis.date}\n                onChange={(e) => setSemis({ ...semis, date: e.target.value })}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {espece &&\n              (espece.substring(0, 10) === \"Postlarves\" ||\n                espece.substring(0, 7) === \"Tilapia\" ||\n                espece.substring(espece.length - 7, espece.length) ===\n                  \"tilapia\" ||\n                espece.substring(0, 6) === \"Carpes\" ||\n                espece.substring(0, 9) === \"Colossoma\") ? (\n                <TextField\n                  required\n                  label=\"Cantidad total\"\n                  type=\"text\"\n                  value={semis.quantite}\n                  onChange={(e) =>\n                    setSemis({\n                      ...semis,\n                      quantite: e.target.value,\n                    })\n                  }\n                />\n              ) : (\n                <TextField\n                  required\n                  label=\"Peso total\"\n                  type=\"text\"\n                  value={semis.poids}\n                  onChange={(e) =>\n                    setSemis({\n                      ...semis,\n                      poids: e.target.value,\n                    })\n                  }\n                />\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              {console.log(\n                espece,\n                espece.substring(espece.length - 7, espece.length)\n              )}\n              {espece &&\n              (espece.substring(0, 7) === \"Tilapia\" ||\n                espece.substring(espece.length - 7, espece.length) ===\n                  \"tilapia\" ||\n                espece.substring(0, 5) === \"Carpe\" ||\n                espece.substring(0, 9) === \"Colossoma\") ? (\n                <TextField\n                  required\n                  label=\"Gr par poissons\"\n                  type=\"text\"\n                  value={semis.grpoisson}\n                  onChange={(e) =>\n                    setSemis({\n                      ...semis,\n                      grpoisson: e.target.value,\n                    })\n                  }\n                />\n              ) : (\n                <TextField\n                  required\n                  label=\"Cantitad por libras\"\n                  type=\"text\"\n                  value={semis.quantitelb}\n                  onChange={(e) =>\n                    setSemis({\n                      ...semis,\n                      quantitelb: e.target.value,\n                    })\n                  }\n                />\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              {espece &&\n              (espece.substring(0, 7) === \"Tilapia\" ||\n                espece.substring(espece.length - 7, espece.length) ===\n                  \"tilapia\" ||\n                espece.substring(0, 5) === \"Carpe\" ||\n                espece.substring(0, 9) === \"Colossoma\") ? (\n                <TextField\n                  required\n                  label=\"Peso total\"\n                  type=\"text\"\n                  value={semis.poids}\n                  onChange={(e) =>\n                    setSemis({\n                      ...semis,\n                      poids: e.target.value,\n                    })\n                  }\n                />\n              ) : null}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Comentario\"\n                type=\"text\"\n                value={semis.commentaire}\n                onChange={(e) =>\n                  setSemis({ ...semis, commentaire: e.target.value })\n                }\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Annuler\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nexport default function FormDialog({\n  lot,\n  handleSnackbar,\n  setMaj,\n  maj,\n  espece,\n}) {\n  const [open, setOpen] = useState(false);\n  const [peches, setPeches] = useState({\n    date: \"\",\n    poids: \"\",\n    quantitelb: \"\",\n    quantite: \"\",\n    commentaire: \"\",\n    destination: \"\",\n  });\n\n  const handleConfirm = () => {\n    if (peches.date.length !== 10) {\n      handleSnackbar(\"danger\", \"Formato de fecha incorrecto\");\n    } else {\n      var url = \"/api/peches\";\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...peches,\n          date:\n            peches.date.substring(6, 10) +\n            \"-\" +\n            peches.date.substring(3, 5) +\n            \"-\" +\n            peches.date.substring(0, 2),\n          poids: parseFloat(peches.poids),\n          quantite:\n            espece.substring(0, 9) === \"Juvéniles\" ||\n            espece.substring(0, 10) === \"Postlarves\"\n              ? parseFloat(peches.quantitelb) * parseFloat(peches.poids)\n              : parseFloat(peches.quantite),\n          lot: lot,\n        }),\n      };\n      authFetch(url, requestOptions)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          handleSnackbar(\"success\", response.message);\n          setMaj(maj + 1);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n      setOpen(false);\n      setPeches({\n        date: \"\",\n        poids: \"\",\n        quantitelb: \"\",\n        commentaire: \"\",\n        destination: \"\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => setOpen(true)}\n      >\n        Añadir una pesca\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Añadir una pesca</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Elija la fecha de siembra, el peso total y la cantitad por libras.\n          </DialogContentText>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <TextField\n                required\n                label=\"Date dd/MM/yyyy\"\n                type=\"text\"\n                value={peches.date}\n                onChange={(e) => setPeches({ ...peches, date: e.target.value })}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                label=\"Peso total\"\n                type=\"text\"\n                value={peches.poids}\n                onChange={(e) =>\n                  setPeches({\n                    ...peches,\n                    poids: e.target.value,\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {espece &&\n              (espece.substring(0, 9) === \"Juvéniles\" ||\n                espece.substring(0, 10) === \"Postlarves\") ? (\n                <TextField\n                  required\n                  label={\"Cantitad por libras\"}\n                  type=\"text\"\n                  value={peches.quantitelb}\n                  onChange={(e) =>\n                    setPeches({\n                      ...peches,\n                      quantitelb: e.target.value,\n                    })\n                  }\n                />\n              ) : (\n                <TextField\n                  required\n                  label={\"Cantitad total\"}\n                  type=\"text\"\n                  value={peches.quantite}\n                  onChange={(e) =>\n                    setPeches({\n                      ...peches,\n                      quantite: e.target.value,\n                    })\n                  }\n                />\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Comentario\"\n                type=\"text\"\n                value={peches.commentaire}\n                onChange={(e) =>\n                  setPeches({ ...peches, commentaire: e.target.value })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl style={{ minWidth: \"200px\" }} required>\n                <InputLabel id=\"Destination-label\">Destino</InputLabel>\n                <Select\n                  labelId=\"Destination-label\"\n                  id=\"Destination-select\"\n                  value={peches.destination}\n                  onChange={(e) =>\n                    setPeches({ ...peches, destination: e.target.value })\n                  }\n                >\n                  <MenuItem value={\"V\"}>Venta</MenuItem>\n                  <MenuItem value={\"S\"}>Siembra</MenuItem>\n                  <MenuItem value={\"A\"}>Otro</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Annuler\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nexport default function FormDialog({\n  espece,\n  lot,\n  handleSnackbar,\n  setMaj,\n  maj,\n  mortTheo,\n}) {\n  const [open, setOpen] = useState(false);\n  const [stats, setStats] = useState({\n    date: \"\",\n    typeStat: \"\",\n    quantitelb: \"\",\n    grpoisson: \"\",\n    mortalite: \"\",\n    commentaire: \"\",\n  });\n\n  const handleConfirm = () => {\n    if (stats.date.length !== 10) {\n      handleSnackbar(\"danger\", \"Formato de fecha incorrecto\");\n    } else {\n      var url = \"/api/stats\";\n      var quantitelb = 0;\n      if (stats.grpoisson !== \"\") {\n        quantitelb = 454 / parseFloat(stats.grpoisson);\n      } else {\n        quantitelb = parseFloat(stats.quantitelb);\n      }\n      console.log(stats);\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...stats,\n          lot: lot,\n          quantitelb: quantitelb,\n          date:\n            stats.date.substring(6, 10) +\n            \"-\" +\n            stats.date.substring(3, 5) +\n            \"-\" +\n            stats.date.substring(0, 2),\n          mortalite:\n            stats.mortalite !== \"\"\n              ? parseFloat(stats.mortalite) / 100\n              : mortTheo,\n        }),\n      };\n      authFetch(url, requestOptions)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          handleSnackbar(\"success\", response.message);\n          setMaj(~maj);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n      setOpen(false);\n      setStats({\n        date: \"\",\n        typeStat: \"\",\n        quantitelb: \"\",\n        grpoisson: \"\",\n        mortalite: \"\",\n        commentaire: \"\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => setOpen(true)}\n      >\n        Añadir estadistica\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Añadir estadistica</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Elija la fecha de la estadistica y la cantidad por libras.\n          </DialogContentText>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <TextField\n                required\n                label=\"Fecha dd/MM/yyyy\"\n                type=\"text\"\n                value={stats.date}\n                onChange={(e) => setStats({ ...stats, date: e.target.value })}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl style={{ minWidth: \"200px\" }} required>\n                <InputLabel id=\"Type-label\">Typo de estadistica</InputLabel>\n                <Select\n                  labelId=\"Type-label\"\n                  id=\"Type-select\"\n                  value={stats.typeStat}\n                  onChange={(e) =>\n                    setStats({ ...stats, typeStat: e.target.value })\n                  }\n                >\n                  <MenuItem value={\"S\"}>S</MenuItem>\n                  <MenuItem value={\"E\"}>E</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              {espece &&\n              (espece.substring(0, 7) === \"Tilapia\" ||\n                espece.substring(espece.length - 7, espece.length) ===\n                  \"tilapia\" ||\n                espece.substring(0, 5) === \"Carpe\" ||\n                espece.substring(0, 9) === \"Colossoma\") ? (\n                <TextField\n                  required\n                  label=\"Gr par poissons\"\n                  type=\"text\"\n                  value={stats.grpoisson}\n                  onChange={(e) =>\n                    setStats({\n                      ...stats,\n                      grpoisson: e.target.value,\n                    })\n                  }\n                />\n              ) : (\n                <TextField\n                  required\n                  label=\"Cantitad por libras\"\n                  type=\"text\"\n                  value={stats.quantitelb}\n                  onChange={(e) =>\n                    setStats({\n                      ...stats,\n                      quantitelb: e.target.value,\n                    })\n                  }\n                />\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Mortalidad\"\n                type=\"text\"\n                value={stats.mortalite}\n                onChange={(e) => {\n                  setStats({\n                    ...stats,\n                    mortalite: e.target.value,\n                  });\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Comentario\"\n                type=\"text\"\n                value={stats.commentaire}\n                onChange={(e) =>\n                  setStats({ ...stats, commentaire: e.target.value })\n                }\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Annuler\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nexport default function FormDialog({ cycle, handleSnackbar, setMaj, maj }) {\n  const [open, setOpen] = useState(false);\n  const [newLot, setNewLot] = useState({\n    espece_id: \"\",\n    cycle_id: cycle,\n    commentaire: \"\",\n  });\n  const [especeList, setEspeceList] = useState([]);\n\n  useEffect(() => {\n    var url = \"/api/especes\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setEspeceList(response.especes);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [handleSnackbar]);\n\n  const handleConfirm = () => {\n    var url = \"/api/lots\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...newLot }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    setOpen(false);\n    setNewLot({\n      espece_id: \"\",\n      cycle_id: cycle,\n      commentaire: \"\",\n    });\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setOpen(true)}\n      >\n        Añadir un lote\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Añadir un lote</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Elija la especie y un commentario.\n          </DialogContentText>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <FormControl style={{ minWidth: \"200px\" }} required>\n                <InputLabel id=\"Especie-label\">Especie del lote</InputLabel>\n                <Select\n                  labelId=\"Especie-label\"\n                  id=\"Especie-select\"\n                  value={newLot.espece_id}\n                  onChange={(e) =>\n                    setNewLot({ ...newLot, espece_id: e.target.value })\n                  }\n                >\n                  {especeList.map((e) => (\n                    <MenuItem value={e[0]}>{e[1]}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Comentario\"\n                type=\"text\"\n                value={newLot.commentaire}\n                onChange={(e) =>\n                  setNewLot({ ...newLot, commentaire: e.target.value })\n                }\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Annuler\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { authFetch } from \"auth/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n// Icons\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(styles);\n\nconst CustomTableCell = ({ row, name, onChange }) => {\n  const classes = useStyles();\n  const { isEditMode } = row;\n  return (\n    <TableCell\n      style={{\n        fontSize: \"0.85rem\",\n        fontWeight: \"300\",\n        padding: \"5px\",\n      }}\n      align=\"left\"\n      className={classes.tableCell}\n    >\n      {isEditMode ? (\n        <Input\n          value={row[name]}\n          name={name}\n          onChange={(e) => onChange(e, row)}\n          className={classes.tableCell}\n        />\n      ) : (\n        row[name]\n      )}\n    </TableCell>\n  );\n};\n\nexport default function CustomTableEdit(props) {\n  const {\n    tableHead,\n    tableData,\n    tableHeaderColor,\n    postUrl,\n    deleteUrl,\n    info_for_post,\n    setMaj,\n    maj,\n  } = props;\n  const [rows, setRows] = React.useState(\n    tableData.map((data) => ({ ...data, ...{ isEditMode: false } }))\n  );\n  const [previous, setPrevious] = React.useState({});\n  const classes = useStyles();\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n  useEffect(() => {\n    let setNull = (obj) => Object.keys(obj).forEach((k) => (obj[k] = null));\n    let temp1 = tableData.map((data) => ({\n      ...data,\n      ...{ isEditMode: false },\n    }));\n    let temp = [...temp1, { ...temp1[0] }];\n    setNull(temp[temp.length - 1]);\n    temp[temp.length - 1][\"id\"] = temp.length;\n    setRows(tableData.map((data) => ({ ...data, ...{ isEditMode: false } })));\n  }, [tableData]);\n\n  const onToggleEditMode = (id, change) => {\n    setRows((state) => {\n      return rows.map((row) => {\n        if (row.id === id) {\n          if (row.isEditMode && change) {\n            delete row.isEditMode;\n            const requestOptions = {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ info: info_for_post, ...row }),\n            };\n            authFetch(postUrl, requestOptions)\n              .then((response) => {\n                if (response.ok) {\n                  return response.json();\n                } else {\n                  throw new Error(response.statusText);\n                }\n              })\n              .then((response) => {\n                try {\n                  setMaj(~maj);\n                } catch {\n                  console.log(\"pas de maj\");\n                }\n\n                handleSnackbar(\"success\", response.message);\n              })\n              .catch((e) =>\n                handleSnackbar(\"danger\", e.name + \": \" + e.message)\n              );\n            return { ...row, isEditMode: false };\n          } else {\n            return { ...row, isEditMode: !row.isEditMode };\n          }\n        }\n        return row;\n      });\n    });\n  };\n\n  const onChange = (e, row) => {\n    if (!previous[row.id]) {\n      setPrevious((state) => ({ ...state, [row.id]: row }));\n    }\n    const value = e.target.value;\n    const name = e.target.name;\n    const { id } = row;\n    const newRows = rows.map((row) => {\n      if (row.id === id) {\n        return { ...row, [name]: value };\n      }\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  const onRevert = (id) => {\n    const newRows = rows.map((row) => {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n      return row;\n    });\n    setRows(newRows);\n    setPrevious((state) => {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id, false);\n  };\n\n  const onDelete = (id) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id: id }),\n    };\n    authFetch(deleteUrl, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  return (\n    <div>\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Paper className={classes.root} style={{ marginTop: \"0px\" }}>\n        <Table\n          stickyHeader\n          className={classes.table}\n          aria-label=\"caption table\"\n        >\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow\n              className={classes.tableHeadRow}\n              style={{ height: \"40px\" }}\n            >\n              <TableCell></TableCell>\n              {tableHead.map((prop) => {\n                return prop === \"id\" ? null : (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={prop.id}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows !== undefined\n              ? rows.map((row) => (\n                  <TableRow className={classes.tableRow} key={row.id}>\n                    <TableCell className={classes.selectTableCell}>\n                      {row.isEditMode ? (\n                        <>\n                          <IconButton\n                            style={{ padding: \"5px\" }}\n                            aria-label=\"done\"\n                            onClick={() => onToggleEditMode(row.id, true)}\n                          >\n                            <DoneIcon />\n                          </IconButton>\n                          <IconButton\n                            style={{ padding: \"5px\" }}\n                            aria-label=\"revert\"\n                            onClick={() => onRevert(row.id)}\n                          >\n                            <RevertIcon />\n                          </IconButton>\n                        </>\n                      ) : (\n                        <>\n                          <IconButton\n                            style={{ padding: \"2px\" }}\n                            aria-label=\"delete\"\n                            onClick={() => onToggleEditMode(row.id)}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton\n                            style={{ padding: \"2px\" }}\n                            aria-label=\"delete\"\n                            onClick={() => onDelete(row.id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </>\n                      )}\n                    </TableCell>\n                    {tableHead.map((item, key) => {\n                      return item === \"id\" ? null : (\n                        <CustomTableCell\n                          key={key}\n                          {...{ row, name: item, onChange }}\n                        />\n                      );\n                    })}\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { authFetch } from \"auth\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  Grid,\n  FormControl,\n  Select,\n  InputLabel,\n  MenuItem,\n  FormHelperText,\n  Card,\n  CardHeader,\n  Typography,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  Table,\n  TextField,\n} from \"@material-ui/core\";\n\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport CustomTableDelete from \"./TableDelete\";\nimport CardBody from \"./Card/CardBody\";\nimport AddSemisDialog from \"./Dialog/AddSemisDialog\";\nimport AddPechesDialog from \"./Dialog/AddPechesDialog\";\nimport AddStatsDialog from \"./Dialog/AddStatsDialog\";\nimport AddLotDialog from \"./Dialog/AddLotDialog\";\nimport CustomTableEditDelete from \"./TableEditDelete\";\n\nexport default function Lots({ cycle_, resetCycle }) {\n  const [cycle, setCycle] = useState(cycle_.toString());\n  const [lot, setLot] = useState(\"\");\n  const [comm, setComm] = useState(\"\");\n  const [lotsList, setLotsList] = useState([]);\n  const [lotsMenu, setLotsMenu] = useState([]);\n\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [data, setData] = useState({ peches: [], semis: [], statistiques: [] });\n  const [espece, setEspece] = useState(\"Tilapia\");\n  const [maj, setMaj] = useState(true);\n  const [majLots, setMajLots] = useState(true);\n  const [total, setTotal] = useState(undefined);\n\n  useEffect(() => {\n    var url = \"/api/lots\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setLotsList(response.lotsList);\n        setLotsMenu([]);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [cycle, majLots]);\n\n  useEffect(() => {\n    let temp = [];\n    for (const lots of lotsList) {\n      if (lots[1].toString() === cycle.toString()) {\n        if (lot === \"\") {\n          setLot(lots[2]);\n          setComm(lots[3]);\n        } else if (lots[2] === lot) {\n          setLot(lots[2]);\n          setComm(lots[3]);\n        }\n        temp = [[lots[2], lots[4], lots[5]], ...temp];\n      }\n    }\n    setLotsMenu(temp);\n  }, [lotsList, cycle, lot]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  useEffect(() => {\n    if (lot !== undefined && lot !== \"\") {\n      var url = \"/api/lotData/\" + lot;\n      authFetch(url)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          setEspece(response.espece ? response.espece[0] : \"\");\n          setData({\n            peches: response.peches,\n            semis: response.semis,\n            statistiques: response.statistiques,\n          });\n          setTotal(response.total);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    }\n  }, [lot, maj]);\n\n  const endLot = () => {\n    var url = \"/api/lots\";\n    var mortalite =\n      ((total.totalSemis[1] - total.totalPeches[1]) * total.totalActuel[3]) /\n      (total.totalSemis[1] - total.totalPeches[1] - total.totalActuel[0]);\n\n    const dateToday = new Date().toISOString().substring(0, 10);\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: lot,\n        quantitelb:\n          total.totalActuel[1] === 0\n            ? 0\n            : total.totalActuel[0] / total.totalActuel[1],\n        mortalite: mortalite,\n        date:\n          data.peches.length > 0\n            ? data.peches[data.peches.length - 1].fecha\n            : dateToday.substring(8) +\n              \"/\" +\n              dateToday.substring(5, 7) +\n              \"/\" +\n              dateToday.substring(0, 4),\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMajLots(~majLots);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  const handleConfirm = () => {\n    var url = \"/api/alimentation\";\n\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: lot,\n        poids: total.alimentation,\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  return (\n    <div id=\"lot\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={2} align=\"center\">\n          <Typography variant=\"h4\">{espece}</Typography>\n        </Grid>\n        <Grid item xs={2} align=\"center\">\n          <Typography variant=\"p\">{comm}</Typography>\n        </Grid>\n        <Grid item xs={2} align=\"center\">\n          <FormControl>\n            <InputLabel id=\"cycle-label\">Ciclo</InputLabel>\n            <Select\n              labelId=\"cycle-label\"\n              id=\"cycle-select\"\n              value={cycle}\n              onChange={(e) => setCycle(e.target.value)}\n            >\n              {lotsList.map((Cycle, key) => (\n                <MenuItem key={key} value={Cycle[1]}>\n                  {Cycle[0] + \"#\" + Cycle[1]}\n                </MenuItem>\n              ))}\n            </Select>\n            <FormHelperText>Seleccione un ciclo</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid container spacing={1} item xs={4} align=\"center\" justify=\"center\">\n          {lotsMenu.map((Lot, key) => (\n            <Grid key={key} item>\n              <Button\n                key={key + 1000}\n                variant=\"contained\"\n                color={Lot[2] === 1 ? \"green\" : \"secondary\"}\n                onClick={() => setLot(Lot[0])}\n              >\n                {Lot[1]}\n              </Button>\n            </Grid>\n          ))}\n          <Grid item>\n            <AddLotDialog\n              cycle={cycle}\n              handleSnackbar={handleSnackbar}\n              setMaj={setMajLots}\n              maj={majLots}\n            />\n          </Grid>\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={resetCycle}>\n              Back\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item xs={6} container align=\"center\">\n          {/* Semis */}\n          <Card style={{ width: \"100%\" }}>\n            <CardHeader\n              style={{ padding: \"8px\", paddingRight: \"16px\" }}\n              id=\"Header\"\n              color=\"secondary\"\n              title=\"Siembra\"\n              action={\n                <AddSemisDialog\n                  lot={lot}\n                  handleSnackbar={handleSnackbar}\n                  setMaj={setMaj}\n                  maj={maj}\n                  espece={espece}\n                />\n              }\n            />\n            <CardBody style={{ padding: 0 }}>\n              <CustomTableEditDelete\n                tableHead={[\n                  \"fecha\",\n                  \"peso\",\n                  \"cant/lb\",\n                  \"gr/unidad\",\n                  \"cantidad\",\n                  \"comentario\",\n                ]}\n                tableHeaderColor=\"primary\"\n                tableData={data.semis}\n                postUrl={\"/api/semis/\" + lot}\n                deleteUrl={\"/api/lotData/Semis\"}\n                newLine={true}\n                info_for_post={lot}\n                setMaj={setMaj}\n                maj={maj}\n              />\n            </CardBody>\n          </Card>\n        </Grid>\n        <Grid item xs={6} container align=\"center\">\n          {/* Statistiques */}\n          <Card style={{ width: \"100%\" }}>\n            <CardHeader\n              style={{ padding: \"8px\", paddingRight: \"16px\" }}\n              id=\"Header\"\n              color=\"info\"\n              title=\"Estadísticas\"\n              action={\n                <AddStatsDialog\n                  lot={lot}\n                  handleSnackbar={handleSnackbar}\n                  setMaj={setMaj}\n                  maj={maj}\n                  espece={espece}\n                  mortTheo={total ? total.totalActuel[3] : null}\n                />\n              }\n            />\n            <CardBody style={{ padding: 0 }}>\n              <CustomTableDelete\n                tableHead={[\n                  \"fecha\",\n                  \"typoestat\",\n                  \"cant/lb\",\n                  \"gr/unidad\",\n                  \"mortalidad\",\n                  \"comentario\",\n                ]}\n                tableHeaderColor=\"primary\"\n                tableData={data.statistiques}\n                postUrl={\"/api/lotData/Statistiques\"}\n                newLine={true}\n                info_for_post={lot}\n                setMaj={setMaj}\n                maj={maj}\n              />\n            </CardBody>\n          </Card>\n        </Grid>\n        <Grid item xs={6} container align=\"center\">\n          {/* Peches */}\n          <Card style={{ width: \"100%\" }}>\n            <CardHeader\n              style={{ padding: \"8px\", paddingRight: \"16px\" }}\n              id=\"Header\"\n              color=\"primary\"\n              title=\"Pescas\"\n              action={\n                <AddPechesDialog\n                  lot={lot}\n                  handleSnackbar={handleSnackbar}\n                  setMaj={setMaj}\n                  maj={maj}\n                  espece={espece}\n                />\n              }\n            />\n            <CardBody style={{ padding: 0 }}>\n              <CustomTableEditDelete\n                tableHead={[\n                  \"fecha\",\n                  \"peso\",\n                  \"cant/lb\",\n                  \"gr/unidad\",\n                  \"cantidad\",\n                  \"comentario\",\n                  \"destino\",\n                ]}\n                tableHeaderColor=\"primary\"\n                tableData={data.peches}\n                postUrl={\"/api/peches/\" + lot}\n                deleteUrl={\"/api/lotData/Peches\"}\n                newLine={true}\n                setMaj={setMaj}\n                maj={maj}\n              />\n            </CardBody>\n          </Card>\n        </Grid>\n        <Grid item xs={6} container align=\"center\">\n          {/* Total */}\n          <Card style={{ width: \"100%\" }}>\n            <CardHeader\n              style={{ padding: \"8px\", paddingRight: \"16px\" }}\n              id=\"Header\"\n              color=\"primary\"\n              title=\"Total\"\n              action={\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => endLot()}\n                >\n                  Terminar el lote\n                </Button>\n              }\n            />\n            <CardBody style={{ padding: 0 }}>\n              {total ? (\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"total\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>{\"\"}</TableCell>\n                        <TableCell>animales</TableCell>\n                        <TableCell>libras</TableCell>\n                        <TableCell>\n                          {espece.substring(0, 10) === \"Postlarves\" ||\n                          espece.substring(0, 9) === \"Juvéniles\"\n                            ? \"animales por libras\"\n                            : \"grpoisson\"}\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow>\n                        <TableCell>Siembra</TableCell>\n                        <TableCell>{Math.round(total.totalSemis[1])}</TableCell>\n                        <TableCell>\n                          {Math.round(total.totalSemis[0] * 10) / 10}\n                        </TableCell>\n                        <TableCell>\n                          {espece.substring(0, 10) === \"Postlarves\" ||\n                          espece.substring(0, 9) === \"Juvéniles\"\n                            ? Math.round(\n                                (total.totalSemis[1] / total.totalSemis[0]) * 10\n                              ) / 10\n                            : Math.round(\n                                ((total.totalSemis[0] * 454) /\n                                  total.totalSemis[1]) *\n                                  10\n                              ) / 10}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell>Pesca</TableCell>\n                        <TableCell>{total.totalPeches[1]}</TableCell>\n                        <TableCell>{total.totalPeches[0]}</TableCell>\n                        <TableCell>\n                          {espece.substring(0, 10) === \"Postlarves\" ||\n                          espece.substring(0, 9) === \"Juvéniles\"\n                            ? Math.round(\n                                (total.totalPeches[1] / total.totalPeches[0]) *\n                                  10\n                              ) / 10\n                            : Math.round(\n                                ((total.totalPeches[0] * 454) /\n                                  total.totalPeches[1]) *\n                                  10\n                              ) / 10}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell>Actual teo</TableCell>\n                        <TableCell>\n                          {total.totalActuel[0] < 0 ? 0 : total.totalActuel[0]}\n                        </TableCell>\n                        <TableCell>\n                          {total.totalActuel[1] < 0 ? 0 : total.totalActuel[1]}\n                        </TableCell>\n                        <TableCell>\n                          {total.totalActuel[0] <= 0 ||\n                          total.totalActuel[1] <= 0\n                            ? 0\n                            : espece.substring(0, 10) === \"Postlarves\" ||\n                              espece.substring(0, 9) === \"Juvéniles\"\n                            ? Math.round(\n                                (total.totalActuel[0] / total.totalActuel[1]) *\n                                  10\n                              ) / 10\n                            : Math.round(\n                                ((total.totalActuel[1] * 454) /\n                                  total.totalActuel[0]) *\n                                  10\n                              ) / 10}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell>Actual stat</TableCell>\n                        <TableCell>\n                          {data.statistiques && data.statistiques.length > 0\n                            ? Math.round(\n                                total.totalSemis[1] -\n                                  ((total.totalSemis[1] -\n                                    total.totalPeches[1] -\n                                    total.totalActuel[0]) *\n                                    parseFloat(\n                                      data.statistiques[\n                                        data.statistiques.length - 1\n                                      ].mortalidad.substring(-2)\n                                    )) /\n                                    100 /\n                                    total.totalActuel[3]\n                              ) -\n                                total.totalPeches[1] >\n                              0\n                              ? Math.round(\n                                  total.totalSemis[1] -\n                                    ((total.totalSemis[1] -\n                                      total.totalPeches[1] -\n                                      total.totalActuel[0]) *\n                                      parseFloat(\n                                        data.statistiques[\n                                          data.statistiques.length - 1\n                                        ].mortalidad.substring(-2)\n                                      )) /\n                                      100 /\n                                      total.totalActuel[3]\n                                ) - total.totalPeches[1]\n                              : 0\n                            : null}\n                        </TableCell>\n                        <TableCell>\n                          {/* console.log(\n                                total.totalSemis[1],\n                                total.totalPeches[1],\n                                total.totalActuel[0],\n                                parseFloat(\n                                  data.statistiques[\n                                    data.statistiques.length - 1\n                                  ].mortalidad.substring(-2)\n                                ) / 100,\n                                total.totalActuel[3],\n                                total.totalPeches[1],\n                                data.statistiques[data.statistiques.length - 1][\n                                  \"cant/lb\"\n                                ]\n                              ) */}\n                          {data.statistiques && data.statistiques.length > 0\n                            ? Math.round(\n                                (total.totalSemis[1] -\n                                  ((total.totalSemis[1] -\n                                    total.totalPeches[1] -\n                                    total.totalActuel[0]) *\n                                    parseFloat(\n                                      data.statistiques[\n                                        data.statistiques.length - 1\n                                      ].mortalidad.substring(-2)\n                                    )) /\n                                    100 /\n                                    total.totalActuel[3] -\n                                  total.totalPeches[1]) /\n                                  data.statistiques[\n                                    data.statistiques.length - 1\n                                  ][\"cant/lb\"]\n                              ) > 0\n                              ? Math.round(\n                                  (total.totalSemis[1] -\n                                    ((total.totalSemis[1] -\n                                      total.totalPeches[1] -\n                                      total.totalActuel[0]) *\n                                      parseFloat(\n                                        data.statistiques[\n                                          data.statistiques.length - 1\n                                        ].mortalidad.substring(-2)\n                                      )) /\n                                      100 /\n                                      total.totalActuel[3] -\n                                    total.totalPeches[1]) /\n                                    data.statistiques[\n                                      data.statistiques.length - 1\n                                    ][\"cant/lb\"]\n                                )\n                              : 0\n                            : null}\n                        </TableCell>\n                        <TableCell>\n                          {data.statistiques && data.statistiques.length > 0\n                            ? espece.substring(0, 10) === \"Postlarves\" ||\n                              espece.substring(0, 9) === \"Juvéniles\"\n                              ? data.statistiques[data.statistiques.length - 1][\n                                  \"cant/lb\"\n                                ]\n                              : Math.round(\n                                  data.statistiques[\n                                    data.statistiques.length - 1\n                                  ][\"gr/unidad\"] * 10\n                                ) / 10\n                            : null}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell colSpan={2} align=\"right\">\n                          Mort teo / stat\n                        </TableCell>\n                        <TableCell>\n                          {Math.round(total.totalActuel[3] * 1000) / 10} %\n                        </TableCell>\n                        <TableCell>\n                          {data.statistiques && data.statistiques.length > 0\n                            ? data.statistiques[data.statistiques.length - 1]\n                                .mortalidad\n                            : null}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell colSpan={2} align=\"right\">\n                          Alimentacion teo / stat\n                        </TableCell>\n                        <TableCell>\n                          {total.totalActuel[4]} lbs{\" \"}\n                          {Math.round(total.totalActuel[5] * 10000) / 100} %\n                        </TableCell>\n                        <TableCell>\n                          {Math.round(total.alimentationstat * 10) / 10} lbs{\" \"}\n                          {Math.round(total.alimentationstatpourc * 10000) /\n                            100}{\" \"}\n                          %\n                        </TableCell>\n                        <TableCell>\n                          <TextField\n                            style={{ maxWidth: \"50px\" }}\n                            label=\"Dar\"\n                            type=\"text\"\n                            value={total.alimentation}\n                            InputLabelProps={{ shrink: true }}\n                            onChange={(e) =>\n                              setTotal({\n                                ...total,\n                                alimentation: e.target.value,\n                              })\n                            }\n                          />\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell>Tiempo</TableCell>\n                        <TableCell>{total.totalActuel[2]} meses</TableCell>\n                        <TableCell>\n                          <Button onClick={handleConfirm} color=\"primary\">\n                            V\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              ) : null}\n            </CardBody>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { authFetch } from \"auth/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Button } from \"@material-ui/core\";\n// Icons\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport Lots from \"components/Lots\";\n\nconst useStyles = makeStyles(styles);\n\nconst editable = [\"Estanque\", \"Fecha lleno\", \"Fecha vacio\", \"Superficie\"];\n\nconst CustomTableCell = ({ row, name, onChange, i }) => {\n  const classes = useStyles();\n  const { isEditMode } = row;\n  return (\n    <TableCell\n      key={\"cell-custom-\" + row.id + \"-\" + i}\n      align=\"left\"\n      className={classes.tableCell}\n    >\n      {isEditMode && editable.includes(name) ? (\n        <Input\n          key={\"input-custom-\" + row.id + \"-\" + i}\n          value={row[name]}\n          name={name}\n          onChange={(e) => onChange(e, row)}\n          className={classes.tableCell}\n        />\n      ) : (\n        row[name]\n      )}\n    </TableCell>\n  );\n};\n\nexport default function CustomTableEdit(props) {\n  const {\n    tableHead,\n    tableData,\n    tableHeaderColor,\n    postUrl,\n    newLine,\n    handleSnackbar,\n    maj,\n    setMaj,\n  } = props;\n  const [rows, setRows] = useState(\n    tableData.map((data) => ({ ...data, ...{ isEditMode: false } }))\n  );\n  const [previous, setPrevious] = useState({});\n  const classes = useStyles();\n  const [openCycle, setOpenCycle] = useState({ bool: false, cycle: 0 });\n\n  useEffect(() => {\n    let setNull = (obj) => Object.keys(obj).forEach((k) => (obj[k] = null));\n    let temp1 = tableData.map((data) => ({\n      ...data,\n      ...{ isEditMode: false },\n    }));\n    let temp = [...temp1, { ...temp1[0] }];\n    setNull(temp[temp.length - 1]);\n    temp[temp.length - 1][\"id\"] = temp.length;\n    newLine\n      ? setRows(temp)\n      : setRows(\n          tableData.map((data) => ({ ...data, ...{ isEditMode: false } }))\n        );\n  }, [tableData, newLine]);\n\n  const onToggleEditMode = (id, change) => {\n    setRows((state) => {\n      return rows.map((row) => {\n        if (row.id === id) {\n          if (row.isEditMode && change) {\n            delete row.isEditMode;\n            const data = {\n              id: row[\"id\"],\n              Estanque: row[\"Estanque\"],\n              \"Fecha lleno\": row[\"Fecha lleno\"],\n              \"Fecha vacio\": row[\"Fecha vacio\"],\n              Superficie: row[\"Superficie\"],\n            };\n            const requestOptions = {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(data),\n            };\n            authFetch(postUrl, requestOptions)\n              .then((response) => {\n                return response.json();\n              })\n              .then((response) => {\n                handleSnackbar(\"success\", response.message);\n              })\n              .catch((e) => {\n                handleSnackbar(\"warning\", e);\n              });\n            return { ...row, isEditMode: false };\n          } else {\n            return { ...row, isEditMode: !row.isEditMode };\n          }\n        }\n        return row;\n      });\n    });\n  };\n\n  const onChange = (e, row) => {\n    if (!previous[row.id]) {\n      setPrevious((state) => ({ ...state, [row.id]: row }));\n    }\n    const value = e.target.value;\n    const name = e.target.name;\n    const { id } = row;\n    const newRows = rows.map((row) => {\n      if (row.id === id) {\n        return { ...row, [name]: value };\n      }\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  const onRevert = (id) => {\n    const newRows = rows.map((row) => {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n      return row;\n    });\n    setRows(newRows);\n    setPrevious((state) => {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id, false);\n  };\n\n  const resetCycle = () => {\n    setOpenCycle({ bool: false, cycle: 0 });\n    setMaj(~maj);\n  };\n\n  return (\n    <Paper\n      style={{\n        margin: \"0px\",\n        height: \"100%\",\n        maxHeight: \"calc(100vh - 180px)\",\n      }}\n      className={classes.root}\n    >\n      {openCycle.bool ? (\n        <Lots cycle_={openCycle.cycle} resetCycle={resetCycle}></Lots>\n      ) : (\n        <Table className={classes.table} aria-label=\"caption table\">\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              <TableCell></TableCell>\n              {tableHead.map((prop, key) => {\n                return prop === \"id\" ? null : (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={\"cell-\" + key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows !== undefined\n              ? rows.map((row, key) => (\n                  <TableRow key={key}>\n                    <TableCell key={key} className={classes.selectTableCell}>\n                      {row.isEditMode ? (\n                        <>\n                          <IconButton\n                            aria-label=\"done\"\n                            onClick={() => onToggleEditMode(row.id, true)}\n                          >\n                            <DoneIcon />\n                          </IconButton>\n                          <IconButton\n                            aria-label=\"revert\"\n                            onClick={() => onRevert(row.id)}\n                          >\n                            <RevertIcon />\n                          </IconButton>\n                        </>\n                      ) : (\n                        <IconButton\n                          aria-label=\"delete\"\n                          onClick={() => onToggleEditMode(row.id)}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      )}\n                    </TableCell>\n                    {tableHead.map((item, i) => {\n                      return item === \"id\" ? null : (\n                        <CustomTableCell\n                          id={i}\n                          key={i}\n                          {...{ row, name: item, onChange }}\n                        />\n                      );\n                    })}\n                    <Button\n                      id={row.id}\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      onClick={(e) => {\n                        e.target.id === \"\"\n                          ? setOpenCycle({\n                              bool: true,\n                              cycle: e.target.parentNode.id,\n                            })\n                          : setOpenCycle({ bool: true, cycle: e.target.id });\n                      }}\n                    >\n                      +\n                    </Button>\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n      )}\n    </Paper>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"assets/css/App.css\";\nimport {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  select: {\n    color: \"white\",\n    \"&:before\": {\n      borderColor: \"white\",\n      color: \"white\",\n    },\n    \"&:after\": {\n      borderColor: \"white\",\n    },\n  },\n  icon: {\n    fill: \"white\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport default function FormDialog({\n  handleSnackbar,\n  setEspece,\n  espece,\n  maj,\n  setMaj,\n}) {\n  const [bassinsList, setBassinsList] = useState([\"\"]);\n  const [especesList, setEspecesList] = useState([\"\"]);\n  const [especeAdd, setEspeceAdd] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [open2, setOpen2] = useState(false);\n  const [bassin, setBassin] = useState(\"\");\n  const [bassin2, setBassin2] = useState(\"tous\");\n  const [date, setDate] = useState(\"\");\n  const [dateDebut, setDateDebut] = useState(\"\");\n  const [dateFin, setDateFin] = useState(\"\");\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    var url = \"/api/especes\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setBassinsList(response.bassins);\n        setEspecesList(response.especes);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [handleSnackbar]);\n\n  const handleAddClose = () => {\n    if (date.length !== 10) {\n      handleSnackbar(\"danger\", \"Formato de fecha incorrecto\");\n    } else {\n      setOpen(false);\n      var url = \"/api/cycles\";\n      const requestOptions = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          Bassin: bassin,\n          espece: especeAdd,\n          Date:\n            date.substring(6, 10) +\n            \"-\" +\n            date.substring(3, 5) +\n            \"-\" +\n            date.substring(0, 2),\n        }),\n      };\n      authFetch(url, requestOptions)\n        .then((response) => {\n          if (response.status === 401) {\n            return null;\n          } else if (response.status === 500) {\n            return null;\n          }\n          return response.json();\n        })\n        .then((response) => {\n          response !== null\n            ? handleSnackbar(\"success\", response.message)\n            : handleSnackbar(\"warning\", \"Bad request\");\n          setMaj(~maj);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <FormControl\n        style={{\n          backgroundColor: \"#f50057\",\n          color: \"fff\",\n          boxShadow:\n            \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\n          borderRadius: \"4px\",\n          marginRight: \"8px\",\n          padding: 8,\n        }}\n      >\n        <Select\n          className={classes.select}\n          inputProps={{\n            classes: {\n              icon: classes.icon,\n            },\n          }}\n          labelId=\"espece-label\"\n          id=\"espece-select\"\n          value={espece}\n          onChange={(e) => setEspece(e.target.value)}\n        >\n          <MenuItem value=\"Tout\">Todo</MenuItem>\n          <MenuItem value=\"tilapia\">Tilapia</MenuItem>\n          <MenuItem value=\"crevette\">Camarones</MenuItem>\n          <MenuItem value=\"carpe\">Carpa</MenuItem>\n          <MenuItem value=\"colossoma\">Colossoma</MenuItem>\n        </Select>\n        <FormHelperText style={{ color: \"white\" }}>\n          Filtrar por especies\n        </FormHelperText>\n      </FormControl>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => setOpen2(true)}\n        style={{ marginRight: \"0.5em\" }}\n      >\n        Ver ciclos anteriores\n      </Button>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => setOpen(true)}\n      >\n        Añadir un ciclo\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n          setBassin(\"\");\n          setDate(\"\");\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\"> Añadir un ciclo</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Seleccione un estanque y la fecha de llenado.{\" \"}\n          </DialogContentText>\n          <Grid container spacing={1}>\n            <Grid item>\n              <FormControl style={{ minWidth: \"150px\" }}>\n                <InputLabel id=\"bassin-label\">Estanque</InputLabel>\n                <Select\n                  labelId=\"bassin-label\"\n                  id=\"bassin-select\"\n                  value={bassin}\n                  onChange={(e) => setBassin(e.target.value)}\n                >\n                  {bassinsList.map((Bassin, key) => (\n                    <MenuItem key={key} value={Bassin[0]}>\n                      {Bassin[1]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <FormControl style={{ minWidth: \"150px\" }}>\n                <InputLabel id=\"espece-label\">Espece</InputLabel>\n                <Select\n                  labelId=\"espece-label\"\n                  id=\"espece-select\"\n                  value={especeAdd}\n                  onChange={(e) => setEspeceAdd(e.target.value)}\n                >\n                  {especesList.map((espece, key) => (\n                    <MenuItem key={key} value={espece[0]}>\n                      {espece[1]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <TextField\n                required\n                label=\"Date dd/MM/yyyy\"\n                type=\"text\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n              setBassin(\"\");\n              setDate(\"\");\n            }}\n            color=\"primary\"\n          >\n            Cancelar\n          </Button>\n          <Button onClick={handleAddClose} color=\"primary\">\n            Añadir\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={open2}\n        onClose={() => {\n          setOpen2(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\"> Ver ciclos anteriores</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={1}>\n            <Grid item>\n              <FormControl style={{ minWidth: \"150px\" }}>\n                <InputLabel id=\"bassin-label\">Estanque</InputLabel>\n                <Select\n                  labelId=\"bassin-label\"\n                  id=\"bassin-select\"\n                  value={bassin2}\n                  onChange={(e) => setBassin2(e.target.value)}\n                >\n                  <MenuItem value={\"tous\"}>Tous</MenuItem>\n                  {bassinsList.map((Bassin, key) => (\n                    <MenuItem key={key} value={Bassin[0]}>\n                      {Bassin[1]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                required\n                label=\"Date début\"\n                type=\"text\"\n                value={dateDebut}\n                onChange={(e) => setDateDebut(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                required\n                label=\"Date fin\"\n                type=\"text\"\n                value={dateFin}\n                onChange={(e) => setDateFin(e.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen2(false);\n            }}\n            color=\"primary\"\n          >\n            Cancelar\n          </Button>\n          <Button\n            href={\n              \"/copeyito/ancienCycle/\" +\n              bassin2 +\n              \"/\" +\n              dateDebut.substring(6, 10) +\n              \"-\" +\n              dateDebut.substring(3, 5) +\n              \"-\" +\n              dateDebut.substring(0, 2) +\n              \"/\" +\n              dateFin.substring(6, 10) +\n              \"-\" +\n              dateFin.substring(3, 5) +\n              \"-\" +\n              dateFin.substring(0, 2)\n            }\n            color=\"primary\"\n          >\n            Voir\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import {\n  successColor,\n  dangerColor,\n  whiteColor,\n  grayColor,\n  hexToRgb,\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dashboardStyle = {\n  successText: {\n    color: successColor[0],\n  },\n  dangerText: {\n    color: dangerColor[0],\n  },\n  upArrowCardCategory: {\n    width: \"16px\",\n    height: \"16px\",\n  },\n  stats: {\n    color: grayColor[0],\n    display: \"inline-flex\",\n    fontSize: \"12px\",\n    lineHeight: \"22px\",\n    \"& svg\": {\n      top: \"4px\",\n      width: \"16px\",\n      height: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      top: \"4px\",\n      fontSize: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n    },\n  },\n  cardCategory: {\n    color: grayColor[0],\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    paddingTop: \"10px\",\n    marginBottom: \"0\",\n  },\n  cardCategoryWhite: {\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\",\n  },\n  cardTitle: {\n    color: grayColor[2],\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n  cardTitleWhite: {\n    color: whiteColor,\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nexport default dashboardStyle;\n","import { useEffect, useState } from \"react\";\n\nimport Chart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\n\nexport default function DateChart({ title, data, dateOption }) {\n  const [series, setSeries] = useState(data);\n  const [graphState, setGraphState] = useState({\n    options: {\n      chart: {\n        id: \"area-datetime\" + title,\n        type: \"area\",\n        height: 400,\n        zoom: {\n          autoScaleYaxis: true,\n        },\n      },\n      annotations: {\n        yaxis: [\n          {\n            y: 30,\n            borderColor: \"#999\",\n            label: {\n              show: true,\n              text: \"Support\",\n              style: {\n                color: \"#fff\",\n                background: \"#00E396\",\n              },\n            },\n          },\n        ],\n        xaxis: [\n          {\n            x: dateOption.xStartDate,\n            borderColor: \"#999\",\n            yAxisIndex: 0,\n            label: {\n              show: true,\n              text: \"Rally\",\n              style: {\n                color: \"#fff\",\n                background: \"#775DD0\",\n              },\n            },\n          },\n        ],\n      },\n      colors: dateOption.colors,\n      dataLabels: {\n        enabled: false,\n      },\n      markers: {\n        size: 0,\n        style: \"hollow\",\n      },\n      xaxis: {\n        type: \"datetime\",\n        min: dateOption.xStartDate,\n        tickAmount: 6,\n      },\n      tooltip: {\n        x: {\n          format: title === \"O2\" ? \"dd MMM yyyy hh TT\" : \"dd MMM yyyy\",\n        },\n        theme: dateOption.theme,\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.7,\n          opacityTo: 0.9,\n          stops: [0, 100],\n        },\n      },\n    },\n    selection: \"one_year\",\n  });\n  useEffect(() => {\n    setSeries(data);\n  }, [data]);\n\n  const updateData = (timeline) => {\n    setGraphState({ ...graphState, selection: timeline });\n\n    let dateOneMonth = new Date();\n    dateOneMonth.setMonth(dateOneMonth.getMonth() - 1);\n\n    let dateSixMonth = new Date();\n    dateSixMonth.setMonth(dateSixMonth.getMonth() - 6);\n\n    let dateOneYear = new Date();\n    dateOneYear.setMonth(dateOneYear.getMonth() - 12);\n\n    switch (timeline) {\n      case \"one_month\":\n        ApexCharts.exec(\n          \"area-datetime\" + title,\n          \"zoomX\",\n          dateOneMonth.getTime(),\n          new Date().getTime()\n        );\n        break;\n      case \"six_months\":\n        ApexCharts.exec(\n          \"area-datetime\" + title,\n          \"zoomX\",\n          dateSixMonth.getTime(),\n          new Date().getTime()\n        );\n        break;\n      case \"one_year\":\n        ApexCharts.exec(\n          \"area-datetime\" + title,\n          \"zoomX\",\n          dateOneYear.getTime(),\n          new Date().getTime()\n        );\n        break;\n      case \"all\":\n        ApexCharts.exec(\n          \"area-datetime\" + title,\n          \"zoomX\",\n          dateOption.xStartDate,\n          new Date().getTime()\n        );\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div id={\"chart\" + title}>\n      <div className={\"toolbar\" + title}>\n        <h4 style={{ margin: \"0\" }}>{title}</h4>\n        <button\n          id=\"one_month\"\n          onClick={() => updateData(\"one_month\")}\n          className={graphState.selection === \"one_month\" ? \"active\" : \"\"}\n        >\n          1M\n        </button>\n        &nbsp;\n        <button\n          id=\"six_months\"\n          onClick={() => updateData(\"six_months\")}\n          className={graphState.selection === \"six_months\" ? \"active\" : \"\"}\n        >\n          6M\n        </button>\n        &nbsp;\n        <button\n          id=\"one_year\"\n          onClick={() => updateData(\"one_year\")}\n          className={graphState.selection === \"one_year\" ? \"active\" : \"\"}\n        >\n          1Y\n        </button>\n        &nbsp;\n        <button\n          id=\"all\"\n          onClick={() => updateData(\"all\")}\n          className={graphState.selection === \"all\" ? \"active\" : \"\"}\n        >\n          ALL\n        </button>\n      </div>\n\n      <div id={\"chart-timeline\" + title}>\n        <Chart\n          options={graphState.options}\n          series={series}\n          type=\"area\"\n          height={400}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { authFetch } from \"auth\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport \"assets/css/App.css\";\nimport {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n} from \"@material-ui/core\";\n// icons\nimport { ArrowUpward, ArrowDownward, ArrowForward } from \"@material-ui/icons\";\n// styles\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport DateChart from \"components/DateChart\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AnalysesEau() {\n  const [bassinsList, setBassinsList] = useState([\"B12\"]);\n  const [bassin, setBassin] = useState(\"B12\");\n  const [tc, setTC] = useState(false);\n  const [color, setColor] = useState(\"primary\");\n  const [message, setMessage] = useState(\"\");\n  const [temps, setTemps] = useState([\"102\"]);\n  const [O2, setO2] = useState([]);\n  const [ph, setPh] = useState([\"102\"]);\n  const [SE, setSE] = useState([\"102\"]);\n  const [majBassin, setMajBassin] = useState(false);\n\n  let dateOneYear = new Date();\n  dateOneYear.setMonth(dateOneYear.getMonth() - 12);\n\n  useEffect(() => {\n    var url = \"/api/bassins\";\n    authFetch(url)\n      .then((response) => {\n        if (response.status === 401) {\n          handleSnackbar(\"danger\", \"Sorry you aren't authorized!\");\n          return null;\n        } else if (response.status === 500) {\n          handleSnackbar(\"warning\", \"Bad request\");\n          return null;\n        }\n        return response.json();\n      })\n      .then((response) => {\n        setBassinsList(response.bassins);\n        setBassin(response.bassins[10]);\n        setMajBassin(true);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (majBassin) {\n      var url =\n        \"/api/analyseEauGraph/\" +\n        bassin +\n        \"/\" +\n        dateOneYear.toISOString().substring(0, 10);\n      authFetch(url)\n        .then((response) => {\n          if (response.status === 401) {\n            handleSnackbar(\"danger\", \"Sorry you aren't authorized!\");\n            return null;\n          }\n          return response.json();\n        })\n        .then((response) => {\n          setTemps(response.temps);\n          setO2(response.oxygene);\n          setPh(response.ph);\n          setSE(response.se);\n        });\n    }\n  }, [bassin, majBassin]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  const handleBassinChange = (e) => {\n    setBassin(e.target.value);\n  };\n\n  return (\n    <div id=\"#copeyito\" style={{ marginTop: \"1em\" }}>\n      <Grid container spacing={1}>\n        <Snackbar\n          place=\"tc\"\n          color={color}\n          message={message}\n          open={tc}\n          closeNotification={() => setTC(false)}\n          close\n        />\n        <Grid item xs={12} spacing={1} align=\"center\" container>\n          <Grid item xs={6} align=\"right\">\n            <FormControl>\n              <InputLabel id=\"bassin-label\">Estanque</InputLabel>\n              <Select\n                labelId=\"bassin-label\"\n                id=\"bassin-select\"\n                value={bassin}\n                onChange={handleBassinChange}\n              >\n                {bassinsList !== \"\"\n                  ? bassinsList.map((Bassin, key) => (\n                      <MenuItem key={key} value={Bassin}>\n                        {Bassin}\n                      </MenuItem>\n                    ))\n                  : null}\n              </Select>\n              <FormHelperText>Seleccione un estanque</FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <Grid item xs={6} align=\"center\">\n          <Card chart>\n            <CardHeader color=\"success\">\n              {temps && temps.length !== 0 ? (\n                <DateChart\n                  title={\"Temperature\"}\n                  data={[\n                    {\n                      name: \"temps\",\n                      data: temps,\n                    },\n                  ]}\n                  dateOption={{\n                    xStartDate: new Date(\n                      dateOneYear.toISOString().substring(0, 10)\n                    ).getTime(),\n                    colors: [\"#fff\"],\n                    theme: \"dark\",\n                  }}\n                />\n              ) : null}\n            </CardHeader>\n            <CardBody>\n              {/* <h4 className={classes.cardTitle}>Temperatura del agua</h4> */}\n              {/* <p className={classes.cardCategory}> */}\n              {/* {TextEvolution(temps, \"Temperature\")} */}\n              {/* </p> */}\n            </CardBody>\n          </Card>\n        </Grid>\n        <Grid item xs={6} align=\"center\">\n          <Card chart>\n            <CardHeader color=\"warning\">\n              {O2 && O2.length !== 0 ? (\n                <DateChart\n                  title={\"O2\"}\n                  data={[\n                    {\n                      name: \"O2\",\n                      data: O2,\n                    },\n                  ]}\n                  dateOption={{\n                    xStartDate: new Date(\n                      dateOneYear.toISOString().substring(0, 10)\n                    ).getTime(),\n                    colors: [\"#fff\"],\n                    theme: \"dark\",\n                  }}\n                />\n              ) : null}\n            </CardHeader>\n            <CardBody>\n              {/* <h4 className={classes.cardTitle}>Oxígeno</h4> */}\n              {/* <p className={classes.cardCategory}>{TextEvolution(O2, \"O2\")}</p> */}\n            </CardBody>\n          </Card>\n        </Grid>\n        <Grid item xs={6} align=\"center\">\n          <Card chart>\n            <CardHeader color=\"info\">\n              {ph && ph.length !== 0 ? (\n                <DateChart\n                  title={\"PH\"}\n                  data={[\n                    {\n                      name: \"PH\",\n                      data: ph,\n                    },\n                  ]}\n                  dateOption={{\n                    xStartDate: new Date(\n                      dateOneYear.toISOString().substring(0, 10)\n                    ).getTime(),\n                    colors: [\"#fff\"],\n                    theme: \"dark\",\n                  }}\n                />\n              ) : null}\n            </CardHeader>\n            <CardBody>\n              {/* <h4 className={classes.cardTitle}>PH del agua</h4> */}\n              {/* <p className={classes.cardCategory}>{TextEvolution(ph, \"PH\")}</p> */}\n            </CardBody>\n          </Card>\n        </Grid>\n        <Grid item xs={6} align=\"center\">\n          <Card chart>\n            <CardHeader color=\"danger\">\n              {SE && SE.length !== 0 ? (\n                <DateChart\n                  title={\"SE\"}\n                  data={[\n                    {\n                      name: \"SE\",\n                      data: SE,\n                    },\n                  ]}\n                  dateOption={{\n                    xStartDate: new Date(\n                      dateOneYear.toISOString().substring(0, 10)\n                    ).getTime(),\n                    colors: [\"#fff\"],\n                    theme: \"dark\",\n                  }}\n                />\n              ) : null}\n            </CardHeader>\n            <CardBody>\n              {/* <h4 className={classes.cardTitle}>SE del agua</h4> */}\n              {/* <p className={classes.cardCategory}>{TextEvolution(SE, \"SE\")}</p> */}\n            </CardBody>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst computeEvolution = (list) => {\n  return (\n    ((parseFloat(list[list.length - 1]) - parseFloat(list[list.length - 2])) /\n      parseFloat(list[list.length - 2])) *\n    100\n  );\n};\n\nconst TextEvolution = (list, name) => {\n  const classes = useStyles();\n  const evol = computeEvolution(list);\n  if (isNaN(evol)) {\n    return null;\n  }\n  if (evol < 0) {\n    return (\n      <span className={classes.dangerText}>\n        <ArrowDownward className={classes.upArrowCardCategory} />\n        {evol}% disminución en el día de hoy.\n      </span>\n    );\n  } else if (evol === 0) {\n    return (\n      <span className={classes.successText}>\n        <ArrowForward className={classes.upArrowCardCategory} />\n        0% evolución.\n      </span>\n    );\n  } else {\n    return (\n      <span className={classes.successText}>\n        <ArrowUpward className={classes.upArrowCardCategory} />\n        {evol}% aumento en el día de hoy .\n      </span>\n    );\n  }\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { authFetch } from \"auth\";\nimport {\n  Grid,\n  Button,\n  TextField,\n  CardHeader,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AddAnalyseEau() {\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [loading, setLoading] = useState(true);\n\n  const [cyclesList, setCyclesList] = useState(undefined);\n  const [cycle, setCycle] = useState(undefined);\n  const [date, setDate] = useState(new Date().toISOString().substring(0, 10));\n  const [fetchDate, setFetchDate] = useState(\"\");\n  const [o2ToSend0, setO2ToSend0] = useState({ O2: \"\", heure: 17 });\n  const [o2ToSend1, setO2ToSend1] = useState({ O2: \"\", heure: 22 });\n  const [o2ToSend2, setO2ToSend2] = useState({ O2: \"\", heure: 0 });\n  const [o2ToSend3, setO2ToSend3] = useState({ O2: \"\", heure: 4 });\n  const [maj, setMaj] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setLoading(true);\n  }, [date]);\n\n  useEffect(() => {\n    var url = \"/api/analyseEau/\" + date;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setCyclesList(\n          response.cycles.sort((a, b) => (a.Bassin > b.Bassin ? 1 : -1))\n        );\n        setFetchDate(response.date);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [date, maj]);\n\n  useEffect(() => {\n    if (cycle !== undefined) {\n      setO2ToSend0({ O2: \"\", heure: 17 });\n      setO2ToSend1({ O2: \"\", heure: 22 });\n      setO2ToSend2({ O2: \"\", heure: 0 });\n      setO2ToSend3({ O2: \"\", heure: 4 });\n      for (let i = 0; i < cycle.Ox_list.length; i++) {\n        const h = cycle.Ox_list[i][4];\n        const O2_temp = cycle.Ox_list[i][5];\n        if (h === 17) {\n          setO2ToSend0({ O2: O2_temp, heure: 17 });\n        } else if (h === 22) {\n          setO2ToSend1({ O2: O2_temp, heure: 22 });\n        } else if (h === 0) {\n          setO2ToSend2({ O2: O2_temp, heure: 0 });\n        } else if (h === 4) {\n          setO2ToSend3({ O2: O2_temp, heure: 4 });\n        }\n      }\n    }\n    if (\n      cycle !== undefined &&\n      (cycle.PH === undefined ||\n        cycle.Temp === undefined ||\n        cycle.SE === undefined)\n    ) {\n      setCycle({ ...cycle, PH: \"\", Temp: \"\", SE: \"\" });\n    }\n  }, [cycle]);\n\n  useEffect(() => {\n    if (~loading) {\n      if (fetchDate !== date) {\n        setDate(date);\n        setLoading(true);\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, date, fetchDate]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  const handleConfirm = () => {\n    console.log(o2ToSend2);\n    if (\n      parseInt(o2ToSend0.O2) > 20 ||\n      parseInt(o2ToSend1.O2) > 20 ||\n      parseInt(o2ToSend2.O2) > 20 ||\n      parseInt(o2ToSend3.O2) > 20\n    ) {\n      handleSnackbar(\"warning\", \"Valor de oxígeno demasiado alto (mas de 20)\");\n    } else {\n      let temp = cyclesList;\n      temp[cycle.id] = {\n        ...cycle,\n        Ox_list: [],\n        analyse: true,\n        maj: true,\n      };\n      setCyclesList(temp);\n      var url = \"/api/analyseEau\";\n      var requestOptions = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ ...cycle, bassin: cycle.Bassin, date: date }),\n      };\n      authFetch(url, requestOptions)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          handleSnackbar(\"success\", response.message);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n      url = \"/api/analyseOx\";\n      requestOptions = {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          data: [o2ToSend0, o2ToSend1, o2ToSend2, o2ToSend3],\n          date: date,\n          bassin: cycle.Bassin,\n        }),\n      };\n      authFetch(url, requestOptions)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          handleSnackbar(\"success\", response.message);\n          setMaj(~maj);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    }\n  };\n\n  const changeDate = (d) => {\n    var result = new Date(date + \"T12:00:00\");\n    result.setDate(result.getDate() + d);\n    setDate(result.toISOString().substring(0, 10));\n    setCycle(undefined);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid container spacing={2}>\n        <Grid style={{ padding: \"0\" }} item xs={12} container justify=\"center\">\n          <Button\n            onClick={() => changeDate(-1)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {\"<<\"}\n          </Button>\n          <Button\n            style={{ marginLeft: \"5px\" }}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {date.split(\"-\").reverse().join(\"-\")}\n          </Button>\n          <Button\n            style={{ marginLeft: \"5px\" }}\n            onClick={() => changeDate(1)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {\">>\"}\n          </Button>\n        </Grid>\n        <Grid\n          container\n          spacing={1}\n          item\n          xs={4}\n          style={{ overflow: \"scroll\", height: \"100vh\" }}\n        >\n          {cyclesList &&\n            cyclesList.map((c, key) => (\n              <Grid item xs={12} key={key}>\n                <Button\n                  style={{\n                    height: \"80px\",\n                    color: \"white\",\n                    backgroundColor: c.analyse ? \"#4caf50\" : \"#3f51b5\",\n                  }}\n                  id={key}\n                  variant=\"contained\"\n                  fullWidth\n                  onClick={(e) => {\n                    e.target.id === \"\"\n                      ? setCycle({\n                          ...cyclesList[e.target.offsetParent.id],\n                          id: e.target.offsetParent.id,\n                        })\n                      : setCycle({\n                          ...cyclesList[e.target.id],\n                          id: e.target.id,\n                        });\n                  }}\n                >\n                  {c.Bassin}\n                </Button>\n              </Grid>\n            ))}\n        </Grid>\n        <Grid item xs={8}>\n          {cycle ? (\n            <Card>\n              <CardHeader\n                className={classes.cardHeader}\n                title={cycle.Bassin}\n                titleTypographyProps={{ variant: \"h2\", align: \"center\" }}\n                style={{\n                  backgroundColor: \"#009688\",\n                  padding: \"20px\",\n                  color: \"white\",\n                  fontSize: \"2rem\",\n                }}\n              ></CardHeader>\n              <CardBody>\n                <Grid\n                  container\n                  spacing={2}\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={10}>\n                    <Grid\n                      container\n                      spacing={2}\n                      justify=\"center\"\n                      alignItems=\"center\"\n                    >\n                      <Grid item xs={2} style={{ textAlign: \"center\" }}>\n                        <TextField\n                          variant=\"outlined\"\n                          label=\"PH\"\n                          InputLabelProps={{ shrink: true }}\n                          value={cycle.PH}\n                          autoComplete=\"off\"\n                          onChange={(e) =>\n                            setCycle({ ...cycle, PH: e.target.value })\n                          }\n                        ></TextField>\n                      </Grid>\n                      <Grid item xs={2} style={{ textAlign: \"center\" }}>\n                        <TextField\n                          variant=\"outlined\"\n                          label=\"Temp\"\n                          InputLabelProps={{ shrink: true }}\n                          value={cycle.Temp}\n                          autoComplete=\"off\"\n                          onChange={(e) =>\n                            setCycle({ ...cycle, Temp: e.target.value })\n                          }\n                        ></TextField>\n                      </Grid>\n                      <Grid item xs={2} style={{ textAlign: \"center\" }}>\n                        <TextField\n                          variant=\"outlined\"\n                          label=\"SE\"\n                          InputLabelProps={{ shrink: true }}\n                          value={cycle.SE}\n                          autoComplete=\"off\"\n                          onChange={(e) =>\n                            setCycle({ ...cycle, SE: e.target.value })\n                          }\n                        ></TextField>\n                      </Grid>\n                    </Grid>\n                    <Grid\n                      container\n                      spacing={2}\n                      justify=\"center\"\n                      alignItems=\"center\"\n                    >\n                      <Grid item xs={2} style={{ textAlign: \"center\" }}>\n                        <TextField\n                          id=\"text-2\"\n                          variant=\"outlined\"\n                          label=\"12 a.m\"\n                          value={o2ToSend2.O2}\n                          autoComplete=\"off\"\n                          onChange={(e) => {\n                            setO2ToSend2({ ...o2ToSend2, O2: e.target.value });\n                          }}\n                        ></TextField>\n                      </Grid>\n                      <Grid item xs={2} style={{ textAlign: \"center\" }}>\n                        <TextField\n                          id=\"text-3\"\n                          variant=\"outlined\"\n                          label=\"4 a.m\"\n                          value={o2ToSend3.O2}\n                          autoComplete=\"off\"\n                          onChange={(e) => {\n                            setO2ToSend3({ ...o2ToSend3, O2: e.target.value });\n                          }}\n                        ></TextField>\n                      </Grid>\n                      <Grid item xs={2} style={{ textAlign: \"center\" }}>\n                        <TextField\n                          id=\"text-0\"\n                          variant=\"outlined\"\n                          label=\"5 p.m\"\n                          value={o2ToSend0.O2}\n                          autoComplete=\"off\"\n                          onChange={(e) => {\n                            setO2ToSend0({ ...o2ToSend0, O2: e.target.value });\n                          }}\n                        ></TextField>\n                      </Grid>\n                      <Grid item xs={2} style={{ textAlign: \"center\" }}>\n                        <TextField\n                          id=\"text-1\"\n                          variant=\"outlined\"\n                          label=\"10 p.m\"\n                          value={o2ToSend1.O2}\n                          autoComplete=\"off\"\n                          onChange={(e) => {\n                            setO2ToSend1({ ...o2ToSend1, O2: e.target.value });\n                          }}\n                        ></TextField>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container item xs={2} alignItems=\"center\">\n                    <Button\n                      onClick={handleConfirm}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Confirmar\n                    </Button>\n                  </Grid>\n                </Grid>\n              </CardBody>\n            </Card>\n          ) : loading ? (\n            <Grid\n              style={{ height: \"80%\" }}\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item>\n                <CircularProgress\n                  style={{\n                    display: \"flex\",\n                    height: \"150px\",\n                    width: \"150px\",\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { authFetch } from \"auth\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { FormControlLabel, Grid, Checkbox } from \"@material-ui/core\";\n\nexport default function FormDialog({\n  cycle,\n  handleSnackbar,\n  cyclesList,\n  setCycle,\n  setCyclesList,\n  poidsAM,\n  poidsPM,\n  setMaj,\n  date,\n  maj,\n}) {\n  const [open, setOpen] = useState(false);\n  const [change, setChange] = useState(false);\n\n  const handleConfirm = () => {\n    let temp = cyclesList;\n    temp[cycle.id] = {\n      ...temp[cycle.id],\n      ali: true,\n      Poids: poidsAM + poidsPM,\n      Poids_pm: poidsPM,\n      maj: true,\n      Type_Aliment: cycle.Type_Aliment,\n    };\n    setCyclesList(temp);\n    var url = \"/api/alimentation\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        bassin: cycle.Bassin,\n        poids: poidsAM + poidsPM,\n        poids_pm: poidsPM,\n        date: date,\n        aliment: cycle.Type_Aliment,\n        change: change,\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.status === 401) {\n          return null;\n        } else if (response.status === 500) {\n          return null;\n        }\n        return response.json();\n      })\n      .then((response) => {\n        response !== null\n          ? handleSnackbar(\"success\", response.message)\n          : handleSnackbar(\"warning\", \"Bad request\");\n      });\n    setMaj(~maj);\n    setOpen(false);\n    setCycle(undefined);\n  };\n\n  const handleOpen = () => {\n    if (cyclesList[cycle.id].Type_Aliment !== cycle.Type_Aliment) {\n      setOpen(true);\n    } else {\n      handleConfirm();\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => handleOpen()}\n      >\n        Confirmar\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Cambio de alimento</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={change}\n                    onChange={(e) => setChange(e.target.checked)}\n                  />\n                }\n                label=\"Modificar el alimento para los dias siguientes\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Confirmar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { authFetch } from \"auth\";\nimport {\n  Grid,\n  Button,\n  TextField,\n  CardHeader,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel,\n  Checkbox,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport ConfirmChangeDialog from \"components/Dialog/ConfirmChangeDialog\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\nimport CsvDownload from \"react-json-to-csv\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Alimentation() {\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [loading, setLoading] = useState(true);\n  const [fetchDate, setFetchDate] = useState(\"\");\n  const [closed, setClosed] = useState(false);\n  const [aliData, setAliData] = useState([]);\n  const [alimentList, setAlimentList] = useState([]);\n  const [cyclesList, setCyclesList] = useState(undefined);\n  const [cycle, setCycle] = useState(undefined);\n  const [maj, setMaj] = useState(false);\n  const [poidsAM, setPoidsAM] = useState(\"\");\n  const [poidsPM, setPoidsPM] = useState(\"\");\n  const [date, setDate] = useState(new Date().toISOString().substring(0, 10));\n  const [total, setTotal] = useState(\"\");\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setLoading(true);\n  }, [date]);\n\n  useEffect(() => {\n    var url = \"/api/alimentation/\" + date + \"/\" + closed;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setCyclesList(\n          response.cycles.sort((a, b) => (a.Bassin > b.Bassin ? 1 : -1))\n        );\n        setAliData(\n          transformData(\n            response.cycles.sort((a, b) => (a.Bassin > b.Bassin ? 1 : -1)),\n            response.aliments\n          )\n        );\n        setAlimentList(response.aliments);\n        setFetchDate(response.date);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [date, closed]);\n\n  useEffect(() => {\n    var url = \"/api/alimentationTotal/\" + date;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setTotal(response.total);\n        setMaj(false);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [date, maj]);\n\n  useEffect(() => {\n    if (cycle && cycle.ali && maj) {\n      if (cycle.Poids_pm) {\n        setPoidsAM(cycle.Poids - cycle.Poids_pm);\n        setPoidsPM(cycle.Poids_pm);\n      } else {\n        setPoidsAM(cycle.Poids);\n        setPoidsPM(\"\");\n      }\n    } else if (cycle && maj) {\n      setPoidsAM(\"\");\n      setPoidsPM(\"\");\n    }\n    setMaj(false);\n  }, [cycle, maj]);\n\n  useEffect(() => {\n    if (~loading) {\n      if (fetchDate !== date) {\n        setDate(date);\n        setLoading(true);\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, date, fetchDate]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  const changeDate = (d) => {\n    var result = new Date(date + \"T12:00:00\");\n    result.setDate(result.getDate() + d);\n    setDate(result.toISOString().substring(0, 10));\n    setCycle(undefined);\n  };\n\n  const handleChangeCycle = (id) => {\n    setCycle({\n      ...cyclesList[id],\n      id: id,\n      Type_Aliment: cyclesList[id].Type_Aliment\n        ? cyclesList[id].Type_Aliment\n        : \"\",\n    });\n    setMaj(true);\n  };\n\n  const transformData = (c, aliments) => {\n    if (c !== undefined) {\n      let temp = [];\n      c.forEach((data) => {\n        let ali = aliments.find((a) => a[0] === data.Type_Aliment);\n        if (ali === undefined) {\n          temp.push({\n            Estanque: data.Bassin,\n            Alimento: 0,\n            Cantidad: 0,\n          });\n        } else {\n          temp.push({\n            Estanque: data.Bassin,\n            Alimento: ali[1].replace('\"', \" \"),\n            Cantidad: data[\"poids aliment a donner\"],\n          });\n        }\n      });\n      return temp;\n    }\n  };\n\n  const resetStockAli = () => {\n    var url = \"/api/resetStockAlimentation/\" + date;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  return (\n    <div>\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid container spacing={2}>\n        <Grid style={{ padding: \"0\" }} item xs={12} container justify=\"center\">\n          <Button\n            onClick={() => changeDate(-1)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {\"<<\"}\n          </Button>\n          <Button\n            style={{ marginLeft: \"5px\" }}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {date.split(\"-\").reverse().join(\"-\")}\n          </Button>\n          <Button\n            style={{ marginLeft: \"5px\" }}\n            onClick={() => changeDate(1)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {\">>\"}\n          </Button>\n          <Button\n            style={{ marginLeft: \"5px\" }}\n            onClick={() => resetStockAli()}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            {\"Reset Stock Alimentation\"}\n          </Button>\n          <CsvDownload\n            data={aliData}\n            filename={\"alimentacion-\" + date + \".csv\"}\n            style={{\n              backgroundColor: \"#3f51b5\",\n              borderRadius: \"4px\",\n              borderWidth: \"0\",\n              marginLeft: \"5px\",\n              display: \"inline-block\",\n              cursor: \"pointer\",\n              color: \"#ffffff\",\n              fontSize: \"14px\",\n              fontWeight: \"500\",\n              font: \"Roboto\",\n              lineHeight: \"1.75\",\n              padding: \"6px 24px\",\n              textDecoration: \"none\",\n            }}\n          >\n            Descargar alimentacion\n          </CsvDownload>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={closed}\n                onChange={(e) => setClosed(e.target.checked)}\n              />\n            }\n            label=\"Ver cerrados\"\n          />\n        </Grid>\n        <Grid\n          container\n          spacing={1}\n          item\n          xs={4}\n          style={{ overflow: \"scroll\", height: \"100vh\" }}\n        >\n          {cyclesList &&\n            cyclesList.map((c, key) => (\n              <Grid item xs={12} key={key}>\n                <Button\n                  style={{\n                    height: \"65px\",\n                    color: \"white\",\n                    backgroundColor: c.ali ? \"#4caf50\" : \"#3f51b5\",\n                  }}\n                  id={key}\n                  variant=\"contained\"\n                  fullWidth\n                  onClick={(e) => {\n                    e.target.id === \"\"\n                      ? handleChangeCycle(e.target.offsetParent.id)\n                      : handleChangeCycle(e.target.id);\n                  }}\n                >\n                  {c.Bassin}\n                </Button>\n              </Grid>\n            ))}\n        </Grid>\n        <Grid item xs={8}>\n          {cycle && ~loading ? (\n            <Card>\n              <CardHeader\n                className={classes.cardHeader}\n                title={cycle.Bassin}\n                titleTypographyProps={{ variant: \"h2\", align: \"center\" }}\n                style={{\n                  backgroundColor: \"#009688\",\n                  padding: \"20px\",\n                  color: \"white\",\n                  fontSize: \"2rem\",\n                }}\n              ></CardHeader>\n              <CardBody>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item xs={2}>\n                    <Card style={{ marginBottom: \"10px\" }}>\n                      <h4 style={{ textAlign: \"center\" }}>\n                        Peso teorico: {cycle[\"poids aliment a donner\"]}\n                      </h4>\n                    </Card>\n                  </Grid>\n                  <Grid item xs={2} style={{ textAlign: \"center\" }}>\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"Peso por la mañana\"\n                      value={poidsAM}\n                      onChange={(e) =>\n                        setPoidsAM(\n                          e.target.value === \"\" ? \"\" : parseInt(e.target.value)\n                        )\n                      }\n                    ></TextField>\n                  </Grid>\n                  <Grid item xs={2} style={{ textAlign: \"center\" }}>\n                    <TextField\n                      variant=\"outlined\"\n                      label=\"Peso por la tarde\"\n                      value={poidsPM}\n                      onChange={(e) =>\n                        setPoidsPM(\n                          e.target.value === \"\" ? \"\" : parseInt(e.target.value)\n                        )\n                      }\n                    ></TextField>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <FormControl style={{ minWidth: \"100px\" }}>\n                      <InputLabel id=\"type-label\">Alimento</InputLabel>\n                      <Select\n                        labelId=\"type-label\"\n                        id=\"type-select\"\n                        value={cycle.Type_Aliment}\n                        onChange={(e) =>\n                          setCycle({ ...cycle, Type_Aliment: e.target.value })\n                        }\n                      >\n                        {alimentList !== []\n                          ? alimentList.map((a, key) => {\n                              return (\n                                <MenuItem key={key} value={a[0]}>\n                                  {a[1]}\n                                </MenuItem>\n                              );\n                            })\n                          : null}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={2}>\n                    <ConfirmChangeDialog\n                      cycle={cycle}\n                      cyclesList={cyclesList}\n                      setCyclesList={setCyclesList}\n                      setCycle={setCycle}\n                      poidsAM={poidsAM}\n                      poidsPM={poidsPM}\n                      date={date}\n                      handleSnackbar={handleSnackbar}\n                      setMaj={setMaj}\n                      maj={maj}\n                    />\n                  </Grid>\n                </Grid>\n              </CardBody>\n            </Card>\n          ) : loading ? (\n            <Grid\n              style={{ height: \"80%\" }}\n              container\n              spacing={2}\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item>\n                <CircularProgress\n                  style={{\n                    display: \"flex\",\n                    height: \"150px\",\n                    width: \"150px\",\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : null}\n        </Grid>\n        <Grid item xs={12}>\n          <Card>\n            <CardBody>\n              <div style={{ textAlign: \"center\" }}>\n                {total\n                  ? total.map((t) => {\n                      return (\n                        <>\n                          <b>{t[0]}</b> : {t[1]} lbs |{\" \"}\n                        </>\n                      );\n                    })\n                  : null}\n              </div>\n            </CardBody>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  Button,\n  CardHeader,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport CustomTableEdit from \"components/TableEdit\";\nimport CardMat from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport { authFetch } from \"auth\";\n\nconst styles = (theme) => ({\n  select: {\n    color: \"white\",\n    \"&:before\": {\n      borderColor: \"white\",\n      color: \"white\",\n    },\n    \"&:after\": {\n      borderColor: \"white\",\n    },\n  },\n  icon: {\n    fill: \"white\",\n  },\n});\nconst useStyles = makeStyles(styles);\n\nexport default function Venta() {\n  const [ventePoisson, setVentePoisson] = useState({\n    date: \"\",\n    poids: \"\",\n    espece: 1,\n  });\n  const [venteJour, setVenteJour] = useState(\"\");\n  const [filtre, setFiltre] = useState(1);\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [tableHeaders] = useState([\n    \"fecha\",\n    \"peso\",\n    \"total venta\",\n    \"total pesca\",\n    \"% perdida\",\n  ]);\n  const [tableData, setTableData] = useState(\"\");\n  const [maj, setMaj] = useState(true);\n  const [especesList, setEspecesList] = useState([\"\"]);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    var url = \"/api/especes/poissons\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setEspecesList(response.especes);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, []);\n\n  useEffect(() => {\n    var url = \"/api/ventes/poissons/\" + filtre;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setTableData(response.ventes);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [maj, filtre]);\n\n  const handleConfirm = () => {\n    var url = \"/api/ventes/poissons\";\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ...ventePoisson,\n        date:\n          ventePoisson.date.substring(6, 10) +\n          \"-\" +\n          ventePoisson.date.substring(3, 5) +\n          \"-\" +\n          ventePoisson.date.substring(0, 2),\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  // useEffect(() => {\n  //   console.log(venteJour, ventePoisson.date.length);\n  // }, [venteJour, ventePoisson]);\n\n  const handleChangeDate = (d, e) => {\n    console.log(d, d.lenght);\n    let f = e !== \"\" ? e : filtre;\n    if (d.length === 10) {\n      var url =\n        \"/api/ventes/poissonsJour/\" +\n        f +\n        \"/\" +\n        d.substring(6) +\n        \"-\" +\n        d.substring(3, 5) +\n        \"-\" +\n        d.substring(0, 2);\n      authFetch(url)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          setVenteJour(response.total);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    }\n  };\n\n  return (\n    <Grid container xs={12} spacing={1} justify=\"center\" alignItems=\"center\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid\n        item\n        xs={12}\n        container\n        spacing={1}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item lg={5}>\n          <Card>\n            <CardHeader\n              style={{ textAlign: \"center\" }}\n              title=\"Añadir una venta de pescados\"\n            />\n            <CardContent>\n              <Grid\n                item\n                container\n                spacing={3}\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <FormControl style={{ minWidth: \"150px\" }}>\n                    <InputLabel id=\"espece-label\">Espece</InputLabel>\n                    <Select\n                      labelId=\"espece-label\"\n                      id=\"espece-select\"\n                      value={ventePoisson.espece}\n                      onChange={(e) => {\n                        setVentePoisson({\n                          ...ventePoisson,\n                          espece: parseInt(e.target.value),\n                        });\n                        setVenteJour(\"\");\n                        setFiltre(parseInt(e.target.value));\n                        handleChangeDate(\n                          ventePoisson.date,\n                          parseInt(e.target.value)\n                        );\n                      }}\n                    >\n                      {especesList.map((espece, key) => (\n                        <MenuItem key={key} value={espece[0]}>\n                          {espece[1]}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    required\n                    label=\"Fecha dd/MM/yyyy\"\n                    type=\"text\"\n                    value={ventePoisson.date}\n                    onChange={(e) => {\n                      setVentePoisson({\n                        ...ventePoisson,\n                        date: e.target.value,\n                      });\n                      handleChangeDate(e.target.value, \"\");\n                    }}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    required\n                    type=\"number\"\n                    label=\"Peso total\"\n                    value={ventePoisson.poids}\n                    onChange={(e) =>\n                      setVentePoisson({\n                        ...ventePoisson,\n                        poids: e.target.value,\n                      })\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                  {venteJour !== \"\" ? (\n                    <p>\n                      Peso total pesca: <b>{venteJour}</b>\n                    </p>\n                  ) : null}\n                </Grid>\n                <Grid item>\n                  <Button\n                    onClick={() => handleConfirm()}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Confirmar\n                  </Button>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>\n          {tableHeaders === \"\" || tableData === \"\" ? null : (\n            <CardMat style={{ marginTop: \"50px\" }}>\n              <CardHeader\n                style={{\n                  color: \"white\",\n                  backgroundColor: \"#3f51b5\",\n                  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n                  fontSize: \"34px\",\n                  fontWeight: 400,\n                  lineHeight: 1.235,\n                }}\n                color=\"info\"\n                title=\"Venta de pescados\"\n                action={\n                  <FormControl\n                    style={{\n                      backgroundColor: \"#f50057\",\n                      color: \"fff\",\n                      boxShadow:\n                        \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\n                      borderRadius: \"4px\",\n                      marginRight: \"8px\",\n                      padding: 8,\n                    }}\n                  >\n                    <Select\n                      className={classes.select}\n                      inputProps={{\n                        classes: {\n                          icon: classes.icon,\n                        },\n                      }}\n                      labelId=\"Especie-label\"\n                      id=\"Especie-select\"\n                      value={filtre}\n                      onChange={(e) => setFiltre(e.target.value)}\n                    >\n                      {especesList.map((espece, key) => (\n                        <MenuItem key={key} value={espece[0]}>\n                          {espece[1]}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    <FormHelperText style={{ color: \"white\" }}>\n                      Filtrar por especies\n                    </FormHelperText>\n                  </FormControl>\n                }\n              ></CardHeader>\n              <CardBody>\n                <CustomTableEdit\n                  tableHeaderColor=\"info\"\n                  tableHead={tableHeaders}\n                  tableData={tableData}\n                  postUrl={\"/api/ventes/poissons\"}\n                />\n              </CardBody>\n            </CardMat>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Grid } from \"@material-ui/core\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n\nexport default function AddClientDialog({ setMaj, maj }) {\n  const [open, setOpen] = useState(false);\n  const [newClient, setNewClient] = useState({\n    libelle: \"\",\n    adresse: \"\",\n    cedula: \"\",\n  });\n\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  const handleConfirm = () => {\n    var url = \"/api/clients\";\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ...newClient,\n        cedula: parseInt(newClient.cedula),\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    setOpen(false);\n    setNewClient({\n      libelle: \"\",\n      adresse: \"\",\n      cedula: \"\",\n    });\n  };\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setOpen(true)}\n      >\n        Añadir un cliente\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\"> Añadir un cliente</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <TextField\n                label=\"Nombre\"\n                type=\"text\"\n                value={newClient.libelle}\n                onChange={(e) =>\n                  setNewClient({ ...newClient, libelle: e.target.value })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Direcion\"\n                type=\"text\"\n                value={newClient.adresse}\n                onChange={(e) =>\n                  setNewClient({ ...newClient, adresse: e.target.value })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Cedula\"\n                type=\"text\"\n                value={newClient.cedula}\n                onChange={(e) =>\n                  setNewClient({ ...newClient, cedula: e.target.value })\n                }\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Annuler\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  CardHeader,\n  Card,\n  CardContent,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport Table from \"components/TableDelete\";\nimport CardMat from \"components/Card/Card.js\";\nimport CardHeaderMat from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport { authFetch } from \"auth\";\nimport AddClientDialog from \"components/Dialog/AddClientDialog\";\n\nexport default function Clients({ clientsList, maj, setMaj }) {\n  const [client, setClient] = useState({\n    id: clientsList[0][0],\n  });\n  const [inf, setInf] = useState({ adresse: \"\", cedula: \"\" });\n  const [tableHeaders] = useState([\n    \"Type aliments\",\n    \"Date\",\n    \"Quantite\",\n    \"Commentaire\",\n  ]);\n  const [tableData, setTableData] = useState(\"\");\n\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  useEffect(() => {\n    const url = \"/api/clients/\" + client.id;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setInf({ adresse: response.adresse, cedula: response.cedula });\n        setTableData(response.achats);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [client, maj]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setMessage(\"\");\n    }, 4000);\n  };\n  const handleConfirm = (cl, ms) => {\n    var url = \"/api/clients\";\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ...client,\n        ...inf,\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  return (\n    <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid item>\n        <Card>\n          <CardHeader\n            title=\"Gestion des clients\"\n            action={<AddClientDialog maj={maj} setMaj={setMaj} />}\n          />\n          <CardContent>\n            <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n              <Grid\n                item\n                container\n                spacing={1}\n                justify=\"center\"\n                alignItems=\"center\"\n                xs={12}\n              >\n                <Grid item>\n                  <FormControl style={{ minWidth: \"150px\" }}>\n                    <InputLabel id=\"Client-label\">Client</InputLabel>\n                    <Select\n                      labelId=\"Client-label\"\n                      id=\"Client-select\"\n                      value={client.id}\n                      onChange={(e) =>\n                        setClient({\n                          ...client,\n                          id: e.target.value,\n                        })\n                      }\n                    >\n                      {clientsList.map((c, key) => (\n                        <MenuItem key={key} value={c[0]}>\n                          {c[1]}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Direcion\"\n                    type=\"text\"\n                    InputLabelProps={{ shrink: true }}\n                    value={inf.adresse}\n                    onChange={(e) =>\n                      setInf({\n                        ...inf,\n                        adresse: e.target.value,\n                      })\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Cedula\"\n                    type=\"text\"\n                    InputLabelProps={{ shrink: true }}\n                    value={inf.cedula}\n                    onChange={(e) =>\n                      setInf({\n                        ...inf,\n                        cedula: e.target.value,\n                      })\n                    }\n                  />\n                </Grid>\n                <Button\n                  onClick={handleConfirm}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Cambiar\n                </Button>\n              </Grid>\n              <Grid item xs={6}>\n                {tableHeaders === \"\" || tableData === \"\" ? null : (\n                  <CardMat style={{ marginTop: \"50px\" }}>\n                    <CardHeaderMat color=\"info\">\n                      <Typography variant=\"h4\">\n                        Compra de {client.libelle}\n                      </Typography>\n                    </CardHeaderMat>\n                    <CardBody>\n                      <Table\n                        tableHeaderColor=\"info\"\n                        tableHead={tableHeaders}\n                        tableData={tableData}\n                        postUrl={\"/api/clients\"}\n                        maj={maj}\n                        setMaj={setMaj}\n                      />\n                    </CardBody>\n                  </CardMat>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <Card>\n                  <CardHeaderMat style={{ marginTop: \"1em\" }} color=\"primary\">\n                    Stats dans le futur\n                  </CardHeaderMat>\n                  <CardBody>\n                    <Grid\n                      container\n                      spacing={1}\n                      justify=\"center\"\n                      alignItems=\"center\"\n                    >\n                      <Grid item>\n                        <h4>En moyenne commande toute les x semaines</h4>\n                      </Grid>\n                    </Grid>\n                  </CardBody>\n                </Card>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n            return (\n              <TableRow key={key} className={classes.tableBodyRow}>\n                {prop.map((prop, key) => {\n                  return (\n                    <TableCell className={classes.tableCell} key={key}>\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n","import { useState, useEffect } from \"react\";\nimport {\n  CardHeader,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  TextField,\n} from \"@material-ui/core\";\nimport Table from \"components/Table\";\nimport CardMat from \"components/Card/Card.js\";\nimport CardHeaderMat from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport { authFetch } from \"auth\";\n\nexport default function Clients({\n  maj,\n  setMaj,\n  filtre,\n  defaultDate,\n  nomAliment,\n}) {\n  const [tableHeaders] = useState([\"Client\", \"Quantite\", \"Type aliments\"]);\n  const [tableData, setTableData] = useState(\"\");\n  const [date, setDate] = useState(\n    defaultDate === undefined ? \"\" : defaultDate\n  );\n  //\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  useEffect(() => {\n    if (date.length === 10) {\n      let dateF =\n        date.substring(6, 10) +\n        \"-\" +\n        date.substring(3, 5) +\n        \"-\" +\n        date.substring(0, 2);\n      const url = \"/api/ventesParJour/\" + dateF + \"/\" + filtre;\n      authFetch(url)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          console.log(response.ventes);\n          setTableData(response.ventes);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    }\n  }, [date, filtre, maj]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader\n            title={\n              filtre !== undefined\n                ? \"Venta por dia de \" + nomAliment\n                : \"Venta por dia\"\n            }\n            action={\n              <Grid item>\n                <TextField\n                  required\n                  label=\"Fecha dd/MM/yyyy\"\n                  type=\"text\"\n                  value={date}\n                  onChange={(e) => setDate(e.target.value)}\n                />\n              </Grid>\n            }\n          />\n          <CardContent>\n            <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n              <Grid item xs={12}>\n                {tableHeaders === \"\" || tableData === \"\" ? null : (\n                  <CardMat style={{ marginTop: \"50px\" }}>\n                    <CardHeaderMat color=\"info\">\n                      <Typography variant=\"h4\">Compra de {date}</Typography>\n                    </CardHeaderMat>\n                    <CardBody>\n                      <Table\n                        tableHeaderColor=\"info\"\n                        tableHead={tableHeaders}\n                        tableData={tableData}\n                        maj={maj}\n                        setMaj={setMaj}\n                      />\n                    </CardBody>\n                  </CardMat>\n                )}\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Grid } from \"@material-ui/core\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n\nexport default function AddAlimentDialog({ setMaj, maj }) {\n  const [open, setOpen] = useState(false);\n  const [newAliment, setNewAliment] = useState({\n    libelle: \"\",\n  });\n\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  const handleConfirm = () => {\n    var url = \"/api/aliments\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ...newAliment,\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    setOpen(false);\n    setNewAliment({\n      libelle: \"\",\n    });\n  };\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setOpen(true)}\n      >\n        Añadir un typo de alimento\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {\" \"}\n          Añadir un typo de alimento\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <TextField\n                label=\"Nombre\"\n                type=\"text\"\n                value={newAliment.libelle}\n                onChange={(e) =>\n                  setNewAliment({ ...newAliment, libelle: e.target.value })\n                }\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Annuler\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n// Icons\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTableEdit(props) {\n  const { tableHead, tableData, tableHeaderColor, maj, setMaj, setCommandes } =\n    props;\n\n  const classes = useStyles();\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  const onDelete = (id) => {\n    let temp = tableData;\n    console.log(\n      id,\n      temp.find((e) => e.id === id)\n    );\n    // temp.splice(id, 1);\n    // for (let i = 0; i < temp.length; i++) {\n    //   if (i >= id) {\n    //     temp[i].id = temp[i].id - 1;\n    //   }\n    // }\n    temp = temp.filter(function (obj) {\n      return obj.id !== id;\n    });\n    setCommandes(temp);\n    setMaj(~maj);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Paper className={classes.root} style={{ marginTop: \"0px\" }}>\n        <Table\n          stickyHeader\n          className={classes.table}\n          aria-label=\"caption table\"\n        >\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow\n              className={classes.tableHeadRow}\n              style={{ height: \"40px\" }}\n            >\n              <TableCell></TableCell>\n              {tableHead.map((prop) => {\n                return prop === \"id\" ? null : (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={prop.id}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableData !== undefined\n              ? tableData.map((row, key) => (\n                  <TableRow className={classes.tableRow} key={key * 100}>\n                    <TableCell className={classes.selectTableCell}>\n                      <IconButton\n                        style={{ padding: \"5px\" }}\n                        aria-label=\"delete\"\n                        onClick={() => onDelete(row.id)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                    {tableHead.map((item, key) => {\n                      return item === \"id\" ? null : (\n                        <TableCell\n                          style={{\n                            fontSize: \"0.85rem\",\n                            fontWeight: \"300\",\n                            padding: \"5px\",\n                          }}\n                          key={key}\n                        >\n                          {row[item]}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  Button,\n  CardHeader,\n  Card,\n  CardContent,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport {\n  Page,\n  View,\n  Document,\n  Line,\n  StyleSheet,\n  Svg,\n  Rect,\n  Text,\n  G,\n} from \"@react-pdf/renderer\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport { authFetch } from \"auth\";\nimport Clients from \"../components/Clients\";\nimport VentesParJour from \"../components/VentesParJour\";\nimport AddClientDialog from \"components/Dialog/AddClientDialog\";\nimport AddAlimentDialog from \"components/Dialog/AddAlimentDialog\";\nimport Commandes from \"components/Commandes\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\n\nexport default function VenteAliment() {\n  const [newVente, setNewVente] = useState({\n    id: 0,\n    typeId: 2,\n    Typo: \"\",\n    date: \"\",\n    clientId: 1,\n    Lbs: \"\",\n    nbrSac: \"\",\n    poidsSac: \"\",\n    Precio: \"\",\n    \"Precio Total\": \"\",\n    commentaire: \"\",\n  });\n  const [clientsList, setClientsList] = useState([]);\n  const [typeAlimentList, setTypeAlimentList] = useState([]);\n  const [maj, setMaj] = useState(true);\n  const [majC, setMajC] = useState(true);\n  const [commandes, setCommandes] = useState([]);\n\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  useEffect(() => {\n    console.log(commandes);\n  }, [commandes]);\n\n  useEffect(() => {\n    var url = \"/api/ventes/aliments\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setTypeAlimentList(\n          response.typeAliment.sort((a, b) => (a[1] > b[1] ? 1 : -1))\n        );\n        const l = response.clients;\n        setClientsList(l);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [maj]);\n\n  const handleAddCommande = () => {\n    let temp = newVente;\n    temp.Typo = typeAlimentList.find((e) => e[0] === newVente.typeId)[1];\n    if (temp.Lbs === \"\") {\n      temp.Lbs = temp.nbrSac * temp.poidsSac;\n      temp[\"Precio Total\"] = temp.Precio * temp.nbrSac;\n    }\n    if (temp.nbrSac === \"\") {\n      if (temp.poidsSac !== \"\") {\n        temp.nbrSac = Math.ceil(temp.Lbs / temp.poidsSac);\n      }\n      temp[\"Precio Total\"] = temp.Precio * temp.Lbs;\n    }\n    temp[\"Cantidad de sacos\"] = temp.nbrSac;\n    setCommandes(commandes.concat([temp]));\n    setNewVente({\n      ...newVente,\n      typeId: 2,\n      Typo: \"\",\n      Lbs: \"\",\n      nbrSac: \"\",\n      poidsSac: \"\",\n      Precio: \"\",\n      \"Precio Total\": \"\",\n      commentaire: \"\",\n      id: newVente.id + 1,\n    });\n  };\n\n  const handleConfirm = () => {\n    var url = \"/api/ventes/aliments\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        commandes,\n        date:\n          newVente.date.substring(6, 10) +\n          \"-\" +\n          newVente.date.substring(3, 5) +\n          \"-\" +\n          newVente.date.substring(0, 2),\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    setNewVente({\n      id: 0,\n      typeId: 2,\n      Typo: \"\",\n      date: \"\",\n      clientId: 1,\n      Lbs: \"\",\n      nbrSac: \"\",\n      poidsSac: \"\",\n      Precio: \"\",\n      \"Precio Total\": \"\",\n      commentaire: \"\",\n    });\n    setCommandes([]);\n  };\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid item>\n        <Card>\n          <CardHeader\n            title=\"Añadir una venta\"\n            action={\n              clientsList.length === 0 ? (\n                <AddClientDialog maj={maj} setMaj={setMaj} />\n              ) : (\n                <AddAlimentDialog maj={maj} setMaj={setMaj} />\n              )\n            }\n          />\n          <CardContent>\n            <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n              <Grid\n                container\n                item\n                spacing={1}\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <FormControl style={{ minWidth: \"150px\" }}>\n                    <InputLabel id=\"Client-label\">Client</InputLabel>\n                    <Select\n                      labelId=\"Client-label\"\n                      id=\"Client-select\"\n                      value={newVente.clientId}\n                      onChange={(e) =>\n                        setNewVente({\n                          ...newVente,\n                          clientId: e.target.value,\n                        })\n                      }\n                    >\n                      {clientsList\n                        .sort((a, b) => a[1].localeCompare(b[1]))\n                        .map((c, key) => (\n                          <MenuItem key={key} value={c[0]}>\n                            {c[1]}\n                          </MenuItem>\n                        ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    required\n                    label=\"Fecha dd/MM/yyyy\"\n                    type=\"text\"\n                    value={newVente.date}\n                    onChange={(e) =>\n                      setNewVente({ ...newVente, date: e.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                  {commandes.length !== 0 ? (\n                    <PDFDownloadLink\n                      document={\n                        <MyDocument\n                          client={\n                            clientsList.find(\n                              (e) => e[0] === newVente.clientId\n                            )[1]\n                          }\n                          adresse={\n                            clientsList.find(\n                              (e) => e[0] === newVente.clientId\n                            )[2]\n                          }\n                          date={newVente.date}\n                          listeCommande={commandes.map((c) => {\n                            return {\n                              aliment: c.Typo,\n                              quantite: c.Lbs,\n                              prix: c.Precio,\n                              prixTotal: c[\"Precio Total\"],\n                              \"Cantidad de sacos\": c[\"Cantidad de sacos\"],\n                            };\n                          })}\n                        />\n                      }\n                      fileName=\"facture.pdf\"\n                    >\n                      {({ blob, url, loading, error }) =>\n                        loading ? (\n                          \"Loading document...\"\n                        ) : (\n                          <Button variant=\"contained\" color=\"secondary\">\n                            Factura\n                          </Button>\n                        )\n                      }\n                    </PDFDownloadLink>\n                  ) : (\n                    \"\"\n                  )}\n                </Grid>\n                <Grid item>\n                  <Button\n                    onClick={handleConfirm}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Confirmar\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <FormControl style={{ minWidth: \"150px\" }}>\n                  <InputLabel id=\"alimento-label\">Typo de alimento</InputLabel>\n                  <Select\n                    labelId=\"alimento-label\"\n                    id=\"alimento-select\"\n                    value={newVente.typeId}\n                    onChange={(e) =>\n                      setNewVente({\n                        ...newVente,\n                        typeId: e.target.value,\n                      })\n                    }\n                  >\n                    {typeAlimentList\n                      .sort((a, b) => a[1].localeCompare(b[1]))\n                      .map((c, key) => (\n                        <MenuItem key={key} value={c[0]}>\n                          {c[1]}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item>\n                <TextField\n                  required\n                  label=\"Lbs\"\n                  type=\"text\"\n                  value={newVente.Lbs}\n                  onChange={(e) =>\n                    setNewVente({\n                      ...newVente,\n                      Lbs: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  required\n                  label=\"Cantidad de sacos\"\n                  type=\"text\"\n                  value={newVente.nbrSac}\n                  onChange={(e) =>\n                    setNewVente({\n                      ...newVente,\n                      nbrSac: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  required\n                  label=\"Peso saco\"\n                  type=\"text\"\n                  value={newVente.poidsSac}\n                  onChange={(e) =>\n                    setNewVente({\n                      ...newVente,\n                      poidsSac: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Precio\"\n                  type=\"text\"\n                  value={newVente.Precio}\n                  onChange={(e) =>\n                    setNewVente({\n                      ...newVente,\n                      Precio: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  onClick={handleAddCommande}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Añadir\n                </Button>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{ marginLeft: \"50px\", marginRight: \"50px\" }}\n              >\n                <Commandes\n                  tableHead={[\n                    \"Typo\",\n                    \"Cantidad de sacos\",\n                    \"Lbs\",\n                    \"Precio\",\n                    \"Precio Total\",\n                  ]}\n                  tableData={commandes}\n                  tableHeaderColor={\"info\"}\n                  maj={majC}\n                  setMaj={setMajC}\n                  setCommandes={setCommandes}\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={12}>\n        {clientsList.length !== 0 ? (\n          <Clients\n            clientsList={clientsList.sort((a, b) => a[1].localeCompare(b[1]))}\n            maj={maj}\n            setMaj={setMaj}\n          ></Clients>\n        ) : null}\n      </Grid>\n      <Grid item xs={12}>\n        <VentesParJour maj={maj} setMaj={setMaj} />\n      </Grid>\n    </Grid>\n  );\n}\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"column\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 0,\n    padding: 0,\n    flexGrow: 1,\n  },\n});\n\n// Create Document Component\nconst MyDocument = ({ client, listeCommande, date, adresse }) => (\n  <Document>\n    <Page size=\"Letter\" style={styles.page}>\n      <View style={styles.section}>\n        <Svg height=\"380\" width=\"800\">\n          <Rect x=\"20\" y=\"10\" width=\"100\" height=\"25\" stroke=\"black\" />\n          <Text x=\"25\" y=\"29\">\n            Factura\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"435\" y=\"30\">\n            Fecha :\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"490\" y=\"30\">\n            {date}\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"20\" y=\"60\">\n            Cliente :\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"80\" y=\"60\">\n            {client}\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"20\" y=\"80\">\n            Direccion :\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"95\" y=\"80\">\n            {adresse}\n          </Text>\n          <Rect x=\"20\" y=\"90\" width=\"560\" height=\"240\" stroke=\"black\" />\n          <Line\n            x1=\"20\"\n            y1=\"120\"\n            x2=\"580\"\n            y2=\"120\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"60\" y=\"110\">\n            Descripcion\n          </Text>\n          <Line\n            x1=\"170\"\n            y1=\"90\"\n            x2=\"170\"\n            y2=\"330\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"190\" y=\"110\">\n            Sacos\n          </Text>\n          <Line\n            x1=\"255\"\n            y1=\"90\"\n            x2=\"255\"\n            y2=\"330\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"285\" y=\"110\">\n            Lbs\n          </Text>\n          <Line\n            x1=\"340\"\n            y1=\"90\"\n            x2=\"340\"\n            y2=\"330\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"370\" y=\"110\">\n            Precio\n          </Text>\n          <Line\n            x1=\"450\"\n            y1=\"90\"\n            x2=\"450\"\n            y2=\"330\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"495\" y=\"110\">\n            Total\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"375\" y=\"352\">\n            Total\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"505\" y=\"352\">\n            {listeCommande.reduce(\n              (partial_sum, a) => partial_sum + parseFloat(a.prixTotal),\n              0\n            )}\n          </Text>\n          <Rect x=\"450\" y=\"330\" width=\"130\" height=\"35\" stroke=\"black\" />\n          <Line\n            x1=\"0\"\n            y1=\"380\"\n            x2=\"1000\"\n            y2=\"380\"\n            strokeWidth={3}\n            stroke=\"rgb(0,0,0)\"\n          />\n          {listeCommande.map((c, key) => (\n            <G key={key}>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"33\"\n                y={140 + key * 25}\n              >\n                {c.aliment}\n              </Text>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"205\"\n                y={140 + key * 25}\n              >\n                {c[\"Cantidad de sacos\"]}\n              </Text>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"290\"\n                y={140 + key * 25}\n              >\n                {c.quantite}\n              </Text>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"385\"\n                y={140 + key * 25}\n              >\n                {c.prix}\n              </Text>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"505\"\n                y={140 + key * 25}\n              >\n                {c.prixTotal}\n              </Text>\n            </G>\n          ))}\n        </Svg>\n      </View>\n      <View style={styles.section}>\n        <Svg height=\"380\" width=\"800\">\n          <Rect x=\"20\" y=\"10\" width=\"100\" height=\"25\" stroke=\"black\" />\n          <Text x=\"25\" y=\"29\">\n            Factura\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"435\" y=\"30\">\n            Fecha :\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"490\" y=\"30\">\n            {date}\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"20\" y=\"60\">\n            Cliente :\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"80\" y=\"60\">\n            {client}\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"20\" y=\"80\">\n            Direccion :\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"95\" y=\"80\">\n            {adresse}\n          </Text>\n          <Rect x=\"20\" y=\"90\" width=\"560\" height=\"240\" stroke=\"black\" />\n          <Line\n            x1=\"20\"\n            y1=\"120\"\n            x2=\"580\"\n            y2=\"120\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"60\" y=\"110\">\n            Descripcion\n          </Text>\n          <Line\n            x1=\"170\"\n            y1=\"90\"\n            x2=\"170\"\n            y2=\"330\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"190\" y=\"110\">\n            Sacos\n          </Text>\n          <Line\n            x1=\"255\"\n            y1=\"90\"\n            x2=\"255\"\n            y2=\"330\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"285\" y=\"110\">\n            Lbs\n          </Text>\n          <Line\n            x1=\"340\"\n            y1=\"90\"\n            x2=\"340\"\n            y2=\"330\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"370\" y=\"110\">\n            Precio\n          </Text>\n          <Line\n            x1=\"450\"\n            y1=\"90\"\n            x2=\"450\"\n            y2=\"330\"\n            strokeWidth={1}\n            stroke=\"rgb(0,0,0)\"\n          />\n          <Text style={{ fontSize: \"15px\" }} x=\"495\" y=\"110\">\n            Total\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"375\" y=\"352\">\n            Total\n          </Text>\n          <Text style={{ fontSize: \"15px\" }} x=\"505\" y=\"352\">\n            {listeCommande.reduce(\n              (partial_sum, a) => partial_sum + parseFloat(a.prixTotal),\n              0\n            )}\n          </Text>\n          <Rect x=\"450\" y=\"330\" width=\"130\" height=\"35\" stroke=\"black\" />\n          <Line\n            x1=\"0\"\n            y1=\"380\"\n            x2=\"1000\"\n            y2=\"380\"\n            strokeWidth={3}\n            stroke=\"rgb(0,0,0)\"\n          />\n          {listeCommande.map((c, key) => (\n            <G key={key}>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"33\"\n                y={140 + key * 25}\n              >\n                {c.aliment}\n              </Text>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"205\"\n                y={140 + key * 25}\n              >\n                {c[\"Cantidad de sacos\"]}\n              </Text>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"290\"\n                y={140 + key * 25}\n              >\n                {c.quantite}\n              </Text>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"385\"\n                y={140 + key * 25}\n              >\n                {c.prix}\n              </Text>\n              <Text\n                key={key * 10}\n                style={{ fontSize: \"15px\" }}\n                x=\"505\"\n                y={140 + key * 25}\n              >\n                {c.prixTotal}\n              </Text>\n            </G>\n          ))}\n        </Svg>\n      </View>\n    </Page>\n  </Document>\n);\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nexport default function FormDialog({\n  alimentsList,\n  handleSnackbar,\n  setMaj,\n  maj,\n}) {\n  const [open, setOpen] = useState(false);\n  const [newInventaire, setNewInventaire] = useState({\n    id: 1,\n    libelle: \"\",\n    date: \"\",\n    stock: 0,\n    commentaire: \"\",\n  });\n\n  const handleConfirm = () => {\n    if (newInventaire.date.length !== 10) {\n      handleSnackbar(\"danger\", \"Formato de fecha incorrecto\");\n    } else {\n      var url = \"/api/stocks\";\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...newInventaire,\n          stock: parseInt(newInventaire.stock),\n        }),\n      };\n      authFetch(url, requestOptions)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          handleSnackbar(\"success\", response.message);\n          setMaj(~maj);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n      setNewInventaire({\n        id: 1,\n        libelle: \"\",\n        stock: 0,\n        commentaire: \"\",\n        date: \"\",\n      });\n    }\n  };\n  return (\n    <div>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setOpen(true)}\n      >\n        Hacer el inventario\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Hacer el inventario</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={4}>\n              <FormControl style={{ minWidth: \"150px\" }}>\n                <InputLabel id=\"Alimento-label\">Alimento</InputLabel>\n                <Select\n                  labelId=\"Alimento-label\"\n                  id=\"Alimento-select\"\n                  value={newInventaire.id}\n                  onChange={(e) =>\n                    setNewInventaire({ ...newInventaire, id: e.target.value })\n                  }\n                >\n                  {alimentsList.map((a, key) => (\n                    <MenuItem key={key} value={a[0]}>\n                      {a[1]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>{\" \"}\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                label={\"Fecha\"}\n                type=\"text\"\n                value={newInventaire.date}\n                onChange={(e) => {\n                  setNewInventaire({\n                    ...newInventaire,\n                    date: e.target.value,\n                  });\n                }}\n              />{\" \"}\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                label={\"Cantidad\"}\n                type=\"text\"\n                value={newInventaire.stock}\n                onChange={(e) => {\n                  setNewInventaire({\n                    ...newInventaire,\n                    stock: e.target.value,\n                  });\n                }}\n              />{\" \"}\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                label={\"Comentario\"}\n                type=\"text\"\n                value={newInventaire.commentaire}\n                onChange={(e) => {\n                  setNewInventaire({\n                    ...newInventaire,\n                    commentaire: e.target.value,\n                  });\n                }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Cerrar\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Confirmar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nexport default function FormDialog({\n  alimentsList,\n  handleSnackbar,\n  setMaj,\n  maj,\n}) {\n  const [open, setOpen] = useState(false);\n  const [newInventaire, setNewInventaire] = useState({\n    id: 1,\n    libelle: \"\",\n    date: \"\",\n    entre: 0,\n    commentaire: \"\",\n  });\n\n  const handleConfirm = () => {\n    if (newInventaire.date.length !== 10) {\n      handleSnackbar(\"danger\", \"Formato de fecha incorrecto\");\n    } else {\n      var url = \"/api/entre\";\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...newInventaire,\n          entre: parseInt(newInventaire.entre),\n        }),\n      };\n      authFetch(url, requestOptions)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          handleSnackbar(\"success\", response.message);\n          setMaj(~maj);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n      setNewInventaire({\n        id: 1,\n        libelle: \"\",\n        entre: 0,\n        commentaire: \"\",\n        date: \"\",\n      });\n    }\n  };\n  return (\n    <div>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setOpen(true)}\n      >\n        Compra de alimento\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Compra de alimento</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={4}>\n              <FormControl style={{ minWidth: \"150px\" }}>\n                <InputLabel id=\"Alimento-label\">Alimento</InputLabel>\n                <Select\n                  labelId=\"Alimento-label\"\n                  id=\"Alimento-select\"\n                  value={newInventaire.id}\n                  onChange={(e) =>\n                    setNewInventaire({ ...newInventaire, id: e.target.value })\n                  }\n                >\n                  {alimentsList.map((a, key) => (\n                    <MenuItem key={key} value={a[0]}>\n                      {a[1]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>{\" \"}\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                label={\"Fecha\"}\n                type=\"text\"\n                value={newInventaire.date}\n                onChange={(e) => {\n                  setNewInventaire({\n                    ...newInventaire,\n                    date: e.target.value,\n                  });\n                }}\n              />{\" \"}\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                label={\"Cantidad\"}\n                type=\"text\"\n                value={newInventaire.entre}\n                onChange={(e) => {\n                  setNewInventaire({\n                    ...newInventaire,\n                    entre: e.target.value,\n                  });\n                }}\n              />{\" \"}\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                label={\"Comentario\"}\n                type=\"text\"\n                value={newInventaire.commentaire}\n                onChange={(e) => {\n                  setNewInventaire({\n                    ...newInventaire,\n                    commentaire: e.target.value,\n                  });\n                }}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Cerrar\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\">\n            Confirmar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport VentesParJour from \"../VentesParJour\";\n\nexport default function FormDialog({ filtre, setMaj, maj, date, nomAliment }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      <Button\n        id=\"ButtonDialog\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => setOpen(true)}\n      >\n        Ver ventas de alimento\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n        maxWidth=\"lg\"\n      >\n        <DialogContent style={{ minWidth: \"800px\" }}>\n          <VentesParJour\n            maj={maj}\n            setMaj={setMaj}\n            filtre={filtre}\n            defaultDate={date}\n            nomAliment={nomAliment}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n            }}\n            color=\"primary\"\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport CardMat from \"components/Card/Card.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport { authFetch } from \"auth\";\nimport AddInventaireDialog from \"../components/Dialog/AddInventaireDialog\";\nimport AddEntreAlimentDialog from \"../components/Dialog/AddEntreAlimentDialog\";\nimport {\n  CardHeader,\n  Grid,\n  FormControl,\n  Select,\n  MenuItem,\n  makeStyles,\n  TextField,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport CustomTableEdit from \"components/TableEdit\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { styled } from \"@material-ui/styles\";\nimport VoirVentes from \"components/Dialog/VoirVentes\";\n\nconst styles = (theme) => ({\n  select: {\n    color: \"white\",\n    \"&:before\": {\n      borderColor: \"white\",\n      color: \"white\",\n    },\n    \"&:after\": {\n      borderColor: \"white\",\n    },\n  },\n  multilineColor: {\n    color: \"white\",\n  },\n  input: {\n    root: {\n      \"& .MuiInputBase-root.Mui-disabled\": {\n        color: \"rgba(0, 0, 0,0.0)\",\n      },\n      \"& .MuiFormLabel-root.Mui-disabled\": {\n        color: \"rgba(0, 0, 0,0.0)\",\n      },\n    },\n  },\n  icon: {\n    fill: \"white\",\n  },\n});\n\nconst MyTextField = styled(TextField)({\n  \"& label.Mui-focused\": {\n    color: \"white\",\n  },\n  \"& .MuiFormLabel-root\": {\n    color: \"white\",\n  },\n  \"& .MuiInput-underline:after\": {\n    borderBottomColor: \"white\",\n  },\n  \"& .MuiInput-underline:before\": {\n    borderBottomColor: \"white\",\n  },\n  \"& .MuiOutlinedInput-root\": {\n    \"& fieldset\": {\n      borderColor: \"red\",\n    },\n    \"&:hover fieldset\": {\n      borderColor: \"yellow\",\n    },\n    \"&.Mui-focused fieldset\": {\n      borderColor: \"green\",\n    },\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport default function Stocks() {\n  const [stocks, setStocks] = useState([]);\n  const [alimentList, setAlimentList] = useState([]);\n  const [filtre, setFiltre] = useState(2);\n  const [dateDebut, setDateDebut] = useState(\"10/06/2021\");\n  const [tableHeaders] = useState([\n    \"Fecha\",\n    \"Alimentacion\",\n    \"Compras\",\n    \"Ventas\",\n    \"Diff de stock\",\n    \"Stock\",\n    \"Comentario\",\n  ]);\n  const [maj, setMaj] = useState(true);\n\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n\n  const classes = useStyles();\n\n  let dateOneYear = new Date();\n  dateOneYear.setMonth(dateOneYear.getMonth() - 12);\n\n  useEffect(() => {\n    console.log(alimentList);\n  }, [alimentList]);\n\n  useEffect(() => {\n    if (dateDebut.length === 10) {\n      const date =\n        dateDebut.substring(6, 10) +\n        \"-\" +\n        dateDebut.substring(3, 5) +\n        \"-\" +\n        dateDebut.substring(0, 2);\n      const url = \"/api/stocks/\" + filtre + \"/\" + date;\n      authFetch(url)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          setStocks(response.stocks);\n          setAlimentList(response.alimentList);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    }\n  }, [maj, filtre, dateDebut]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      {alimentList.length !== 0 ? (\n        <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\n          <Grid item style={{ margin: \"5px\" }}>\n            <AddInventaireDialog\n              alimentsList={alimentList}\n              maj={maj}\n              setMaj={setMaj}\n              handleSnackbar={handleSnackbar}\n            />\n          </Grid>\n          <Grid item>\n            <AddEntreAlimentDialog\n              alimentsList={alimentList}\n              maj={maj}\n              setMaj={setMaj}\n              handleSnackbar={handleSnackbar}\n            />\n          </Grid>\n        </Grid>\n      ) : null}\n      <Grid item xs={12}>\n        {tableHeaders === \"\" || stocks.length === 0 ? null : (\n          <CardMat style={{ marginTop: \"0px\" }}>\n            <CardHeader\n              style={{\n                color: \"white\",\n                backgroundColor: \"#3f51b5\",\n                fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n                fontSize: \"34px\",\n                fontWeight: 400,\n                lineHeight: 1.235,\n              }}\n              color=\"info\"\n              title=\"Almacen\"\n              action={\n                <Grid\n                  container\n                  spacing={1}\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={4}>\n                    <FormControl\n                      style={{\n                        backgroundColor: \"#f50057\",\n                        color: \"fff\",\n                        boxShadow:\n                          \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\n                        borderRadius: \"4px\",\n                        marginRight: \"8px\",\n                        padding: 8,\n                      }}\n                    >\n                      <MyTextField\n                        InputProps={{\n                          className: classes.multilineColor,\n                        }}\n                        required\n                        color=\"warning\"\n                        label=\"Date dd/MM/yyyy\"\n                        type=\"text\"\n                        value={dateDebut}\n                        onChange={(e) => setDateDebut(e.target.value)}\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <FormControl\n                      style={{\n                        backgroundColor: \"#f50057\",\n                        color: \"fff\",\n                        boxShadow:\n                          \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\n                        borderRadius: \"4px\",\n                        marginRight: \"8px\",\n                        padding: 8,\n                      }}\n                    >\n                      <Select\n                        className={classes.select}\n                        inputProps={{\n                          classes: {\n                            icon: classes.icon,\n                          },\n                        }}\n                        labelId=\"aliment-label\"\n                        id=\"aliment-select\"\n                        value={filtre}\n                        onChange={(e) => setFiltre(e.target.value)}\n                      >\n                        {alimentList.map((aliment, key) => (\n                          <MenuItem key={key} value={aliment[0]}>\n                            {aliment[1]}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                      <FormHelperText style={{ color: \"white\" }}>\n                        Filtrar por alimento\n                      </FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <VoirVentes\n                      maj={maj}\n                      setMaj={setMaj}\n                      filtre={filtre}\n                      nomAliment={\n                        alimentList.length !== 0\n                          ? alimentList.find((a) => a[0] === filtre)[1]\n                          : \"\"\n                      }\n                      date={dateDebut}\n                    ></VoirVentes>\n                  </Grid>\n                </Grid>\n              }\n            ></CardHeader>\n            <CardBody>\n              <CustomTableEdit\n                tableHeaderColor=\"info\"\n                tableHead={tableHeaders}\n                tableData={stocks}\n                postUrl={\"/api/stock\"}\n              />\n            </CardBody>\n          </CardMat>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n","// @material-ui/icons\nimport List from \"@material-ui/icons/List\";\nimport Cycle from \"@material-ui/icons/Ballot\";\nimport AnalyseEau from \"@material-ui/icons/Assessment\";\nimport AddAnalyseEau from \"@material-ui/icons/AssignmentInd\";\nimport AlimentationIcon from \"@material-ui/icons/Restaurant\";\nimport AddChangementEauIcon from \"@material-ui/icons/LocalDrink\";\nimport VenteIcon from \"@material-ui/icons/AttachMoney\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\n// core components/views for Admin layout\nimport Table from \"views/Table\";\nimport Cycles from \"views/Cycles\";\nimport AnalysesEau from \"views/AnalysesEau\";\nimport AddAnalysesEau from \"views/AddAnalyseEau\";\nimport Alimentation from \"views/Alimentation\";\nimport AddChangementEau from \"views/AddChangementEau\";\nimport VenteCamarones from \"views/VenteCamarones\";\nimport VentePescados from \"views/VentePescados\";\nimport VenteAliment from \"views/VenteAliment\";\nimport Stocks from \"views/Stocks\";\n\nconst dashboardRoutes = [\n  {\n    path: \"/table\",\n    name: \"Examinar las tablas\",\n    icon: List,\n    component: Table,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\"],\n  },\n  {\n    path: \"/cycles\",\n    name: \"Gestión de los ciclos\",\n    icon: Cycle,\n    component: Cycles,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\"],\n  },\n  {\n    path: \"/analyseEau\",\n    name: \"Análisis de agua\",\n    icon: AnalyseEau,\n    component: AnalysesEau,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\"],\n  },\n  {\n    path: \"/addAnalyseEau\",\n    name: \"Añadir análisis de agua\",\n    icon: AddAnalyseEau,\n    component: AddAnalysesEau,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\", \"worker\"],\n  },\n  {\n    path: \"/alimentation\",\n    name: \"Alimentación diaria\",\n    icon: AlimentationIcon,\n    component: Alimentation,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\", \"worker\"],\n  },\n  {\n    path: \"/changementEau\",\n    name: \"Añadir un recambio de agua\",\n    icon: AddChangementEauIcon,\n    component: AddChangementEau,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\", \"worker\"],\n  },\n  {\n    path: \"/ventesCamarones\",\n    name: \"Venta de Camarones\",\n    icon: VenteIcon,\n    component: VenteCamarones,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\", \"worker\"],\n  },\n  {\n    path: \"/ventesPescados\",\n    name: \"Venta de Pescados\",\n    icon: VenteIcon,\n    component: VentePescados,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\", \"worker\"],\n  },\n  {\n    path: \"/mouvement\",\n    name: \"Venta de alimento\",\n    icon: VenteIcon,\n    component: VenteAliment,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\"],\n  },\n  {\n    path: \"/stocks\",\n    name: \"Almacen\",\n    icon: HomeIcon,\n    component: Stocks,\n    layout: \"/copeyito\",\n    roles: [\"admin\", \"boss\", \"worker\"],\n  },\n];\n\nexport default dashboardRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport \"assets/css/App.css\";\nimport { authFetch } from \"auth\";\nimport CustomTableEdit from \"components/TableEdit\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport AddEnregistrementDB from \"components/Dialog/AddEnregistrementDB\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  FormControl,\n  Select,\n  InputLabel,\n  MenuItem,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n\nexport default function Table() {\n  const [table, setTable] = useState(\"Bassins\");\n  const [tableHeaders, setTableHeaders] = useState(\"\");\n  const [tableData, setTableData] = useState(\"\");\n\n  const [maj, setMaj] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [tc, setTC] = useState(false);\n\n  useEffect(() => {\n    var url = \"/api/table/\" + table;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setTableHeaders(response.headers);\n        setTableData(response.data);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    setMaj(false);\n  }, [maj, table]);\n\n  const handleTableChange = (e) => {\n    setTable(e.target.value);\n  };\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <div id=\"#copeyito\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid container spacing={1}>\n        <Grid item xs={12} align=\"center\" container>\n          <Grid item xs={2} align=\"center\">\n            <FormControl>\n              <InputLabel id=\"table-label\">Table</InputLabel>\n              <Select\n                labelId=\"table-label\"\n                id=\"table-select\"\n                value={table}\n                onChange={handleTableChange}\n              >\n                <MenuItem value={\"Bassins\"}>Bassins</MenuItem>\n                <MenuItem value={\"Especes\"}>Espèces</MenuItem>\n                <MenuItem value={\"Pompes\"}>Pompes</MenuItem>\n                <MenuItem value={\"Mortalite\"}>Mortalité</MenuItem>\n                <MenuItem value={\"TypeAliment\"}>Type d'aliments</MenuItem>\n                <MenuItem value={\"Croissance\"}>Croissance</MenuItem>\n              </Select>\n              <FormHelperText>Sélectionner la table à afficher</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={6} align=\"left\">\n            <AddEnregistrementDB\n              type={table}\n              handleSnackbar={handleSnackbar}\n              setMaj={setMaj}\n              maj={maj}\n            />\n          </Grid>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          {tableHeaders === \"\" || tableData === \"\" ? null : (\n            <Card>\n              <CardHeader color=\"info\">\n                <Typography variant=\"h4\">{table}</Typography>\n              </CardHeader>\n              <CardBody>\n                <CustomTableEdit\n                  tableHeaderColor=\"info\"\n                  tableHead={tableHeaders}\n                  tableData={tableData}\n                  postUrl={\"/api/table/\" + table}\n                />\n              </CardBody>\n            </Card>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"assets/css/App.css\";\nimport { authFetch } from \"auth\";\nimport CustomTableEdit from \"components/CyclesTable\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { Grid, CardHeader } from \"@material-ui/core\";\nimport FormDialog from \"components/Dialog/AddCycleDialog\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n\nexport default function Cycles() {\n  const [tableHeaders, setTableHeaders] = useState(\"\");\n  const [tableData, setTableData] = useState(\"\");\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [espece, setEspece] = useState(\"Tout\");\n  const [maj, setMaj] = useState(true);\n\n  useEffect(() => {\n    var url = \"/api/cycles/\" + espece;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setTableHeaders([\n          \"Estanque\",\n          \"Fecha lleno\",\n          \"Fecha vacio\",\n          \"Alimentacion\",\n          \"Alimentacion téo\",\n          \"Superficie\",\n          \"# meses\",\n          \"Especie\",\n          \"Fecha ultima pesca\",\n          \"Peso sembrado\",\n          \"Peso pescado\",\n          \"Peso actual\",\n          \"Mortalidad\",\n          \"Rendimiento\",\n          \"Alimentacion total\",\n          \"Indice de conversion\",\n        ]);\n        setTableData(response.cycles);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [espece, tc, maj]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <div id=\"#copeyito\">\n      <Grid container spacing={1}>\n        <Snackbar\n          place=\"tc\"\n          color={color}\n          message={message}\n          open={tc}\n          closeNotification={() => setTC(false)}\n          close\n        />\n        <Grid item xs={12} align=\"center\">\n          {tableHeaders === \"\" || tableData === \"\" ? null : (\n            <Card style={{ marginBottom: \"0px\" }}>\n              <CardHeader\n                id=\"Header\"\n                color=\"primary\"\n                title=\"Ciclos\"\n                action={\n                  <FormDialog\n                    handleSnackbar={(cl, ms) => handleSnackbar(cl, ms)}\n                    setEspece={setEspece}\n                    espece={espece}\n                    maj={maj}\n                    setMaj={setMaj}\n                  />\n                }\n              />\n              <CardBody style={{ padding: \"3px\" }}>\n                <CustomTableEdit\n                  tableHeaderColor=\"primary\"\n                  tableHead={tableHeaders}\n                  setMessage\n                  tableData={tableData.sort((a, b) =>\n                    a.Estanque > b.Estanque ? 1 : -1\n                  )}\n                  postUrl=\"/api/cycles\"\n                  newLine={false}\n                  handleSnackbar={handleSnackbar}\n                  maj={maj}\n                  setMaj={setMaj}\n                />\n                <br />\n              </CardBody>\n            </Card>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  Button,\n  CardHeader,\n  Card,\n  CardContent,\n  FormControl,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport CustomTableDelete from \"components/TableDelete\";\nimport CardMat from \"components/Card/Card.js\";\nimport CardHeaderMat from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport { authFetch } from \"auth\";\n\nexport default function AddChangementEau() {\n  const [changementEau, setChangementEau] = useState({\n    bassin: \"\",\n    date: \"\",\n    heure: \"\",\n    pompe: \"\",\n    type: \"\",\n  });\n  const [bassinsList, setBassinsList] = useState([\"\"]);\n  const [pompesList, setPompesList] = useState([\"\"]);\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [tableHeaders] = useState([\n    \"id\",\n    \"Bassin\",\n    \"Pompe\",\n    \"Date\",\n    \"Heures\",\n    \"Type\",\n  ]);\n  const [tableData, setTableData] = useState(\"\");\n  const [maj, setMaj] = useState(true);\n\n  useEffect(() => {\n    var url = \"/api/pompes\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setBassinsList(response.bassins.sort((a, b) => (a[1] > b[1] ? 1 : -1)));\n        setPompesList(response.pompes.sort((a, b) => (a[1] > b[1] ? 1 : -1)));\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    url = \"/api/changementEau\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setTableData(response.changement);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [maj]);\n\n  const handleConfirm = () => {\n    var url = \"/api/pompes\";\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ...changementEau,\n        date:\n          changementEau.date.substring(6, 10) +\n          \"-\" +\n          changementEau.date.substring(3, 5) +\n          \"-\" +\n          changementEau.date.substring(0, 2),\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    setChangementEau({\n      bassin: \"\",\n      date: \"\",\n      heure: \"\",\n      pompe: \"\",\n      type: \"\",\n    });\n  };\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid item>\n        <Card>\n          <CardHeader\n            style={{ textAlign: \"center\" }}\n            title=\"Añadir un recambio de agua\"\n          />\n          <CardContent>\n            <Grid\n              item\n              container\n              spacing={3}\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControl>\n                  <InputLabel id=\"bassin-label\">Estanque</InputLabel>\n                  <Select\n                    labelId=\"bassin-label\"\n                    id=\"bassin-select\"\n                    value={changementEau.bassin}\n                    onChange={(e) =>\n                      setChangementEau({\n                        ...changementEau,\n                        bassin: e.target.value,\n                      })\n                    }\n                  >\n                    {bassinsList.map((Bassin, key) => (\n                      <MenuItem key={key} value={Bassin[0]}>\n                        {Bassin[1]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <FormHelperText>Seleccione un estanque</FormHelperText>\n                </FormControl>\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <InputLabel id=\"pompe-label\">Bomba</InputLabel>\n                  <Select\n                    labelId=\"pompe-label\"\n                    id=\"pompe-select\"\n                    value={changementEau.pompe}\n                    onChange={(e) =>\n                      setChangementEau({\n                        ...changementEau,\n                        pompe: e.target.value,\n                      })\n                    }\n                  >\n                    {pompesList.map((pompe, key) => (\n                      <MenuItem key={key} value={pompe[0]}>\n                        {pompe[1]}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <FormHelperText>Seleccione una bomba</FormHelperText>\n                </FormControl>\n              </Grid>\n              <Grid item>\n                <TextField\n                  required\n                  label=\"Fecha dd/MM/yyyy\"\n                  type=\"text\"\n                  value={changementEau.date}\n                  onChange={(e) =>\n                    setChangementEau({ ...changementEau, date: e.target.value })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  required\n                  label=\"Hora\"\n                  value={changementEau.heure}\n                  onChange={(e) =>\n                    setChangementEau({\n                      ...changementEau,\n                      heure: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <FormControl style={{ minWidth: \"100px\" }}>\n                  <InputLabel id=\"type-label\">Typo</InputLabel>\n                  <Select\n                    labelId=\"type-label\"\n                    id=\"type-select\"\n                    value={changementEau.type}\n                    onChange={(e) =>\n                      setChangementEau({\n                        ...changementEau,\n                        type: e.target.value,\n                      })\n                    }\n                  >\n                    <MenuItem value=\"L\">L</MenuItem>\n                    <MenuItem value=\"R\">R</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item>\n                <Button\n                  onClick={() => handleConfirm()}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Confirmar\n                </Button>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n        <Grid item>\n          {tableHeaders === \"\" || tableData === \"\" ? null : (\n            <CardMat style={{ marginTop: \"50px\" }}>\n              <CardHeaderMat color=\"info\">\n                <Typography variant=\"h4\"> Recambio de agua</Typography>\n              </CardHeaderMat>\n              <CardBody>\n                <CustomTableDelete\n                  tableHeaderColor=\"info\"\n                  tableHead={tableHeaders}\n                  tableData={tableData}\n                  postUrl={\"/api/changementEau\"}\n                  maj={maj}\n                  setMaj={setMaj}\n                />\n              </CardBody>\n            </CardMat>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  Button,\n  CardHeader,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport CustomTableEdit from \"components/TableEdit\";\nimport CardMat from \"components/Card/Card.js\";\nimport CardHeaderMat from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport { authFetch } from \"auth\";\n\nexport default function Venta() {\n  const [venteCrevette, setVenteCrevette] = useState({\n    date: \"\",\n    u5: 0,\n    u6: 0,\n    u8: 0,\n    u10: 0,\n    u12: 0,\n    u15: 0,\n    u16_u20: 0,\n    u21_u25: 0,\n    decortique: 0,\n  });\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [tableHeaders] = useState([\n    \"fecha\",\n    \"u5\",\n    \"u6\",\n    \"u8\",\n    \"u10\",\n    \"u12\",\n    \"u15\",\n    \"u16/20\",\n    \"u21/25\",\n    \"pelado\",\n    \"total venta\",\n    \"total pesca\",\n    \"% perdida\",\n  ]);\n  const [tableData, setTableData] = useState(\"\");\n  const [maj, setMaj] = useState(true);\n\n  useEffect(() => {\n    var url = \"/api/ventes/crevettes\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setTableData(response.ventes);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [maj]);\n\n  const handleConfirm = () => {\n    var url = \"/api/ventes/crevettes\";\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ...venteCrevette,\n        date:\n          venteCrevette.date.substring(6, 10) +\n          \"-\" +\n          venteCrevette.date.substring(3, 5) +\n          \"-\" +\n          venteCrevette.date.substring(0, 2),\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        if (response.message === \"Fecha ya introducida\") {\n          handleSnackbar(\"warning\", response.message);\n        } else {\n          handleSnackbar(\"success\", response.message);\n          setMaj(~maj);\n        }\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid item>\n        <Card>\n          <CardHeader\n            style={{ textAlign: \"center\" }}\n            title=\"Añadir una venta de camarones\"\n          />\n          <CardContent>\n            <Grid\n              item\n              container\n              spacing={3}\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={2}>\n                <TextField\n                  required\n                  label=\"Fecha dd/MM/yyyy\"\n                  type=\"text\"\n                  value={venteCrevette.date}\n                  onChange={(e) =>\n                    setVenteCrevette({ ...venteCrevette, date: e.target.value })\n                  }\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <TextField\n                  required\n                  type=\"number\"\n                  label=\"u5\"\n                  value={venteCrevette.u5}\n                  onChange={(e) =>\n                    setVenteCrevette({\n                      ...venteCrevette,\n                      u5: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <TextField\n                  required\n                  type=\"number\"\n                  label=\"u6\"\n                  value={venteCrevette.u6}\n                  onChange={(e) =>\n                    setVenteCrevette({\n                      ...venteCrevette,\n                      u6: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <TextField\n                  required\n                  type=\"number\"\n                  label=\"u8\"\n                  value={venteCrevette.u8}\n                  onChange={(e) =>\n                    setVenteCrevette({\n                      ...venteCrevette,\n                      u8: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <TextField\n                  required\n                  type=\"number\"\n                  label=\"u10\"\n                  value={venteCrevette.u10}\n                  onChange={(e) =>\n                    setVenteCrevette({\n                      ...venteCrevette,\n                      u10: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <TextField\n                  required\n                  type=\"number\"\n                  label=\"u12\"\n                  value={venteCrevette.u12}\n                  onChange={(e) =>\n                    setVenteCrevette({\n                      ...venteCrevette,\n                      u12: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <TextField\n                  required\n                  type=\"number\"\n                  label=\"u15\"\n                  value={venteCrevette.u15}\n                  onChange={(e) =>\n                    setVenteCrevette({\n                      ...venteCrevette,\n                      u15: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <TextField\n                  required\n                  type=\"number\"\n                  label=\"u16_u20\"\n                  value={venteCrevette.u16_u20}\n                  onChange={(e) =>\n                    setVenteCrevette({\n                      ...venteCrevette,\n                      u16_u20: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <TextField\n                  required\n                  type=\"number\"\n                  label=\"u21_u25\"\n                  value={venteCrevette.u21_u25}\n                  onChange={(e) =>\n                    setVenteCrevette({\n                      ...venteCrevette,\n                      u21_u25: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <TextField\n                  required\n                  type=\"number\"\n                  label=\"Décortiqué\"\n                  value={venteCrevette.decortique}\n                  onChange={(e) =>\n                    setVenteCrevette({\n                      ...venteCrevette,\n                      decortique: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  onClick={() => handleConfirm()}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Confirmar\n                </Button>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n        <Grid item>\n          {tableHeaders === \"\" || tableData === \"\" ? null : (\n            <CardMat style={{ marginTop: \"50px\" }}>\n              <CardHeaderMat color=\"info\">\n                <Typography variant=\"h4\"> Venta de camarones</Typography>\n              </CardHeaderMat>\n              <CardBody>\n                {console.log(tableData)}\n                <CustomTableEdit\n                  tableHeaderColor=\"info\"\n                  tableHead={tableHeaders}\n                  tableData={tableData}\n                  postUrl={\"/api/ventes/crevettes\"}\n                />\n              </CardBody>\n            </CardMat>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { authFetch } from \"auth\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  Typography,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  Table,\n  TextField,\n} from \"@material-ui/core\";\n\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport CustomTableDelete from \"./TableDelete\";\nimport CardBody from \"./Card/CardBody\";\nimport AddSemisDialog from \"./Dialog/AddSemisDialog\";\nimport AddPechesDialog from \"./Dialog/AddPechesDialog\";\nimport AddStatsDialog from \"./Dialog/AddStatsDialog\";\nimport AddLotDialog from \"./Dialog/AddLotDialog\";\nimport CustomTableEditDelete from \"./TableEditDelete\";\n\nexport default function Lots({ cycle_, resetCycle }) {\n  const [cycle, setCycle] = useState(cycle_.toString());\n  const [lot, setLot] = useState(\"\");\n  const [comm, setComm] = useState(\"\");\n  const [lotsMenu, setLotsMenu] = useState([]);\n\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [data, setData] = useState({ peches: [], semis: [], statistiques: [] });\n  const [espece, setEspece] = useState(\"Tilapia\");\n  const [maj, setMaj] = useState(true);\n  const [majLots, setMajLots] = useState(true);\n  const [total, setTotal] = useState(undefined);\n\n  useEffect(() => {\n    var url = \"/api/ancienLots/\" + cycle;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setLotsMenu(response.lotsList);\n        console.log(response.lotsList);\n        setLot(response.lotsList[0][2]);\n        setComm(response.lotsList[0][3]);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [cycle, majLots]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  useEffect(() => {\n    if (lot !== undefined && lot !== \"\") {\n      var url = \"/api/lotData/\" + lot;\n      authFetch(url)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((response) => {\n          setEspece(response.espece ? response.espece[0] : \"\");\n          setData({\n            peches: response.peches,\n            semis: response.semis,\n            statistiques: response.statistiques,\n          });\n          setTotal(response.total);\n        })\n        .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n    }\n  }, [lot, maj]);\n\n  const endLot = () => {\n    var url = \"/api/lots\";\n    var mortalite =\n      ((total.totalSemis[1] - total.totalPeches[1]) * total.totalActuel[3]) /\n      (total.totalSemis[1] - total.totalPeches[1] - total.totalActuel[0]);\n\n    const dateToday = new Date().toISOString().substring(0, 10);\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: lot,\n        quantitelb:\n          total.totalActuel[1] === 0\n            ? 0\n            : total.totalActuel[0] / total.totalActuel[1],\n        mortalite: mortalite,\n        date:\n          data.peches.length > 0\n            ? data.peches[data.peches.length - 1].fecha\n            : dateToday.substring(8) +\n              \"/\" +\n              dateToday.substring(5, 7) +\n              \"/\" +\n              dateToday.substring(0, 4),\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMajLots(~majLots);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  const handleConfirm = () => {\n    var url = \"/api/alimentation\";\n\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: lot,\n        poids: total.alimentation,\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n        setMaj(~maj);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  return (\n    <div id=\"lot\">\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        open={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={2} align=\"center\">\n          <Typography variant=\"h4\">{espece}</Typography>\n        </Grid>\n        <Grid item xs={2} align=\"center\">\n          <Typography variant=\"p\">{comm}</Typography>\n        </Grid>\n        <Grid container spacing={1} item xs={4} align=\"center\" justify=\"center\">\n          {lotsMenu.map((Lot, key) => (\n            <Grid key={key} item>\n              <Button\n                key={key + 1000}\n                variant=\"contained\"\n                color={Lot[5] === 1 ? \"green\" : \"secondary\"}\n                onClick={() => setLot(Lot[2])}\n              >\n                {Lot[4]}\n              </Button>\n            </Grid>\n          ))}\n          <Grid item>\n            <AddLotDialog\n              cycle={cycle}\n              handleSnackbar={handleSnackbar}\n              setMaj={setMajLots}\n              maj={majLots}\n            />\n          </Grid>\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={resetCycle}>\n              Back\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item xs={6} container align=\"center\">\n          {/* Semis */}\n          <Card style={{ width: \"100%\" }}>\n            <CardHeader\n              style={{ padding: \"8px\", paddingRight: \"16px\" }}\n              id=\"Header\"\n              color=\"secondary\"\n              title=\"Siembra\"\n              action={\n                <AddSemisDialog\n                  lot={lot}\n                  handleSnackbar={handleSnackbar}\n                  setMaj={setMaj}\n                  maj={maj}\n                  espece={espece}\n                />\n              }\n            />\n            <CardBody style={{ padding: 0 }}>\n              <CustomTableDelete\n                tableHead={[\n                  \"fecha\",\n                  \"peso\",\n                  \"cant/lb\",\n                  \"gr/unidad\",\n                  \"cantidad\",\n                  \"comentario\",\n                ]}\n                tableHeaderColor=\"primary\"\n                tableData={data.semis}\n                postUrl={\"/api/lotData/Semis\"}\n                newLine={true}\n                info_for_post={lot}\n                setMaj={setMaj}\n                maj={maj}\n              />\n            </CardBody>\n          </Card>\n        </Grid>\n        <Grid item xs={6} container align=\"center\">\n          {/* Statistiques */}\n          <Card style={{ width: \"100%\" }}>\n            <CardHeader\n              style={{ padding: \"8px\", paddingRight: \"16px\" }}\n              id=\"Header\"\n              color=\"info\"\n              title=\"Estadísticas\"\n              action={\n                <AddStatsDialog\n                  lot={lot}\n                  handleSnackbar={handleSnackbar}\n                  setMaj={setMaj}\n                  maj={maj}\n                  espece={espece}\n                  mortTheo={total ? total.totalActuel[3] : null}\n                />\n              }\n            />\n            <CardBody style={{ padding: 0 }}>\n              <CustomTableDelete\n                tableHead={[\n                  \"fecha\",\n                  \"typoestat\",\n                  \"cant/lb\",\n                  \"gr/unidad\",\n                  \"mortalidad\",\n                  \"comentario\",\n                ]}\n                tableHeaderColor=\"primary\"\n                tableData={data.statistiques}\n                postUrl={\"/api/lotData/Statistiques\"}\n                newLine={true}\n                info_for_post={lot}\n                setMaj={setMaj}\n                maj={maj}\n              />\n            </CardBody>\n          </Card>\n        </Grid>\n        <Grid item xs={6} container align=\"center\">\n          {/* Peches */}\n          <Card style={{ width: \"100%\" }}>\n            <CardHeader\n              style={{ padding: \"8px\", paddingRight: \"16px\" }}\n              id=\"Header\"\n              color=\"primary\"\n              title=\"Pescas\"\n              action={\n                <AddPechesDialog\n                  lot={lot}\n                  handleSnackbar={handleSnackbar}\n                  setMaj={setMaj}\n                  maj={maj}\n                  espece={espece}\n                />\n              }\n            />\n            <CardBody style={{ padding: 0 }}>\n              <CustomTableEditDelete\n                tableHead={[\n                  \"fecha\",\n                  \"peso\",\n                  \"cant/lb\",\n                  \"gr/unidad\",\n                  \"cantidad\",\n                  \"comentario\",\n                  \"destino\",\n                ]}\n                tableHeaderColor=\"primary\"\n                tableData={data.peches}\n                postUrl={\"/api/peches/\" + lot}\n                deleteUrl={\"/api/lotData/Peches\"}\n                newLine={true}\n                setMaj={setMaj}\n                maj={maj}\n              />\n            </CardBody>\n          </Card>\n        </Grid>\n        <Grid item xs={6} container align=\"center\">\n          {/* Total */}\n          <Card style={{ width: \"100%\" }}>\n            <CardHeader\n              style={{ padding: \"8px\", paddingRight: \"16px\" }}\n              id=\"Header\"\n              color=\"primary\"\n              title=\"Total\"\n              action={\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => endLot()}\n                >\n                  Terminar el lote\n                </Button>\n              }\n            />\n            <CardBody style={{ padding: 0 }}>\n              {total ? (\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"total\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>{\"\"}</TableCell>\n                        <TableCell>animales</TableCell>\n                        <TableCell>libras</TableCell>\n                        <TableCell>\n                          {espece.substring(0, 10) === \"Postlarves\" ||\n                          espece.substring(0, 9) === \"Juvéniles\"\n                            ? \"animales por libras\"\n                            : \"grpoisson\"}\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow>\n                        <TableCell>Siembra</TableCell>\n                        <TableCell>{total.totalSemis[1]}</TableCell>\n                        <TableCell>{total.totalSemis[0]}</TableCell>\n                        <TableCell>\n                          {espece.substring(0, 10) === \"Postlarves\" ||\n                          espece.substring(0, 9) === \"Juvéniles\"\n                            ? Math.round(\n                                (total.totalSemis[1] / total.totalSemis[0]) * 10\n                              ) / 10\n                            : Math.round(\n                                ((total.totalSemis[0] * 454) /\n                                  total.totalSemis[1]) *\n                                  10\n                              ) / 10}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell>Pesca</TableCell>\n                        <TableCell>{total.totalPeches[1]}</TableCell>\n                        <TableCell>{total.totalPeches[0]}</TableCell>\n                        <TableCell>\n                          {espece.substring(0, 10) === \"Postlarves\" ||\n                          espece.substring(0, 9) === \"Juvéniles\"\n                            ? Math.round(\n                                (total.totalPeches[1] / total.totalPeches[0]) *\n                                  10\n                              ) / 10\n                            : Math.round(\n                                ((total.totalPeches[0] * 454) /\n                                  total.totalPeches[1]) *\n                                  10\n                              ) / 10}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell>Actual teo</TableCell>\n                        <TableCell>\n                          {total.totalActuel[0] < 0 ? 0 : total.totalActuel[0]}\n                        </TableCell>\n                        <TableCell>\n                          {total.totalActuel[1] < 0 ? 0 : total.totalActuel[1]}\n                        </TableCell>\n                        <TableCell>\n                          {total.totalActuel[0] <= 0 ||\n                          total.totalActuel[1] <= 0\n                            ? 0\n                            : espece.substring(0, 10) === \"Postlarves\" ||\n                              espece.substring(0, 9) === \"Juvéniles\"\n                            ? Math.round(\n                                (total.totalActuel[0] / total.totalActuel[1]) *\n                                  10\n                              ) / 10\n                            : Math.round(\n                                ((total.totalActuel[1] * 454) /\n                                  total.totalActuel[0]) *\n                                  10\n                              ) / 10}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell>Actual stat</TableCell>\n                        <TableCell>\n                          {data.statistiques && data.statistiques.length > 0\n                            ? Math.round(\n                                total.totalSemis[1] -\n                                  ((total.totalSemis[1] -\n                                    total.totalPeches[1] -\n                                    total.totalActuel[0]) *\n                                    parseFloat(\n                                      data.statistiques[\n                                        data.statistiques.length - 1\n                                      ].mortalidad.substring(-2)\n                                    )) /\n                                    100 /\n                                    total.totalActuel[3]\n                              ) -\n                                total.totalPeches[1] >\n                              0\n                              ? Math.round(\n                                  total.totalSemis[1] -\n                                    ((total.totalSemis[1] -\n                                      total.totalPeches[1] -\n                                      total.totalActuel[0]) *\n                                      parseFloat(\n                                        data.statistiques[\n                                          data.statistiques.length - 1\n                                        ].mortalidad.substring(-2)\n                                      )) /\n                                      100 /\n                                      total.totalActuel[3]\n                                ) - total.totalPeches[1]\n                              : 0\n                            : null}\n                        </TableCell>\n                        <TableCell>\n                          {/* console.log(\n                                total.totalSemis[1],\n                                total.totalPeches[1],\n                                total.totalActuel[0],\n                                parseFloat(\n                                  data.statistiques[\n                                    data.statistiques.length - 1\n                                  ].mortalidad.substring(-2)\n                                ) / 100,\n                                total.totalActuel[3],\n                                total.totalPeches[1],\n                                data.statistiques[data.statistiques.length - 1][\n                                  \"cant/lb\"\n                                ]\n                              ) */}\n                          {data.statistiques && data.statistiques.length > 0\n                            ? Math.round(\n                                (total.totalSemis[1] -\n                                  ((total.totalSemis[1] -\n                                    total.totalPeches[1] -\n                                    total.totalActuel[0]) *\n                                    parseFloat(\n                                      data.statistiques[\n                                        data.statistiques.length - 1\n                                      ].mortalidad.substring(-2)\n                                    )) /\n                                    100 /\n                                    total.totalActuel[3] -\n                                  total.totalPeches[1]) /\n                                  data.statistiques[\n                                    data.statistiques.length - 1\n                                  ][\"cant/lb\"]\n                              ) > 0\n                              ? Math.round(\n                                  (total.totalSemis[1] -\n                                    ((total.totalSemis[1] -\n                                      total.totalPeches[1] -\n                                      total.totalActuel[0]) *\n                                      parseFloat(\n                                        data.statistiques[\n                                          data.statistiques.length - 1\n                                        ].mortalidad.substring(-2)\n                                      )) /\n                                      100 /\n                                      total.totalActuel[3] -\n                                    total.totalPeches[1]) /\n                                    data.statistiques[\n                                      data.statistiques.length - 1\n                                    ][\"cant/lb\"]\n                                )\n                              : 0\n                            : null}\n                        </TableCell>\n                        <TableCell>\n                          {data.statistiques && data.statistiques.length > 0\n                            ? espece.substring(0, 10) === \"Postlarves\" ||\n                              espece.substring(0, 9) === \"Juvéniles\"\n                              ? data.statistiques[data.statistiques.length - 1][\n                                  \"cant/lb\"\n                                ]\n                              : Math.round(\n                                  data.statistiques[\n                                    data.statistiques.length - 1\n                                  ][\"gr/unidad\"] * 10\n                                ) / 10\n                            : null}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell colSpan={2} align=\"right\">\n                          Mort teo / stat\n                        </TableCell>\n                        <TableCell>\n                          {Math.round(total.totalActuel[3] * 1000) / 10} %\n                        </TableCell>\n                        <TableCell>\n                          {data.statistiques && data.statistiques.length > 0\n                            ? data.statistiques[data.statistiques.length - 1]\n                                .mortalidad\n                            : null}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell colSpan={2} align=\"right\">\n                          Alimentacion teo / stat\n                        </TableCell>\n                        <TableCell>\n                          {total.totalActuel[4]} lbs{\" \"}\n                          {Math.round(total.totalActuel[5] * 10000) / 100} %\n                        </TableCell>\n                        <TableCell>\n                          {Math.round(total.alimentationstat * 10) / 10} lbs{\" \"}\n                          {Math.round(total.alimentationstatpourc * 10000) /\n                            100}{\" \"}\n                          %\n                        </TableCell>\n                        <TableCell>\n                          <TextField\n                            style={{ maxWidth: \"50px\" }}\n                            label=\"Dar  \"\n                            type=\"text\"\n                            value={total.alimentation}\n                            onChange={(e) =>\n                              setTotal({\n                                ...total,\n                                alimentation: e.target.value,\n                              })\n                            }\n                          />\n                        </TableCell>\n                      </TableRow>\n                      <TableRow>\n                        <TableCell colSpan={2} />\n                        <TableCell>Tiempo</TableCell>\n                        <TableCell>{total.totalActuel[2]} meses</TableCell>\n                        <TableCell>\n                          <Button onClick={handleConfirm} color=\"primary\">\n                            V\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              ) : null}\n            </CardBody>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { authFetch } from \"auth/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Button } from \"@material-ui/core\";\n// Icons\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport Lots from \"components/AncienLots\";\n\nconst useStyles = makeStyles(styles);\n\nconst editable = [\"Estanque\", \"Fecha lleno\", \"Fecha vacio\", \"Superficie\"];\n\nconst CustomTableCell = ({ row, name, onChange, i }) => {\n  const classes = useStyles();\n  const { isEditMode } = row;\n  return (\n    <TableCell\n      key={\"cell-custom-\" + row.id + \"-\" + i}\n      align=\"left\"\n      className={classes.tableCell}\n    >\n      {isEditMode && editable.includes(name) ? (\n        <Input\n          key={\"input-custom-\" + row.id + \"-\" + i}\n          value={row[name]}\n          name={name}\n          onChange={(e) => onChange(e, row)}\n          className={classes.tableCell}\n        />\n      ) : (\n        row[name]\n      )}\n    </TableCell>\n  );\n};\n\nexport default function CustomTableEdit(props) {\n  const {\n    tableHead,\n    tableData,\n    tableHeaderColor,\n    postUrl,\n    newLine,\n    handleSnackbar,\n    maj,\n    setMaj,\n  } = props;\n  const [rows, setRows] = useState(\n    tableData.map((data) => ({ ...data, ...{ isEditMode: false } }))\n  );\n  const [previous, setPrevious] = useState({});\n  const classes = useStyles();\n  const [openCycle, setOpenCycle] = useState({ bool: false, cycle: 0 });\n\n  useEffect(() => {\n    let setNull = (obj) => Object.keys(obj).forEach((k) => (obj[k] = null));\n    let temp1 = tableData.map((data) => ({\n      ...data,\n      ...{ isEditMode: false },\n    }));\n    let temp = [...temp1, { ...temp1[0] }];\n    setNull(temp[temp.length - 1]);\n    temp[temp.length - 1][\"id\"] = temp.length;\n    newLine\n      ? setRows(temp)\n      : setRows(\n          tableData.map((data) => ({ ...data, ...{ isEditMode: false } }))\n        );\n  }, [tableData, newLine]);\n\n  const onToggleEditMode = (id, change) => {\n    setRows((state) => {\n      return rows.map((row) => {\n        if (row.id === id) {\n          if (row.isEditMode && change) {\n            delete row.isEditMode;\n            const data = {\n              id: row[\"id\"],\n              Estanque: row[\"Estanque\"],\n              \"Fecha lleno\": row[\"Fecha lleno\"],\n              \"Fecha vacio\": row[\"Fecha vacio\"],\n              Superficie: row[\"Superficie\"],\n            };\n            const requestOptions = {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(data),\n            };\n            authFetch(postUrl, requestOptions)\n              .then((response) => {\n                return response.json();\n              })\n              .then((response) => {\n                handleSnackbar(\"success\", response.message);\n              })\n              .catch((e) => {\n                handleSnackbar(\"warning\", e);\n              });\n            return { ...row, isEditMode: false };\n          } else {\n            return { ...row, isEditMode: !row.isEditMode };\n          }\n        }\n        return row;\n      });\n    });\n  };\n\n  const onChange = (e, row) => {\n    if (!previous[row.id]) {\n      setPrevious((state) => ({ ...state, [row.id]: row }));\n    }\n    const value = e.target.value;\n    const name = e.target.name;\n    const { id } = row;\n    const newRows = rows.map((row) => {\n      if (row.id === id) {\n        return { ...row, [name]: value };\n      }\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  const onRevert = (id) => {\n    const newRows = rows.map((row) => {\n      if (row.id === id) {\n        return previous[id] ? previous[id] : row;\n      }\n      return row;\n    });\n    setRows(newRows);\n    setPrevious((state) => {\n      delete state[id];\n      return state;\n    });\n    onToggleEditMode(id, false);\n  };\n\n  const resetCycle = () => {\n    setOpenCycle({ bool: false, cycle: 0 });\n    setMaj(~maj);\n  };\n\n  return (\n    <Paper\n      style={{\n        margin: \"0px\",\n        height: \"100%\",\n        maxHeight: \"calc(100vh - 180px)\",\n      }}\n      className={classes.root}\n    >\n      {openCycle.bool ? (\n        <Lots cycle_={openCycle.cycle} resetCycle={resetCycle}></Lots>\n      ) : (\n        <Table className={classes.table} aria-label=\"caption table\">\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              <TableCell></TableCell>\n              {tableHead.map((prop, key) => {\n                return prop === \"id\" ? null : (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={\"cell-\" + key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows !== undefined\n              ? rows.map((row, key) => (\n                  <TableRow key={key}>\n                    <TableCell key={key} className={classes.selectTableCell}>\n                      {row.isEditMode ? (\n                        <>\n                          <IconButton\n                            aria-label=\"done\"\n                            onClick={() => onToggleEditMode(row.id, true)}\n                          >\n                            <DoneIcon />\n                          </IconButton>\n                          <IconButton\n                            aria-label=\"revert\"\n                            onClick={() => onRevert(row.id)}\n                          >\n                            <RevertIcon />\n                          </IconButton>\n                        </>\n                      ) : (\n                        <IconButton\n                          aria-label=\"delete\"\n                          onClick={() => onToggleEditMode(row.id)}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      )}\n                    </TableCell>\n                    {tableHead.map((item, i) => {\n                      return item === \"id\" ? null : (\n                        <CustomTableCell\n                          id={i}\n                          key={i}\n                          {...{ row, name: item, onChange }}\n                        />\n                      );\n                    })}\n                    <Button\n                      id={row.id}\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      onClick={(e) => {\n                        e.target.id === \"\"\n                          ? setOpenCycle({\n                              bool: true,\n                              cycle: e.target.parentNode.id,\n                            })\n                          : setOpenCycle({ bool: true, cycle: e.target.id });\n                      }}\n                    >\n                      +\n                    </Button>\n                  </TableRow>\n                ))\n              : null}\n          </TableBody>\n        </Table>\n      )}\n    </Paper>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/sidebar-2.22f68ba5.jpg\";","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"../assets/css/App.css\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Sidebar from \"components/Sidebar.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport routes from \"routes.js\";\nimport AncienCycle from \"../views/AncienCycle\";\n\nimport { useAuth, authFetch } from \"../auth\";\n\nimport image from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/logo.png\";\n\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\nconst useStyles = makeStyles(styles);\n\nlet ps;\n\nconst PrivateRoute = ({ component: Component, roles: roles, ...rest }) => {\n  const [logged] = useAuth();\n  const [role, setRole] = useState(undefined);\n\n  useEffect(() => {\n    var url = \"/api/user\";\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setRole(response.role);\n      });\n  }, []);\n\n  return roles && roles.includes(role) ? (\n    <Route\n      {...rest}\n      render={(props) =>\n        logged ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  ) : null;\n};\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/copeyito\") {\n        return (\n          <PrivateRoute\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n            roles={prop.roles}\n          />\n        );\n      }\n      return null;\n    })}\n    <Route\n      path=\"/copeyito/ancienCycle/:bassin/:dateDebut/:dateFin\"\n      component={AncienCycle}\n    />\n    <Redirect from=\"/copeyito\" to=\"/copeyito/dashboard\" />\n  </Switch>\n);\n\nexport default function Copeyito({ ...rest }) {\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n\n  return (\n    <div className={classes.wrapper}>\n      <Sidebar\n        routes={routes}\n        logoText={\"Copeyito\"}\n        logo={logo}\n        image={image}\n        handleDrawerToggle={handleDrawerToggle}\n        open={mobileOpen}\n        color={\"blue\"}\n        {...rest}\n      />\n      <div className={classes.mainPanel} ref={mainPanel}>\n        <Navbar\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        <div\n          style={{\n            padding: \"5px\",\n            marginTop: \"50px\",\n          }}\n          className={classes.content}\n        >\n          <div style={{ padding: \"0\" }} className={classes.container}>\n            {switchRoutes}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.13597d55.png\";","import {\n  drawerWidth,\n  transition,\n  container\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst appStyle = theme => ({\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\"\n  },\n  mainPanel: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    overflow: \"auto\",\n    position: \"relative\",\n    float: \"right\",\n    ...transition,\n    maxHeight: \"100%\",\n    width: \"100%\",\n    overflowScrolling: \"touch\"\n  },\n  content: {\n    marginTop: \"70px\",\n    padding: \"30px 15px\",\n    minHeight: \"calc(100vh - 123px)\"\n  },\n  container,\n  map: {\n    marginTop: \"70px\"\n  }\n});\n\nexport default appStyle;\n","import React, { useState, useEffect } from \"react\";\nimport \"assets/css/App.css\";\nimport { authFetch } from \"auth\";\nimport CustomTableEdit from \"components/AncienCyclesTable\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { Grid, CardHeader } from \"@material-ui/core\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\n\nimport { useParams } from \"react-router-dom\";\n\nexport default function Cycles() {\n  let { bassin, dateDebut, dateFin } = useParams();\n  const [tableHeaders, setTableHeaders] = useState(\"\");\n  const [tableData, setTableData] = useState(\"\");\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [maj, setMaj] = useState(true);\n\n  useEffect(() => {\n    var url = \"/api/ancienCycle/\" + bassin + \"/\" + dateDebut + \"/\" + dateFin;\n    authFetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setTableHeaders(Object.keys(response.cycles[0]));\n        setTableData(response.cycles);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [bassin, dateDebut, dateFin, tc, maj]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  return (\n    <div id=\"#copeyito\">\n      <Grid container spacing={1}>\n        <Snackbar\n          place=\"tc\"\n          color={color}\n          message={message}\n          open={tc}\n          closeNotification={() => setTC(false)}\n          close\n        />\n        <Grid item xs={12} align=\"center\">\n          {tableHeaders === \"\" || tableData === \"\" ? null : (\n            <Card style={{ marginBottom: \"0px\" }}>\n              <CardHeader id=\"Header\" color=\"primary\" title=\"Ciclos\" />\n              <CardBody style={{ padding: \"3px\" }}>\n                <CustomTableEdit\n                  tableHeaderColor=\"primary\"\n                  tableHead={tableHeaders}\n                  setMessage\n                  tableData={tableData.sort((a, b) =>\n                    a.Bassin > b.Bassin ? 1 : -1\n                  )}\n                  postUrl=\"/api/cycles\"\n                  newLine={false}\n                  handleSnackbar={handleSnackbar}\n                  maj={maj}\n                  setMaj={setMaj}\n                />\n                <br />\n              </CardBody>\n            </Card>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { authFetch } from \"auth\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport \"assets/css/App.css\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport { logout } from \"auth\";\n\nexport default function Copeyito({ ...rest }) {\n  const [openUsername, setOpenUsername] = useState(false);\n  const [openEmail, setOpenEmail] = useState(false);\n  const [openPassword, setOpenPassword] = useState(false);\n  const [openUserList, setOpenUserList] = useState(false);\n  const [openAddUser, setOpenAddUser] = useState(false);\n  const [user, setUser] = useState({\n    name: \"Default\",\n    email: \"defaul@gmail.com\",\n    roles: \"legacy\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [tc, setTC] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [color, setColor] = useState(\"primary\");\n  const [userList, setUserList] = useState([]);\n  const [newUser, setNewUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\",\n  });\n  useEffect(() => {\n    authFetch(\"/api/user\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        setUser({\n          name: response.name,\n          email: response.email,\n          roles: response.role,\n          password: \"\",\n          confirmPassword: \"\",\n        });\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  }, [setUser]);\n\n  useEffect(() => {\n    user.roles === \"admin\" || user.roles === \"boss\"\n      ? authFetch(\"/api/user/list\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error(response.statusText);\n            }\n          })\n          .then((response) => {\n            setUserList(response.list);\n          })\n          .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message))\n      : setUserList([]);\n  }, [user]);\n\n  const handleSnackbar = (cl, ms) => {\n    setColor(cl);\n    setMessage(ms);\n    setTC(true);\n    setTimeout(function () {\n      setTC(false);\n      setColor(\"\");\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  const handleSuppression = (username) => {\n    var url = \"/api/user/list\";\n    setOpenUserList(false);\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ username: username }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  const handleSubmitUser = () => {\n    var url = \"/api/user\";\n    setOpenEmail(false);\n    setOpenUsername(false);\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        username: user.name,\n        email: user.email,\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  const handlePasswordChange = () => {\n    var url = \"/api/user\";\n    setOpenPassword(false);\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        password: user.password,\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  const handleAddUser = () => {\n    var url = \"/api/user\";\n    setOpenAddUser(false);\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name: newUser.name,\n        email: newUser.email,\n        password: newUser.password,\n        role: newUser.role,\n      }),\n    };\n    authFetch(url, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      })\n      .then((response) => {\n        handleSnackbar(\"success\", response.message);\n      })\n      .catch((e) => handleSnackbar(\"danger\", e.name + \": \" + e.message));\n  };\n\n  return (\n    <div>\n      <Snackbar\n        place=\"tc\"\n        color={color}\n        message={message}\n        openUsername={tc}\n        closeNotification={() => setTC(false)}\n        close\n      />\n      <div id=\"login\">\n        <Grid container spacing={1}>\n          <Grid item xs={12} align=\"center\">\n            <Typography component=\"h2\" variant=\"h2\">\n              Profile\n            </Typography>\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <Typography component=\"h6\" variant=\"h6\">\n              Hi {user.name} 🙂!\n            </Typography>\n          </Grid>\n          {/* Username */}\n          <Grid item xs={12} align=\"center\">\n            <Button\n              id=\"ButtonDialog\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => setOpenUsername(true)}\n            >\n              Change username\n            </Button>\n            <Dialog\n              open={openUsername}\n              onClose={() => setOpenUsername(false)}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">\n                Change your username\n              </DialogTitle>\n              <DialogContent>\n                <Grid container spacing={1}>\n                  <Grid item>\n                    <TextField\n                      required\n                      id=\"new_username\"\n                      label=\"New username\"\n                      type=\"text\"\n                      variant=\"filled\"\n                      onChange={(e) => {\n                        setUser({ ...user, name: e.target.value });\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setOpenUsername(false)} color=\"primary\">\n                  Annuler\n                </Button>\n                <Button onClick={handleSubmitUser} color=\"primary\">\n                  Change\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Grid>\n          {/* Email */}\n          <Grid item xs={12} align=\"center\">\n            <Button\n              id=\"ButtonDialog\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => setOpenEmail(true)}\n            >\n              Change email\n            </Button>\n            <Dialog\n              open={openEmail}\n              onClose={() => setOpenEmail(false)}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">\n                Change your email\n              </DialogTitle>\n              <DialogContent>\n                <Grid container spacing={1}>\n                  <Grid item>\n                    <TextField\n                      required\n                      id=\"new_email\"\n                      label=\"New email\"\n                      type=\"text\"\n                      defaultValue={user.email}\n                      variant=\"filled\"\n                      onChange={(e) =>\n                        setUser({ ...user, email: e.target.value })\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setOpenEmail(false)} color=\"primary\">\n                  Annuler\n                </Button>\n                <Button onClick={handleSubmitUser} color=\"primary\">\n                  Change\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Grid>\n          {/* Password */}\n          <Grid item xs={12} align=\"center\">\n            <Button\n              id=\"ButtonDialog\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => setOpenPassword(true)}\n            >\n              Change password\n            </Button>\n            <Dialog\n              open={openPassword}\n              onClose={() => setOpenPassword(false)}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">\n                Change your password\n              </DialogTitle>\n              <DialogContent>\n                <Grid container spacing={1}>\n                  <Grid item>\n                    <TextField\n                      required\n                      id=\"new_password\"\n                      label=\"New password\"\n                      type=\"password\"\n                      variant=\"filled\"\n                      onChange={(e) =>\n                        setUser({ ...user, password: e.target.value })\n                      }\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      required\n                      error={\n                        user.password !== user.confirmPassword &&\n                        user.confirmPassword !== \"\"\n                          ? true\n                          : false\n                      }\n                      id=\"new_password_confirm\"\n                      label=\"Confirm new password\"\n                      type=\"password\"\n                      variant=\"filled\"\n                      onChange={(e) =>\n                        setUser({ ...user, confirmPassword: e.target.value })\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setOpenPassword(false)} color=\"primary\">\n                  Annuler\n                </Button>\n                <Button onClick={handlePasswordChange} color=\"primary\">\n                  Change\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Grid>\n          {/* User list */}\n          {user.roles === \"admin\" || user.roles === \"boss\" ? (\n            <>\n              <Grid item xs={12} align=\"center\">\n                <Button\n                  id=\"ButtonDialog\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => setOpenUserList(true)}\n                >\n                  Manage Users\n                </Button>\n                <Dialog\n                  open={openUserList}\n                  onClose={() => setOpenUserList(false)}\n                  aria-labelledby=\"form-dialog-title\"\n                >\n                  <DialogTitle id=\"form-dialog-title\">\n                    Manage user list\n                  </DialogTitle>\n                  <DialogContent>\n                    <Grid container spacing={1}>\n                      {userList.map((user) => {\n                        return (\n                          <Grid item xs={12} align=\"center\">\n                            <Typography component=\"p\">\n                              Email : {user[0]}, Username : {user[1]}, Role :{\" \"}\n                              {user[2]}, Active : {user[3] === 1 ? \"yes\" : \"no\"}\n                            </Typography>\n                            <Button\n                              onClick={() => handleSuppression(user[1])}\n                              color=\"primary\"\n                            >\n                              X\n                            </Button>\n                          </Grid>\n                        );\n                      })}\n                    </Grid>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                      onClick={() => setOpenUserList(false)}\n                      color=\"primary\"\n                    >\n                      Close\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </Grid>\n\n              <Grid item xs={12} align=\"center\">\n                <Button\n                  id=\"ButtonDialog\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => setOpenAddUser(true)}\n                >\n                  Add User\n                </Button>\n                <Dialog\n                  open={openAddUser}\n                  onClose={() => setOpenAddUser(false)}\n                  aria-labelledby=\"form-dialog-title\"\n                >\n                  <DialogTitle id=\"form-dialog-title\">Add User</DialogTitle>\n                  <DialogContent>\n                    <Grid container spacing={1} align=\"center\">\n                      <Grid item xs={12} align=\"center\">\n                        <TextField\n                          required\n                          id=\"new_name\"\n                          label=\"Name\"\n                          type=\"text\"\n                          variant=\"filled\"\n                          onChange={(e) =>\n                            setNewUser({ ...newUser, name: e.target.value })\n                          }\n                        />\n                      </Grid>\n                      <Grid item xs={12} align=\"center\">\n                        <TextField\n                          required\n                          id=\"new_email\"\n                          label=\"Email\"\n                          type=\"text\"\n                          variant=\"filled\"\n                          onChange={(e) =>\n                            setNewUser({ ...newUser, email: e.target.value })\n                          }\n                        />\n                      </Grid>\n                      <Grid item xs={12} align=\"center\">\n                        <TextField\n                          required\n                          id=\"new_password\"\n                          label=\"Password\"\n                          type=\"text\"\n                          variant=\"filled\"\n                          onChange={(e) =>\n                            setNewUser({ ...newUser, password: e.target.value })\n                          }\n                        />\n                      </Grid>\n                      <Grid item xs={12} align=\"center\">\n                        <TextField\n                          required\n                          id=\"new_role\"\n                          label=\"Role\"\n                          type=\"text\"\n                          variant=\"filled\"\n                          onChange={(e) =>\n                            setNewUser({ ...newUser, role: e.target.value })\n                          }\n                        />\n                      </Grid>\n                    </Grid>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                      onClick={() => setOpenAddUser(false)}\n                      color=\"primary\"\n                    >\n                      Close\n                    </Button>\n                    <Button onClick={handleAddUser} color=\"primary\">\n                      Add\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </Grid>\n            </>\n          ) : null}\n          <Grid container spacing={1} item xs={12} justify=\"center\">\n            <Grid item>\n              <Button\n                id=\"buttonBack\"\n                variant=\"contained\"\n                color=\"primary\"\n                href=\"/\"\n              >\n                Back\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                id=\"buttonLogout\"\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={logout}\n              >\n                Logout\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./assets/css/App.css\";\nimport { login, useAuth } from \"./auth\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\n\nimport Copeyito from \"./layouts/copeyito\";\nimport Profile from \"./layouts/profile\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function App() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\n          <PrivateRoute path=\"/\" component={Copeyito} />\n        </Switch>\n      </Router>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [logged] = useAuth();\n\n  const onSubmitClick = (e) => {\n    e.preventDefault();\n    let opts = {\n      username: username,\n      password: password,\n    };\n    fetch(\"/api/login\", {\n      method: \"post\",\n      body: JSON.stringify(opts),\n    })\n      .then((r) => r.json())\n      .then((token) => {\n        if (token.access_token) {\n          login(token);\n          console.log(token);\n        } else {\n          console.log(\"Please type in correct username/password\");\n        }\n      });\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <div id=\"login\">\n      {!logged ? (\n        <Grid container spacing={1}>\n          <Grid item xs={12} align=\"center\">\n            <Typography component=\"h4\" variant=\"h4\">\n              Login\n            </Typography>\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <TextField\n              required\n              id=\"username-input\"\n              label=\"Username\"\n              variant=\"outlined\"\n              onChange={handleUsernameChange}\n            />\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <TextField\n              required\n              id=\"password-input\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              onChange={handlePasswordChange}\n            />\n          </Grid>\n          <Grid item xs={12} align=\"center\">\n            <Button color=\"secondary\">Back</Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmitClick}>\n              Login\n            </Button>\n          </Grid>\n        </Grid>\n      ) : (\n        <Redirect to=\"/copeyito\" />\n      )}\n    </div>\n  );\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [logged] = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        logged ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/index.css\";\nimport App from \"./App\";\n\nimport \"assets/css/material-dashboard-react.css?v=1.9.0\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}